Парсинг статей на Habr от 2021-03-16 00:26:59.144289. Количество статей - 55.

+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |    Символы Unicode: о чём    |    Если вы пишете международное приложение, использующее     |           unicode            |
| pany/mailru/blog/547084 |     должен знать каждый      | несколько языков, то вам нужно кое-что знать о кодировке.    |             utf              |
|            /            |         разработчик          | Она отвечает за то, как текст отображается на экране. Я      |     никто не читает теги     |
|                         |                              | вкратце расскажу об истории кодировки и о её стандартизации, |                              |
|                         |                              | а затем мы поговорим о её использовании. Затронем немного и  |                              |
|                         |                              | теорию информатики.     Введение в кодировку  Компьютеры     |                              |
|                         |                              | понимают лишь двоичные числа — нули и единицы, это их язык.  |                              |
|                         |                              | Больше ничего. Одно число называется байтом, каждый байт     |                              |
|                         |                              | состоит из восьми битов. То есть восемь нулей и единиц       |                              |
|                         |                              | составляют один байт. Внутри компьютеров всё сводится к      |                              |
|                         |                              | двоичности — языки программирования, движений мыши, нажатия  |                              |
|                         |                              | клавиш и все слова на экране. Но если статья, которую вы     |                              |
|                         |                              | читаете, раньше была набором нулей и единиц, то как двоичные |                              |
|                         |                              | числа превратились в текст? Давайте разберёмся.     Краткая  |                              |
|                         |                              | история кодировки  На заре своего развития интернет был      |                              |
|                         |                              | исключительно англоязычным. Его авторам и пользователям не   |                              |
|                         |                              | нужно было заботиться о символах других языков, и все нужды  |                              |
|                         |                              | полностью покрывала кодировка American Standard Code for     |                              |
|                         |                              | Information Interchange (ASCII).    ASCII — это таблица      |                              |
|                         |                              | сопоставления бинарных обозначений знакам алфавита. Когда    |                              |
|                         |                              | компьютер получает такую запись:      то с помощью ASCII он  |                              |
|                         |                              | преобразует её во фразу «Hello world».    Один байт (восемь  |                              |
|                         |                              | бит) был достаточно велик, чтобы вместить в себя любую       |                              |
|                         |                              | англоязычную букву, как и управляющие символы, часть из      |                              |
|                         |                              | которых использовалась телепринтерами, так что в те годы они |                              |
|                         |                              | были полезны (сегодня уже не особо). К управляющим символам  |                              |
|                         |                              | относился, например 7 (0111 в двоичном представлении),       |                              |
|                         |                              | который заставлял компьютер издавать сигнал; 8 (1000 в       |                              |
|                         |                              | двоичном представлении) — выводил последний напечатанный     |                              |
|                         |                              | символ; или 12 (1100 в двоичном представлении) — стирал весь |                              |
|                         |                              | написанный на видеотерминале текст.    В те времена          |                              |
|                         |                              | компьютеры считали 8 бит за один байт (так было не всегда),  |                              |
|                         |                              | так что проблем не возникало. Мы могли хранить все           |                              |
|                         |                              | управляющие символы, все числа и англоязычные буквы, и даже  |                              |
|                         |                              | ещё оставалось место, поскольку один байт может кодировать   |                              |
|                         |                              | 255 символов, а для ASCII нужно только 127. То есть          |                              |
|                         |                              | неиспользованными оставалось ещё 128 позиций в кодировке.    |                              |
|                         |                              | Вот как выглядит таблица ASCII. Двоичными числами кодируются |                              |
|                         |                              | все строчные и прописные буквы от A до Z и числа от 0 до 9.  |                              |
|                         |                              | Первые 32 позиции отведены для непечатаемых управляющих      |                              |
|                         |                              | символов.        Проблемы с ASCII  Позиции со 128 по 255     |                              |
|                         |                              | были пустыми. Общественность задумалась, чем их заполнить.   |                              |
|                         |                              | Но у всех были разные идеи . Американский национальный       |                              |
|                         |                              | институт стандартов (American National Standards Institute,  |                              |
|                         |                              | ANSI) формулирует стандарты для разных отраслей. Там         |                              |
|                         |                              | утвердили позиции ASCII с 0 по 127. Их никто не оспаривал.   |                              |
|                         |                              | Проблема была с остальными позициями.     Вот чем были       |                              |
|                         |                              | заполнены позиции 128-255 в первых компьютерах IBM:          |                              |
|                         |                              | Какие-то загогулины, фоновые иконки, математические          |                              |
|                         |                              | операторы и символы с диакретическим знаком вроде é. Но      |                              |
|                         |                              | разработчики других компьютерных архитектур не поддержали    |                              |
|                         |                              | инициативу. Всем хотелось внедрить свою собственную          |                              |
|                         |                              | кодировку во второй половине ASCII.     Все эти различные    |                              |
|                         |                              | концовки назвали  кодовыми страницами .      Что такое       |                              |
|                         |                              | кодовые страницы ASCII?   Здесь  собрана коллекция из более  |                              |
|                         |                              | чем 465 разных кодовых страниц! Существовали разные страницы |                              |
|                         |                              | даже в рамках какого-то одного языка, например, для          |                              |
|                         |                              | греческого и китайского. Как можно было стандартизировать    |                              |
|                         |                              | этот бардак? Или хотя бы заставить его работать между        |                              |
|                         |                              | разными языками? Или между разными кодовыми страницами для   |                              |
|                         |                              | одного языка? В языках, отличающихся от английского? У       |                              |
|                         |                              | китайцев больше 100 000 иероглифов. ASCII даже не может всех |                              |
|                         |                              | их вместить, даже если бы решили отдать все пустые позиции   |                              |
|                         |                              | под китайские символы.     Эта проблема даже получила        |                              |
|                         |                              | название  Mojibake  (бнопня, кракозябры). Так говорят про    |                              |
|                         |                              | искажённый текст, который получается при использовании       |                              |
|                         |                              | некорректной кодировки. В переводе с японского mojibake      |                              |
|                         |                              | означает «преобразование символов».       Пример бнопни      |                              |
|                         |                              | (кракозябров).     Безумие какое-то...  Именно! Не было ни   |                              |
|                         |                              | единого шанса надёжно преобразовывать данные. Интернет — это |                              |
|                         |                              | лишь монструозное соединение компьютеров по всему миру.      |                              |
|                         |                              | Представьте, что все страны решили использовать собственные  |                              |
|                         |                              | стандарты. Например, греческие компьютеры принимают только   |                              |
|                         |                              | греческий язык, а английские отправляют только английский.   |                              |
|                         |                              | Это как кричать в пустой пещере, тебя никто не услышит.      |                              |
|                         |                              | ASCII уже не удовлетворял жизненным требованиям. Для         |                              |
|                         |                              | всемирного интернета нужно было создать что-то другое, либо  |                              |
|                         |                              | пришлось бы иметь дело с сотнями кодовых страниц.    ���     |                              |
|                         |                              | Если только  ������  вы не хотели  ���  бы  ���  читать      |                              |
|                         |                              | подобные параграфы.  �֎֏0590֐��׀ׁׂ׃ׅׄ׆ׇ     Так появился          |                              |
|                         |                              | Unicode  Unicode расшифровывают как  Universal Coded         |                              |
|                         |                              | Character Set  (UCS), и у него есть официальное обозначение  |                              |
|                         |                              | ISO/IEC 10646. Но обычно все используют название Unicode.    |                              |
|                         |                              | Этот стандарт помог решить проблемы, возникавшие из-за       |                              |
|                         |                              | кодировки и кодовых страниц. Он содержит множество  кодовых  |                              |
|                         |                              | пунктов  (кодовых точек), присвоенных символам из языков и   |                              |
|                         |                              | культур со всего мира. То есть Unicode — это  набор символов |                              |
|                         |                              | . С его помощью можно сопоставить некую абстракцию с буквой, |                              |
|                         |                              | на которую мы хотим ссылаться. И так сделано для каждого     |                              |
|                         |                              | символа, даже  египетских иероглифов .    Кто-то проделал    |                              |
|                         |                              | огромную работу, сопоставляя каждый символ во всех языках с  |                              |
|                         |                              | уникальными кодами. Вот как это выглядит:      Префикс U+    |                              |
|                         |                              | говорит о том, что это стандарт Unicode, а число — это       |                              |
|                         |                              | результат преобразования двоичных чисел. Стандарт использует |                              |
|                         |                              | шестнадцатеричную нотацию, которая является упрощённым       |                              |
|                         |                              | представлением двоичных чисел.  Здесь  вы можете ввести в    |                              |
|                         |                              | поле что угодно и посмотреть, как это будет преобразовано в  |                              |
|                         |                              | Unicode. А  здесь  можно полюбоваться на все 143 859 кодовых |                              |
|                         |                              | пунктов.     Уточню на всякий случай: речь идёт о большом    |                              |
|                         |                              | словаре кодовых пунктов, присвоенных всевозможным символам.  |                              |
|                         |                              | Это очень большой набор символов, не более того.    Осталось |                              |
|                         |                              | добавить последний ингредиент.     Unicode Transform         |                              |
|                         |                              | Protocol (UTF)  UTF — протокол кодирования кодовых пунктов в |                              |
|                         |                              | Unicode. Он прописан в стандарте и позволяет кодировать      |                              |
|                         |                              | любой кодовый пункт. Однако существуют разные типы UTF. Они  |                              |
|                         |                              | различаются количеством байтов, используемых для кодировки   |                              |
|                         |                              | одного пункта. В UTF-8 используется один байт на пункт, в    |                              |
|                         |                              | UTF-16 — два байта, в UTF-32 — четыре байта.    Но если у    |                              |
|                         |                              | нас есть три разные кодировки, то как узнать, какая из них   |                              |
|                         |                              | применяется в конкретном файле? Для этого используют  маркер |                              |
|                         |                              | последовательности байтов  (Byte Order Mark, BOM), который   |                              |
|                         |                              | ещё называют сигнатурой кодировки (Encoding Signature). BOM  |                              |
|                         |                              | — это двухбайтный маркер в начале файл, который говорит о    |                              |
|                         |                              | том, какая именно кодировка тут применена.    В интернете    |                              |
|                         |                              | чаще всего используют  UTF-8 , она также прописана как       |                              |
|                         |                              | предпочтительная в стандарте HTML5, так что уделю ей больше  |                              |
|                         |                              | всего внимания.       Этот  график  построен в 2012-м, UTF-8 |                              |
|                         |                              | становилась доминирующей кодировкой. И всё ещё ею является.  |                              |
|                         |                              | График  показывает  распространённость UTF-8.     Что такое  |                              |
|                         |                              | UTF-8 и как она работает?  UTF-8 кодирует с помощью одного   |                              |
|                         |                              | байта каждый кодовый пункт Unicode с 0 по 127 (как в ASCII). |                              |
|                         |                              | То есть если вы писали программу с использованием ASCII, а   |                              |
|                         |                              | ваши пользователи применяют UTF-8, они не заметят ничего     |                              |
|                         |                              | необычного. Всё будет работать как задумано. Обратите        |                              |
|                         |                              | внимание, как это важно. Нам нужно было сохранить обратную   |                              |
|                         |                              | совместимость с ASCII в ходе массового внедрения UTF-8. И    |                              |
|                         |                              | эта кодировка ничего не ломает.    Как следует из названия,  |                              |
|                         |                              | кодовый пункт состоит из 8 битов (один байт). В Unicode есть |                              |
|                         |                              | символы, которые занимают несколько байтов (вплоть до 6).    |                              |
|                         |                              | Это называют переменной длиной. В разных языках удельное     |                              |
|                         |                              | количество байтов разное. В английском — 1,  европейские     |                              |
|                         |                              | языки (с латинским алфавитом), иврит и арабский              |                              |
|                         |                              | представлены с помощью двух байтов на кодовый пункт. Для     |                              |
|                         |                              | китайского, японского, корейского и других азиатских языков  |                              |
|                         |                              | используют по три байта.    Если нужно, чтобы символ занимал |                              |
|                         |                              | больше одного байта, то применяется битовая комбинация,      |                              |
|                         |                              | обозначающая переход — он говорит о том, что символ          |                              |
|                         |                              | продолжается в нескольких следующих байтах.     И теперь мы, |                              |
|                         |                              | как по волшебству, пришли к соглашению, как закодировать     |                              |
|                         |                              | шумерскую клинопись (Хабр её не отображает), а также значки  |                              |
|                         |                              | emoji !    Подытожив сказанное: сначала читаем BOM, чтобы    |                              |
|                         |                              | определить версию кодировки, затем преобразуем файл в        |                              |
|                         |                              | кодовые пункты Unicode, а потом выводим на экран символы из  |                              |
|                         |                              | набора Unicode.     Напоследок про UTF  Коды являются        |                              |
|                         |                              | ключами . Если я отправлю ошибочную кодировку, вы не сможете |                              |
|                         |                              | ничего прочесть. Не забывайте об этом при отправке и         |                              |
|                         |                              | получении данных. В наших повседневных инструментах это      |                              |
|                         |                              | часто абстрагировано, но нам, программистам, важно понимать, |                              |
|                         |                              | что происходит под капотом.     Как нам задавать кодировку?  |                              |
|                         |                              | Поскольку HTML пишется на английском, и почти все кодировки  |                              |
|                         |                              | прекрасно работают с английским, мы можем указать кодировку  |                              |
|                         |                              | в начале раздела  .      Важно сделать это в самом начале  , |                              |
|                         |                              | поскольку парсинг  HTML может начаться заново , если в       |                              |
|                         |                              | данный момент используется неправильная кодировка. Также     |                              |
|                         |                              | узнать версию кодировки можно из заголовка  Content-Type     |                              |
|                         |                              | HTTP-запроса/ответа.    Если HTML-документ не содержит       |                              |
|                         |                              | упоминания кодировки,  спецификация HTML5  предлагает такое  |                              |
|                         |                              | интересное решение, как  BOM-сниффинг . С его помощью мы по  |                              |
|                         |                              | маркеру порядка байтов (BOM) можем определить используемую   |                              |
|                         |                              | кодировку.     Это всё?  Unicode ещё не завершён. Как и в    |                              |
|                         |                              | случае с любым стандартом, мы что-то добавляем, убираем,     |                              |
|                         |                              | предлагаем новое. Никакие спецификации нельзя назвать        |                              |
|                         |                              | «завершёнными». Обычно в год бывает 1-2 релиза, найти их     |                              |
|                         |                              | описание можно  здесь .     Недавно я прочитал об очень      |                              |
|                         |                              | интересном баге, связанном с  некорректным отображением в    |                              |
|                         |                              | Twitter русских Unicode-символов .    Если вы дочитали до    |                              |
|                         |                              | конца, то вы молодцы. Предлагаю сделать домашнюю работу.     |                              |
|                         |                              | Посмотрите, как могут ломаться сайты при использовании       |                              |
|                         |                              | неправильной кодировки. Я воспользовался  этим  расширением  |                              |
|                         |                              | для Google Chrome, поменял кодировку и попытался открывать   |                              |
|                         |                              | разные страницы. Информация была совершенно нечитаемой.      |                              |
|                         |                              | Попробуйте сами, как выглядит бнопня. Это поможет понять,    |                              |
|                         |                              | насколько важна кодировка.       Заключение  При написании   |                              |
|                         |                              | этой статьи я узнал о  Майкле Эверсоне . С 1993 года он      |                              |
|                         |                              | предложил больше 200 изменений в Unicode, добавил в стандарт |                              |
|                         |                              | тысячи символов. По состоянию на 2003 год он считался самым  |                              |
|                         |                              | продуктивным участником. Он один очень сильно повлиял на     |                              |
|                         |                              | облик Unicode. Майкл — один из тех, кто сделал интернет      |                              |
|                         |                              | таким, каким мы его сегодня знаем. Очень впечатляет.         |                              |
|                         |                              | Надеюсь, мне удалось показать вам, для чего нужны кодировки, |                              |
|                         |                              | какие проблемы они решают, и что происходит при их сбоях.    |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Сделаем худший Vue.js в мире | Некоторое время назад я опубликовал похожую  статью про      |            vue.js            |
| pany/timeweb/blog/54718 |                              | React , где с помощью пары строк кода мы создали крошечный   |           timeweb            |
|            8/           |                              | клон React.js с нуля. Но React — далеко не единственный      |                              |
|                         |                              | инструмент в современном фронтенд-мире, Vue.js стремительно  |                              |
|                         |                              | набирает популярность. Давайте разберемся, как работает этот |                              |
|                         |                              | фреймворк, и создадим примитивный клон, похожий на Vue.js, в |                              |
|                         |                              | образовательных целях.     Реактивность  Как и React.js, Vue |                              |
|                         |                              | является реактивным, то есть все изменения в состоянии       |                              |
|                         |                              | приложения автоматически отражаются в DOM. Но в отличие от   |                              |
|                         |                              | React, Vue отслеживает зависимости во время рендеринга и     |                              |
|                         |                              | обновляет только связанные части без каких-либо «сравнений». |                              |
|                         |                              | Ключ к реактивности Vue.js — это метод  . Он позволяет       |                              |
|                         |                              | указывать настраиваемый метод getter / setter для поля       |                              |
|                         |                              | объекта и перехватывать каждый доступ к нему:      С помощью |                              |
|                         |                              | этого мы можем определять, когда происходит доступ к         |                              |
|                         |                              | определенному свойству, или когда оно изменяется, а затем    |                              |
|                         |                              | повторно оценивать все зависимые выражения после изменения   |                              |
|                         |                              | свойства.     Выражения  Vue.js позволяет привязать          |                              |
|                         |                              | выражение JavaScript к атрибуту узла DOM с помощью           |                              |
|                         |                              | директивы. Например,   установит текст внутри div’а в        |                              |
|                         |                              | значение переменной   в верхнем регистре.    Самый простой   |                              |
|                         |                              | подход к оценке строк, таких как  , использовать  . Хотя     |                              |
|                         |                              | eval никогда не считался безопасным решением, мы можем       |                              |
|                         |                              | попробовать сделать его немного лучше, обернув в функцию и   |                              |
|                         |                              | передав специальный глобальный контекст:      Это немного    |                              |
|                         |                              | безопаснее, чем нативный  , и его достаточно для простого    |                              |
|                         |                              | фреймворка, который мы создаем.      Прокси  Теперь мы можем |                              |
|                         |                              | использовать  , чтобы обернуть каждое свойство объекта       |                              |
|                         |                              | данных; можно использовать   для оценки произвольных         |                              |
|                         |                              | выражений и для того, чтобы сказать, к каким свойствам прямо |                              |
|                         |                              | или косвенно обращалось выражение. Мы также должны суметь    |                              |
|                         |                              | определить, когда выражение должно быть повторно вычислено,  |                              |
|                         |                              | потому что одна из его переменных изменилась:                |                              |
|                         |                              | Директивы  Теперь мы можем оценивать произвольные выражения  |                              |
|                         |                              | и отслеживать, какие выражения оценивать при изменении одной |                              |
|                         |                              | конкретной переменной данных. Осталось только назначить      |                              |
|                         |                              | выражения определенным свойствам узла DOM и фактически       |                              |
|                         |                              | изменить их при изменении данных.    Как и в Vue.js, мы      |                              |
|                         |                              | будем использовать специальные атрибуты, такие как   для     |                              |
|                         |                              | связывания обработчиков событий,   для привязки textContent, |                              |
|                         |                              | для привязки стиля CSS и так далее. Я использую здесь        |                              |
|                         |                              | префикс «q-», потому что «q» похоже на «vue».    Вот         |                              |
|                         |                              | неполный список возможных поддерживаемых директив:           |                              |
|                         |                              | Каждая директива — это функция, которая принимает узел DOM,  |                              |
|                         |                              | имя необязательного параметра для таких случаев, как   (имя  |                              |
|                         |                              | будет «click»). Также требуется строка выражения ( ) и       |                              |
|                         |                              | объект данных для использования в качестве контекста         |                              |
|                         |                              | выражения.    Теперь у нас есть все строительные блоки, пора |                              |
|                         |                              | всё склеить вместе!     Конечный результат    Реактивный,    |                              |
|                         |                              | подобный Vue.js фреймворк во всей красе. Насколько он        |                              |
|                         |                              | полезен? Вот пример:      Нажатие на одну кнопку увеличивает |                              |
|                         |                              | счетчик и автоматически обновляет содержимое  . Щелчок по    |                              |
|                         |                              | другому устанавливает счетчик на ноль, а также обновляет     |                              |
|                         |                              | текст.    Как видите, Vue.js, на первый взгляд, кажется      |                              |
|                         |                              | магией, но внутри он очень прост, а основные функции могут   |                              |
|                         |                              | быть реализованы всего в нескольких строках кода.            |                              |
|                         |                              | Дальнейшие шаги  Если вам интересно узнать о Vue.js больше — |                              |
|                         |                              | попробуйте реализовать «q-if» для переключения видимости     |                              |
|                         |                              | элементов на основе выражения или «q-each» для привязки      |                              |
|                         |                              | списков повторяющихся дочерних элементов (это будет хорошим  |                              |
|                         |                              | упражнением).    Полные исходники нанофреймворка Q находятся |                              |
|                         |                              | на  Github . Не стесняйтесь контрибьютить, если вы заметили  |                              |
|                         |                              | проблему или хотите предложить улучшение!    В заключение я  |                              |
|                         |                              | должен упомянуть, что   использовался в Vue 2, а создатели   |                              |
|                         |                              | Vue 3 переключились на другой механизм, предоставляемый ES6, |                              |
|                         |                              | а именно   и  . Прокси позволяет передать обработчик для     |                              |
|                         |                              | перехвата доступа к свойствам объекта, как и в нашем         |                              |
|                         |                              | примере, в то время как Reflect позволяет получить доступ к  |                              |
|                         |                              | свойствам объекта изнутри прокси и сохранить   объект        |                              |
|                         |                              | нетронутым (в отличие от нашего примера с defineProperty).   |                              |
|                         |                              | Я оставляю оба Proxy / Reflect в качестве упражнения для     |                              |
|                         |                              | читателя, так что, кто бы ни сделал пулл-реквест для         |                              |
|                         |                              | правильного использования их в  Q  — я буду рад совместить   |                              |
|                         |                              | это. Удачи!    Надеюсь, вам понравилась статья. Вы можете    |                              |
|                         |                              | следить за новостями и делиться предложениями в  Github ,    |                              |
|                         |                              | Twitter  или подписываться через  rss .                      |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos | Разработка источника питания | Рассказываю про разработку источника питания. Эта разработка | разработка источника питания |
|        t/547190/        |   от трёхфазной сети 380В    | – концепт-дизайн для проверки на первом этапе                |      источники питания       |
|                         |                              | функционирования устройства мониторинга, питающегося от      |         power supply         |
|                         |                              | трёхфазной сети. Нет особых требований по конструктивному    |     силовая электроника      |
|                         |                              | исполнению, а также таргетов по цене. Это всё заказчик       |   высоковольтный источник    |
|                         |                              | планировал сделать на втором этапе – после показа            |     power supply design      |
|                         |                              | работоспособности инвесторам и получения финансирования.     |  питание от трехфазной сети  |
|                         |                              | Кстати, весьма неплохой подход к разработке.                 |            380 В             |
|                         |                              | Любители железок – добро пожаловать под кат.     Требования  |                              |
|                         |                              | ТЗ     Питание от трёхфазной сети при обрыве/исчезновении    |                              |
|                         |                              | одной или двух фаз   Фазное напряжение 230В ± 20%            |                              |
|                         |                              | Коррекция коэффициента мощности не требуется   Выходная      |                              |
|                         |                              | мощность 10Вт   Выходное напряжение 15В    Рассчитаем, в     |                              |
|                         |                              | какой диапазон входных выпрямленных напряжений выливаются    |                              |
|                         |                              | эти требования. Нижняя граница – обрыв двух фаз, фазное      |                              |
|                         |                              | напряжение 184 В. Получаем амплитуду выпрямленного           |                              |
|                         |                              | напряжения 259В. Из этого значения нужно вычесть провал на   |                              |
|                         |                              | входных ёмкостях. Пусть это значение будет скажем 59В        |                              |
|                         |                              | (обязательно потом проверить на макете), получаем 200В DC,   |                              |
|                         |                              | это минимальное входное напряжение.    Верхняя граница.      |                              |
|                         |                              | Присутствуют все фазы, фазное напряжение 276В. Получаем      |                              |
|                         |                              | 276*√2*√3 = 674В.     Силовая часть  При мощности 10Вт выбор |                              |
|                         |                              | топологии очевиден – обратноходовой преобразователь          |                              |
|                         |                              | (flyback). В части выбора силового транзистора возможны      |                              |
|                         |                              | варианты:       Высоковольтный ключ.  Выбираем транзистор на |                              |
|                         |                              | 800 – 1000 В.   Каскодное включение.  Последовательное       |                              |
|                         |                              | включение двух транзисторов на более низкое напряжение.      |                              |
|                         |                              | Общий принцип этого подхода описан в   статье . Есть         |                              |
|                         |                              | референс-дизайны,   такой  от Тексаса и   такой  от          |                              |
|                         |                              | Инфинеона.     Обратная связь, способ стабилизации  Можно    |                              |
|                         |                              | выделить следующие варианты:       «Классика» с обратной     |                              |
|                         |                              | связью через оптрон. Понятная, широко распространённая       |                              |
|                         |                              | схема, не требует дополнительных комментариев.               |                              |
|                         |                              | Стабилизация по обмотке питания. В данном варианте           |                              |
|                         |                              | стабилизируется напряжение на обмотке подпитки ШИМ-          |                              |
|                         |                              | контроллера. Напряжение на выходной обмотке при этом         |                              |
|                         |                              | получается более-менее стабильным. В данном варианте         |                              |
|                         |                              | качество стабилизации зависит от коэффициента связи между    |                              |
|                         |                              | обмотками.   Primary Side Regulator (PSR). Сравнительно      |                              |
|                         |                              | новая технология, позволяющая добиться формирования          |                              |
|                         |                              | прямоугольной характеристики источника питания (CV/CC).      |                              |
|                         |                              | Делается это только с первичной стороны (оптрон не           |                              |
|                         |                              | требуется). У разных производителей существуют различные     |                              |
|                         |                              | вариации, но общий принцип основан на сэмплировании          |                              |
|                         |                              | напряжения с обмотки вспомогательного питания (для           |                              |
|                         |                              | обеспечения стабилизации напряжения), а также тока ключа     |                              |
|                         |                              | (обеспечение стабилизации тока). Ещё одна особенность, что   |                              |
|                         |                              | зачастую это ЧИМ, а не ШИМ-модулятор.    Я решил выбрать     |                              |
|                         |                              | классические решения – взять транзистор на 800-900В и        |                              |
|                         |                              | сделать обратную связь через оптрон.     Расчёт              |                              |
|                         |                              | трансформатора  Кстати, нужно заметить, что в обратноходовом |                              |
|                         |                              | преобразователе это не трансформатор, а двухобмоточный       |                              |
|                         |                              | дроссель. Пишу на всякий случай, чтобы уведомить читателей-  |                              |
|                         |                              | перфекционистов что я в курсе и предотвратить  срач          |                              |
|                         |                              | излишние вопросы в комментариях.    В своей практике         |                              |
|                         |                              | разработчика силовой электроники я пользуюсь различными      |                              |
|                         |                              | методиками расчёта, а зачастую их комбинацией. В данном      |                              |
|                         |                              | случае использую простой и быстрый метод – расчёт утилитой   |                              |
|                         |                              | flyback («программа Старичка») с последующей проверкой на    |                              |
|                         |                              | модели.    Расчёт выглядит так:    Некоторые замечания и     |                              |
|                         |                              | рекомендации по расчёту:       Обычно я стараюсь чтобы       |                              |
|                         |                              | обратноход работал в режиме прерывистых токов (DCM), однако  |                              |
|                         |                              | при широком диапазоне входных напряжений можно допустить     |                              |
|                         |                              | выход в режим непрерывных токов (CCM) при нижнем уровне      |                              |
|                         |                              | входного напряжения. Особенно когда нижний уровень – это не  |                              |
|                         |                              | штатный режим, а работа при отсутствии одной или двух фаз    |                              |
|                         |                              | как в данном случае;   Зазор не должен быть слишком большим; |                              |
|                         |                              | Нужно проверить, что коэффициент заполнения импульса реально |                              |
|                         |                              | достижим. Скажем, значения меньше чем 300-400 нс рекомендую  |                              |
|                         |                              | не использовать. Транзистор ещё не успел открыться, а ему    |                              |
|                         |                              | уже нужно закрываться;   Не стоит превышать значение 0,5 в   |                              |
|                         |                              | коэффициенте заполнения импульса – возможно появление        |                              |
|                         |                              | субгармонических колебаний и соответственно ухудшение        |                              |
|                         |                              | устойчивости контура регулирования;   R DSon  – берём        |                              |
|                         |                              | номинальное значение из ДШ и умножаем на 1,3-1,5 (увеличение |                              |
|                         |                              | сопротивления канала от температуры);   Плотность тока в     |                              |
|                         |                              | обмотках можно брать в довольно широких пределах. Начиная от |                              |
|                         |                              | 5-8 А/мм2 (при естественной конвекции) и до 15-20 А/мм2      |                              |
|                         |                              | (принудительное охлаждение источника питания либо применение |                              |
|                         |                              | радиатора для трансформатора.)    Хочу предостеречь          |                              |
|                         |                              | начинающих разработчиков, утилита не посчитает всё за вас —  |                              |
|                         |                              | это просто инструмент, которым тоже нужно уметь              |                              |
|                         |                              | пользоваться. Для иллюстрации приведу несколько примеров     |                              |
|                         |                              | неудачных расчётов.    Задано слишком низкое отражённое      |                              |
|                         |                              | напряжение, поэтому коэффициент заполнения импульсов         |                              |
|                         |                              | получился слишком маленький:      Задана слишком большая     |                              |
|                         |                              | мощность для данного габарита сердечника, соответственно     |                              |
|                         |                              | получился слишком большой зазор – трансформатор будет        |                              |
|                         |                              | греться из-за выпучивания поля в зазоре, также возрастёт     |                              |
|                         |                              | индуктивность рассеивания:       Моделирование силовой части |                              |
|                         |                              | Сразу хочу заметить, что это «идеальная модель», то есть     |                              |
|                         |                              | модель без учёта паразитных параметров. Область применения   |                              |
|                         |                              | данной модели довольно узкая – на ней не посмотришь выброс   |                              |
|                         |                              | на стоке от индуктивности рассеивания, звон на выходном      |                              |
|                         |                              | диоде и прочие подобные вещи. Для чего можно использовать    |                              |
|                         |                              | такую модель:       Проверка расчёта трансформатора в части  |                              |
|                         |                              | коэффициента заполнения импульсов;   Расчёт среднего и       |                              |
|                         |                              | действующего токов через транзистор и выходной диод;         |                              |
|                         |                              | Расчёт действующего тока выходного конденсатора;   Расчёт    |                              |
|                         |                              | действующего тока входного конденсатора (нужно доработать    |                              |
|                         |                              | модель добавив выпрямитель и источник переменного напряжения |                              |
|                         |                              | на вход).    Модель доступна   тут . Схема модели:      ОС   |                              |
|                         |                              | по напряжению отсутствует, поэтому для обеспечения точного   |                              |
|                         |                              | значения выходного напряжения коэффициент заполнения         |                              |
|                         |                              | импульса нужно подбирать. Делается это на основе значений,   |                              |
|                         |                              | полученных при расчёте трансформатора. При входном           |                              |
|                         |                              | напряжении 675В получается скважность 0,103, что             |                              |
|                         |                              | соответствует длительности импульса 1030 нс. В модели у меня |                              |
|                         |                              | получилось значение 886 нс – очень близко, можно считать,    |                              |
|                         |                              | что попали.    Параметры источника V2:      Видно, что в     |                              |
|                         |                              | модели используется не число витков, а индуктивность обмоток |                              |
|                         |                              | трансформатора. Как определить индуктивность вторичной       |                              |
|                         |                              | обмотки, ведь её «программа Старичка» не рассчитывает?       |                              |
|                         |                              | Рассчитать любым методом по известным параметрам сечения     |                              |
|                         |                              | сердечника, зазора и количества витков. Для быстрого расчёта |                              |
|                         |                              | рекомендую использовать одну весьма полезную утилиту.        |                              |
|                         |                              | Magnetic Design Tool  от TDK/Epcos. Существует как   онлайн- |                              |
|                         |                              | версия , так и десктопная. Я традиционно применяю            |                              |
|                         |                              | десктопную, так как тогда, когда начал ей пользоваться,      |                              |
|                         |                              | онлайн версии ещё не было.    Возможно, когда будет время    |                              |
|                         |                              | напишу подробное описание всех возможностей данной тулзы, а  |                              |
|                         |                              | пока краткий гайд как рассчитать индуктивность обмотки:      |                              |
|                         |                              | Выбираем  Core calculations ;   В поле  Core  выбираем       |                              |
|                         |                              | типоразмер сердечника, в поле  Material  тип материала       |                              |
|                         |                              | сердечника;   Выбираем вкладку  Al value ;   Выбираем  s  –  |                              |
|                         |                              | расчёт на основе величины зазора, вводим значение зазора;    |                              |
|                         |                              | Нажимаем кнопку  Calculate , полученное значение Al          |                              |
|                         |                              | переносим в зону  L-Al ;   Вводим в поле  N  количество      |                              |
|                         |                              | витков;   Нажимаем кнопку  Calculate  и в поле  L  получаем  |                              |
|                         |                              | значение индуктивности.      При расчёте параметров для      |                              |
|                         |                              | Е-образных сердечников, используется область  Al – Air gap   |                              |
|                         |                              | with fringe flux (E-cores) , для всех остальных форм         |                              |
|                         |                              | сердечников рассчитываем в  Al – Air gap without fringe flux |                              |
|                         |                              | .     Схема источника питания    Как я уже говорил, схема    |                              |
|                         |                              | вполне классическая. Есть момент, который стоит отметить –   |                              |
|                         |                              | входное напряжение довольно велико, поэтому входной          |                              |
|                         |                              | конденсатор состоит из двух, соединённых последовательно. В  |                              |
|                         |                              | данном случае обязательно применять разравнивающие резисторы |                              |
|                         |                              | R4…R7.      Что касается печатной платы – тоже ничего        |                              |
|                         |                              | особенного, проект не сложный. Впрочем, для изделий с таким  |                              |
|                         |                              | (довольно высоким) напряжением нужно уделить особое внимание |                              |
|                         |                              | зазорам. Я заложил не очень большие зазоры, так как          |                              |
|                         |                              | планировал заливку компаундом.        Отладка источника      |                              |
|                         |                              | питания  Отладка – это процесс, в результате которого плата  |                              |
|                         |                              | превращается вот в это:      Это конечно шутка и так бывает  |                              |
|                         |                              | не всегда (обычно ещё хуже), тем не менее запуск и отладка   |                              |
|                         |                              | источника питания это весьма занимательная тема.             |                              |
|                         |                              | Небольшой чек-лист, что обязательно сделать в процессе       |                              |
|                         |                              | отладки и предварительных испытаний. Если говорить, про      |                              |
|                         |                              | критические параметры, которые могут привести к нарушению    |                              |
|                         |                              | нормальных режимов работы, то нужно проверить:       Рабочую |                              |
|                         |                              | частоту;   Напряжение на входе при подаче питания скачком    |                              |
|                         |                              | (при наличии дросселей на входе может быть резонансный       |                              |
|                         |                              | процесс и превышение напряжения над поданным);   Напряжение  |                              |
|                         |                              | на стоке силового ключа при максимальном входном напряжении; |                              |
|                         |                              | Напряжение на стоке силового ключа при максимальном входном  |                              |
|                         |                              | напряжении и КЗ на выходе;   Температуру силового ключа при  |                              |
|                         |                              | минимальном входном напряжении и максимальной нагрузке;      |                              |
|                         |                              | Стабильность запуска ИП при минимальном входном напряжении и |                              |
|                         |                              | половинной ёмкости конденсатора С8 (половинной – просто для  |                              |
|                         |                              | примера, если быть более точным, то нужно учесть потерю      |                              |
|                         |                              | ёмкости от заданной наработки и температуры);   Напряжение   |                              |
|                         |                              | собственного питания микросхемы при ХХ и максимальной        |                              |
|                         |                              | нагрузке по выходу;   Напряжение на затворе при максимальном |                              |
|                         |                              | напряжении питания ШИМ-контроллера;   Напряжение на выходном |                              |
|                         |                              | диоде при максимальном входном напряжении;   Напряжение на   |                              |
|                         |                              | выходном диоде при максимальном входном напряжении и КЗ на   |                              |
|                         |                              | выходе;   Стабильность петли ОС. Существует несколько        |                              |
|                         |                              | способов, самый простой и быстрый –   этот . Рекомендую для  |                              |
|                         |                              | начинающих.    Если я что-то забыл – пишите в комментариях,  |                              |
|                         |                              | возможно с помощью коллективного разума мы составим более    |                              |
|                         |                              | подробный перечень критических тестов.     Заключение  У     |                              |
|                         |                              | меня не было цели описать полностью весь процесс разработки  |                              |
|                         |                              | – показал только некоторые моменты. Если у вас появятся      |                              |
|                         |                              | вопросы по этой разработке – задавайте в комментариях, буду  |                              |
|                         |                              | рад ответить!    Power is cool — deal with it.               |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Security Week 11: уязвимости | В кибербезопасности существуют «медленные» кризисы, такие    |           exchange           |
| pany/kaspersky/blog/547 |    в Exchange, цензура на    | как, например, потенциальные атаки на загрузочный код в      |           hafnium            |
|           184/          |   Github и таймлайн атаки    | смартфонах и мобильных компьютерах — все, что требует        |                              |
|                         |                              | физического доступа к железу. То, что в таком доступе не     |                              |
|                         |                              | нуждается, тоже не всегда представляет проблему, с которой   |                              |
|                         |                              | надо разбираться «вчера»: даже критические уязвимости часто  |                              |
|                         |                              | эксплуатируются со множеством оговорок и дополнительных      |                              |
|                         |                              | трудностей на пути к важным данным. Атаки на почтовые        |                              |
|                         |                              | серверы Microsoft Exchange, судя по всему, станут            |                              |
|                         |                              | хрестоматийным примером быстро развивающейся и максимально   |                              |
|                         |                              | опасной проблемы для потенциальных жертв.     Данные о       |                              |
|                         |                              | четырех активно эксплуатируемых уязвимостях в Exchange были  |                              |
|                         |                              | обнародованы  3 марта. Вторая неделя «почтового кризиса»     |                              |
|                         |                              | была богатой на события. На Github был опубликован           |                              |
|                         |                              | демонстрационный код, эксплуатирующий уязвимости. Proof-of-  |                              |
|                         |                              | Concept был оперативно  удален , за что Github (и Microsoft, |                              |
|                         |                              | как владелец сервиса) подвергся критике. Сразу несколько     |                              |
|                         |                              | исследований сообщили об атаке на почтовые серверы со        |                              |
|                         |                              | стороны не одной, а как минимум десятка различных            |                              |
|                         |                              | группировок. 13 марта стало известно об  использовании  уже  |                              |
|                         |                              | взломанных серверов для атак с шифрованием данных и          |                              |
|                         |                              | вымогательством. Заодно первооткрыватели уязвимостей         |                              |
|                         |                              | уточнили таймлайн расследования: судя по всему, ключевая     |                              |
|                         |                              | уязвимость Exchange была обнаружена в ходе аудита еще в      |                              |
|                         |                              | декабре.     Подробный таймлайн развития событий             |                              |
|                         |                              | опубликован  на сайте Брайана Кребса. Согласно ему, вендор   |                              |
|                         |                              | был уведомлен об уязвимостях практически одновременно двумя  |                              |
|                         |                              | компаниями, независимо друг от друга. При этом компания      |                              |
|                         |                              | Volexity уведомила Microsoft по следам расследования         |                              |
|                         |                              | реальных атак. Компания Devcore обнаружила две из четырех    |                              |
|                         |                              | уязвимостей, не зная об их эксплуатации, предприняв аудит    |                              |
|                         |                              | безопасности Exchange еще в октябре прошлого года. На        |                              |
|                         |                              | прошлой неделе Devcore  опубликовала  подробную хронологию   |                              |
|                         |                              | собственного взаимодействия с Microsoft: в начале декабря    |                              |
|                         |                              | они нашли способ обхода аутентификации на почтовом сервере,  |                              |
|                         |                              | в канун Нового года нашли уязвимость записи произвольных     |                              |
|                         |                              | данных на сервер и таким образом смоделировали работающую    |                              |
|                         |                              | атаку.     В конце января компания Trend Micro  сообщает  о  |                              |
|                         |                              | случаях взлома почтовых серверов с организацией веб-шелла    |                              |
|                         |                              | для последующего контроля над ними, но связывает атаки с     |                              |
|                         |                              | другой, уже закрытой на тот момент уязвимостью. В середине   |                              |
|                         |                              | февраля Microsoft сообщает Devcore, что планирует закрыть    |                              |
|                         |                              | уязвимости в ходе планового релиза патчей, намеченного на 9  |                              |
|                         |                              | марта. Но в самом конце те, кто до этого взламывал серверы   |                              |
|                         |                              | выборочно, переходят к тактике масштабного поиска и взлома   |                              |
|                         |                              | уязвимых организаций. Это, в свою очередь, вынуждает         |                              |
|                         |                              | Microsoft распространить патчи за шесть дней до Patch        |                              |
|                         |                              | Tuesday, 3 марта. Уже на момент распространения патчей       |                              |
|                         |                              | количество атакованных почтовых серверов оценивалось в       |                              |
|                         |                              | десятки тысяч.       12 марта Microsoft со ссылкой на RiskIQ |                              |
|                         |                              | приводит общую оценку количества потенциально уязвимых       |                              |
|                         |                              | серверов. На первое марта таких насчитывалось около 400      |                              |
|                         |                              | тысяч. К 9 марта 100 тысяч серверов были не пропатчены, к 12 |                              |
|                         |                              | марта их число снизилось до 82 тысяч. В это же время         |                              |
|                         |                              | возникает отдельная драма с публикацией PoC на Github. После |                              |
|                         |                              | выпуска патча изготовление proof-of-concept путем реверс-    |                              |
|                         |                              | инжиринга было вопросом времени.     Код для атаки на        |                              |
|                         |                              | Exchange публикуется 10 марта, тут же банится на GitHub, за  |                              |
|                         |                              | что Microsoft получает порцию критики: это что же, цензура   |                              |
|                         |                              | получается? В качестве контрмеры борцы с цензурой начинают   |                              |
|                         |                              | постить  копии кода в своих аккаунтах. Понятно, что Интернет |                              |
|                         |                              | так не работает: то, что однажды было в нем опубликовано,    |                              |
|                         |                              | распубликовать уже не получится. Но есть и контраргумент:    |                              |
|                         |                              | готовый эксплойт, конечно, полезен в «исследовательских»     |                              |
|                         |                              | целях и как часть набора для тестирования корпоративных      |                              |
|                         |                              | сетей, но для той сотни тысяч организаций с незакрытой дырой |                              |
|                         |                              | он принесет еще больше проблем. Их теперь атакуют вообще все |                              |
|                         |                              | желающие, и скорее всего под раздачу попали компании,        |                              |
|                         |                              | имеющие самый минимум ресурсов для решения любых проблем с   |                              |
|                         |                              | безопасностью.      Если вам кажется, что эта история        |                              |
|                         |                              | нанесла недостаточно ущерба, вот еще один момент. В          |                              |
|                         |                              | исследовании  компании Palo Alto приводятся некоторые детали |                              |
|                         |                              | веб-шелла, устанавливаемого на взломанные серверы. По этим   |                              |
|                         |                              | деталям сотрудник Devcore, известный под ником Orange Tsai,  |                              |
|                         |                              | делает  предположение , что разработанный им эксплойт        |                              |
|                         |                              | использовался в реальных атаках до выпуска патча.            |                              |
|                         |                              | Демоэксплойтом он приватно поделился с Microsoft в начале    |                              |
|                         |                              | января. Как тот оказался в руках одной (или нескольких)      |                              |
|                         |                              | групп, производящих атаки? По  данным  СМИ, утечка произошла |                              |
|                         |                              | после того, как Microsoft поделилась информацией с           |                              |
|                         |                              | партнерами. Эксплойт пустили в работу почти без изменений, и |                              |
|                         |                              | он идентифицируется по вшитой в него строке «orange»,        |                              |
|                         |                              | оставленной Orange Tsai.       Ну и в заключение поговорим   |                              |
|                         |                              | про вымогательство. Закрытие уязвимости не поможет, если     |                              |
|                         |                              | сервер уже был взломан, а его владельцы не смогли выявить    |                              |
|                         |                              | наличие веб-шелла. Судя по всему, типовой бэкдор,            |                              |
|                         |                              | оставленный первоначальными группами взломщиков, теперь      |                              |
|                         |                              | эксплуатируется вымогателями. Доступ используется для        |                              |
|                         |                              | шифрования данных, причем в тексте используется термин       |                              |
|                         |                              | DearCry, отсылка к ransomware-атаке  WannaCry  2017 года.    |                              |
|                         |                              | Краткий промежуточный вердикт: все очень плохо. Настолько    |                              |
|                         |                              | плохо, что Microsoft выпустила  патч  для уже давно не       |                              |
|                         |                              | поддерживаемой версии Exchange Server 2010. И это мы еще не  |                              |
|                         |                              | знаем о последствиях атак, которые наверняка сопровождались  |                              |
|                         |                              | кражей почтовой переписки, взломом иных серверов в           |                              |
|                         |                              | корпоративной сети и прочим. Уже сейчас становятся известны  |                              |
|                         |                              | имена пострадавших организаций. Среди них, например,         |                              |
|                         |                              | парламент Норвегии .      Что еще произошло                  |                              |
|                         |                              | BleepingComputer  сообщает  о новой тактике мошенников,      |                              |
|                         |                              | рекламирующих «раздачу криптовалюты» в соцсетях. Вместо того |                              |
|                         |                              | чтобы мимикрировать под Илона Маска, они прямолинейно        |                              |
|                         |                              | рекламируют скам через платные механизмы Twitter.     Google |                              |
|                         |                              | в исследовательских целях  публикует  демокод,               |                              |
|                         |                              | эксплуатирующий уязвимость Spectre. В практической атаке     |                              |
|                         |                              | показана кража содержимого памяти через браузер Chrome 88 со |                              |
|                         |                              | скоростью 1 килобайт в секунду.     Набор обновлений для     |                              |
|                         |                              | продуктов Microsoft, выпущенный 9 марта,  закрывает  zero-   |                              |
|                         |                              | day уязвимость в Internet Explorer. А пользователи  жалуются |                              |
|                         |                              | , что другой апдейт из этого набора роняет Windows в синий   |                              |
|                         |                              | экран при попытке напечатать что-нибудь на принтере.         |                              |
|                         |                              | Видео в  твите  выше показывает, как вызвать отказ в         |                              |
|                         |                              | обслуживании в мультимедийной системе автомобиля, подключив  |                              |
|                         |                              | к порту USB-клавиатуру.    Критические  уязвимости  в        |                              |
|                         |                              | высокопроизводительных сетевых устройствах BIG-IP и BIG-IQ   |                              |
|                         |                              | компании F5 Networks позволяют обойти механизм авторизации.  |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Элемент внезапности ( или   | Элементы внезапности  отлично работают в рекламе  и на       |          solidworks          |
|   pany/ds/blog/545760/  |     нет?) при разработке     | аттракционах тематических парков развлечений. У людей,       |       solidworks 2021        |
|                         |          продукции           | которые рассказывают захватывающие истории и веселят         |      solidworks simulia      |
|                         |                              | публику, в рабочем арсенале всегда есть что-то неожиданное — |          simulation          |
|                         |                              | то, что способно заставить вас смеяться, плакать и ждать     |       3d моделирование       |
|                         |                              | продолжения, затаив дыхание. Внезапный поворот сюжета часто  |     моделирование систем     |
|                         |                              | оказывается забавным, но только если речь идет о беззаботном |         3d моделинг          |
|                         |                              | досуге, а не о ходе разработки промышленной продукции. Когда |      3d проектирование       |
|                         |                              | вдруг появляются такие сюрпризы, как проблемы с качеством,   |          3d-графика          |
|                         |                              | раздутые бюджеты, раздраженные клиенты и сверхурочные        |              3d              |
|                         |                              | работы, становится совсем не смешно. Непростые отраслевые    |                              |
|                         |                              | проблемы SOLIDWORKS Simulation  ограждает наших клиентов,    |                              |
|                         |                              | где бы они ни находились, от неожиданностей при              |                              |
|                         |                              | проектировании и производстве. Компьютерное моделирование    |                              |
|                         |                              | методом конечных элементов (МКЭ) помогает спрогнозировать    |                              |
|                         |                              | поведение ваших деталей и сборок под воздействием реальных   |                              |
|                         |                              | физических сил. Многие инженеры почему-то думают, что задачи |                              |
|                         |                              | моделирования следует поручать только экспертам, причем      |                              |
|                         |                              | лучше всего — с ученой степенью. Но это совсем не так. Не    |                              |
|                         |                              | нужно забывать, что есть SOLIDWORKS Simulation — система,    |                              |
|                         |                              | делающая МКЭ доступным даже для рядовых инженеров.           |                              |
|                         |                              | Моделирование поведения изделий в реальной эксплуатации      |                              |
|                         |                              | поможет вам ответить на самые злободневные вопросы: Можно ли |                              |
|                         |                              | применить в моей конструкции более легкие материалы без      |                              |
|                         |                              | ущерба для      прочности?  Какие физические факторы будут   |                              |
|                         |                              | влиять на ее работу (вибрация, усталость, температура)?      |                              |
|                         |                              | Какие части изделия можно безболезненно сделать прочнее и    |                              |
|                         |                              | легче, оптимизировав топологию конструкции? Из первых рук    |                              |
|                         |                              | Представляем вам  четыре беседы  с клиентами, использующими  |                              |
|                         |                              | SOLIDWORKS Simulation: Electric Power Systems, GE            |                              |
|                         |                              | Healthcare, Omax Corporation и Tenaris Group. Узнайте, как   |                              |
|                         |                              | эти компании повышают качество проектирования, быстрее       |                              |
|                         |                              | доводят проекты до готовности, сокращают потребность в       |                              |
|                         |                              | физических опытных образцах и реализуют производственные     |                              |
|                         |                              | инновации. Хотите, чтобы ваши инженеры узнали, как решать    |                              |
|                         |                              | проблемы на ранних стадиях проектирования с помощью          |                              |
|                         |                              | SOLIDWORKS Simulation  и анализа МКЭ?  Авторизованный        |                              |
|                         |                              | партнер в вашем регионе  обязательно расскажет об этом.      |                              |
|                         |                              | Подробно ознакомиться с функционалом и новшествами           |                              |
|                         |                              | SOLIDWORKS 2021 предлагаем вам, посмотрев видео на           |                              |
|                         |                              | официальном канале Dassault Systemes  в России:    1.        |                              |
|                         |                              | SOLIDWORKS 2021 | Повышение производительности и новый       |                              |
|                         |                              | подход к проектированию     2.   Что нового в SOLIDWORKS     |                              |
|                         |                              | SIMULATION 2021    3.  SOLIDWORKS CAM 2021 | Нововведения в  |                              |
|                         |                              | моделировании механической обработки    4.  SOLIDWORKS       |                              |
|                         |                              | PLASTICS 2021 | Новый взгляд на процессы литья полимеров под |                              |
|                         |                              | давлением    5.  SOLIDWORKS PDM 2021 | Обмен данными с       |                              |
|                         |                              | внешними системами                                           |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Что мы в действительности   | Художественное изображение представляет небольшие            |         skillfactory         |
| pany/skillfactory/blog/ |   знаем о тёмной материи и   | концентрации тёмной материи в галактическом кластере MACSJ   |          астрономия          |
|         546106/         |        чёрных дырах?         | 1206. Астрономы измеряли вызванное этим кластером            |            физика            |
|                         |                              | гравитационное линзирование, чтобы получить подробную карту  |          математика          |
|                         |                              | распределения тёмной материи в нём. Количество               |         чёрные дыры          |
|                         |                              | мелкомасштабной подструктуры тёмной материи, которая должна  |             ото              |
|                         |                              | присутствовать, намного больше, чем прогнозируется моделью.  |            космос            |
|                         |                              | Если вы переместитесь на 100 лет назад и перебросите         |                              |
|                         |                              | выдающихся учёных того времени к нам, как вы думаете, какие  |                              |
|                         |                              | научные открытия будут для них самыми потрясающими? Удивятся |                              |
|                         |                              | ли они, узнав, что излучающие почти весь свет звёзды, тот    |                              |
|                         |                              | самый свет, что мы видим во Вселенной за пределами Земли,    |                              |
|                         |                              | составляет лишь крошечную частицу всей массы Вселенной? Их   |                              |
|                         |                              | бы сбило с толку существование сверхмассивных чёрных дыр –   |                              |
|                         |                              | самых массивных объектов во Вселенной? Или самыми            |                              |
|                         |                              | загадочными они находили бы тёмную материю или тёмную        |                              |
|                         |                              | энергию? Легко было бы понять недоверие учёных. Наука,       |                              |
|                         |                              | прежде всего, – это эмпирическое устремление: наше понимание |                              |
|                         |                              | мира природы и понимание Вселенной складываются в первую     |                              |
|                         |                              | очередь из того, что мы измеряем и наблюдаем. Трудно себе    |                              |
|                         |                              | представить, что не излучающие собственного света объекты    |                              |
|                         |                              | или сущности, которые мы не можем наблюдать прямо в          |                              |
|                         |                              | телескоп, составляют столь массивный и важный компонент      |                              |
|                         |                              | нашей Вселенной. И всё же почти все современные учёные       |                              |
|                         |                              | пришли к одному и тому же выводу: наша Вселенная в основном  |                              |
|                         |                              | – тёмная. Вот как мы узнали об этом. Этот фрагмент           |                              |
|                         |                              | моделирования образования структуры, с расширением Вселенной |                              |
|                         |                              | в масштабе, представляет миллиарды лет гравитационного роста |                              |
|                         |                              | насыщенной тёмной материей Вселенной. Заметим, что нити и    |                              |
|                         |                              | богатые скопления, которые образуются на пересечении нитей,  |                              |
|                         |                              | возникают в основном из-за тёмной материи; нормальная        |                              |
|                         |                              | материя играет лишь незначительную роль. Рост структуры      |                              |
|                         |                              | согласуется с происхождением нашей Вселенной из Большого     |                              |
|                         |                              | взрыва. В смысле теории важно с самого начала понимать две   |                              |
|                         |                              | отдельные вещи: Теория подсказывает нам, чего ожидать в      |                              |
|                         |                              | определённых условиях. Но она говорит нам только о возможном |                              |
|                         |                              | во Вселенной, а не о том, какими должны быть наши            |                              |
|                         |                              | предположения об условиях во Вселенной. Когда Эйнштейн       |                              |
|                         |                              | выдвинул нашу современную теорию гравитации – Общую Теорию   |                              |
|                         |                              | Относительности, она сотворила то, чего не смогла никакая    |                              |
|                         |                              | другая теория. Она не только объяснила всё, что объясняла    |                              |
|                         |                              | ведущая тогда теория Ньютона, но и предложила множество      |                              |
|                         |                              | прогнозов, которые отличались от прогнозов предшествующей    |                              |
|                         |                              | теории; теория Эйнштейна с успехом объяснила орбиту          |                              |
|                         |                              | Меркурия, которая до того была нерешённой научной проблемой; |                              |
|                         |                              | она учитывала и включала наблюдаемые факты замедления        |                              |
|                         |                              | времени и сокращения длины, а также давала новые прогнозы о  |                              |
|                         |                              | гравитационном искривлении и отклонении света, что привело к |                              |
|                         |                              | конкретным наблюдаемым последствиям. Всего через несколько   |                              |
|                         |                              | лет после того, как была предложена Общая Теория             |                              |
|                         |                              | Относительности, были проведены критически важные            |                              |
|                         |                              | эксперименты, которые подтвердили прогнозы Эйнштейна и       |                              |
|                         |                              | опровергли механику Ньютона как нулевую гипотезу. Настоящие  |                              |
|                         |                              | фотопластинки негативов и позитивов из экспедиции Эддингтона |                              |
|                         |                              | 1919 года. Фотопластинки негативов и позитивов из экспедиции |                              |
|                         |                              | Эддингтона 1919 года, линиями показывающие, как расположены  |                              |
|                         |                              | идентифицированные звёзды, которые будут использоваться,     |                              |
|                         |                              | чтобы измерять отклонения света из-за присутствия Солнца.    |                              |
|                         |                              | Это было первое прямое экспериментальное подтверждение общей |                              |
|                         |                              | теории относительности Эйнштейна. Общая Теория               |                              |
|                         |                              | Относительности Эйнштейна дала человечеству фундамент, чтобы |                              |
|                         |                              | понять гравитацию во Вселенной. Она говорит нам о том, что,  |                              |
|                         |                              | в зависимости от свойств и конфигурации материи Вселенной,   |                              |
|                         |                              | пространство-время изгибается определённым образом. Кривизна |                              |
|                         |                              | пространства и времени, вместе взятых, рассказывает нам, как |                              |
|                         |                              | материя и энергия – во всех её формах – движется сквозь      |                              |
|                         |                              | пространство-время. С точки зрения теории, это даёт нам      |                              |
|                         |                              | поистине безграничные возможности. Можно выдумать Вселенную  |                              |
|                         |                              | любой конфигурации, какая вам только понравится. с любой     |                              |
|                         |                              | комбинацией масс и частиц, излучения и жидкостей с           |                              |
|                         |                              | различными свойствами, распределёнными, как вам нравится,, и |                              |
|                         |                              | Общая Относительность расскажет вам, как это пространство-   |                              |
|                         |                              | время будет изгибаться и развиваться, и как все компоненты   |                              |
|                         |                              | будут двигаться в этом пространстве-времени. Но теория не    |                              |
|                         |                              | расскажет вам, сама по себе, из чего состоит наша Вселенная  |                              |
|                         |                              | или как она себя ведёт. Чтобы это узнать, мы должны          |                              |
|                         |                              | наблюдать за Вселенной и определять, что в ней и где. Как    |                              |
|                         |                              | моделирование (красным), так и исследования галактик         |                              |
|                         |                              | (синим/фиолетовым) показывают одни и те же крупномасштабные  |                              |
|                         |                              | модели кластеризации, даже если присмотреться к              |                              |
|                         |                              | математическим деталям. Если бы тёмной материи не было,      |                              |
|                         |                              | большая часть этой структуры не только отличалась бы         |                              |
|                         |                              | деталями, но и была бы смыта; галактики были бы редки и      |                              |
|                         |                              | заполнены лёгкими элементами почти полностью. Для примера:   |                              |
|                         |                              | мы живём во Вселенной, где (грубо и в больших масштабах)     |                              |
|                         |                              | количество материи во всех направлениях и областях одно и то |                              |
|                         |                              | же. Обладающая такими свойствами Вселенная, то есть          |                              |
|                         |                              | однородная в смысле массы во всех областях (гомогенная) и во |                              |
|                         |                              | всех направлениях (изотропная), не может быть статичной и    |                              |
|                         |                              | неизменной. Либо само пространство-время будет сжиматься,    |                              |
|                         |                              | приводя к коллапсу объекта какого-то типа, либо оно будет    |                              |
|                         |                              | расширяться, и объекты будут разлетаться от нас тем быстрее, |                              |
|                         |                              | чем они дальше. Однако единственный способ узнать, что это   |                              |
|                         |                              | действительно так, – наблюдать. Если бы мы не наблюдали      |                              |
|                         |                              | Вселенную и не заметили, что, чем в среднем дальше от нас    |                              |
|                         |                              | галактика, тем больше её свет смещается к красному, мы не    |                              |
|                         |                              | пришли бы к выводу, что Вселенная расширяется. Если бы мы не |                              |
|                         |                              | увидели, в больших масштабах, что средняя плотность          |                              |
|                         |                              | Вселенной равномерна с точностью до 99,99 %+, мы не пришли   |                              |
|                         |                              | бы к выводу, что она изотропна и гомогенна. Там, где         |                              |
|                         |                              | собралось достаточно материи, чтобы сформировать связанную   |                              |
|                         |                              | структуру, которая уже успела пережить коллапс, мы не пришли |                              |
|                         |                              | бы к выводу, что в центре структуры имеет место              |                              |
|                         |                              | сверхмассивная сингулярность, если бы у нас не было          |                              |
|                         |                              | ошеломляющих данных наблюдения за сверхмассивными чёрными    |                              |
|                         |                              | дырами. Первое опубликованное телескопом Event Horizon       |                              |
|                         |                              | изображение чёрной дыры достигло разрешения 22,5             |                              |
|                         |                              | микросекунды, что позволило массиву разрешить горизонт       |                              |
|                         |                              | событий чёрной дыры в центре M87. Чтобы достичь такой же     |                              |
|                         |                              | резкости, Телескоп с одной тарелкой должен иметь диаметр 12  |                              |
|                         |                              | 000 км. Обратите внимание на различия между изображениями    |                              |
|                         |                              | 5/6 и 10/11 апреля, которые показывают, что особенности      |                              |
|                         |                              | вокруг чёрной дыры меняются с течением времени. Это помогает |                              |
|                         |                              | продемонстрировать важность синхронизации различных          |                              |
|                         |                              | наблюдений, а не просто их усреднения по времени. Когда мы   |                              |
|                         |                              | говорим о сверхмассивных чёрных дырах, вы можете вспомнить   |                              |
|                         |                              | знаменитое изображение этого гиганта с телескопа Event       |                              |
|                         |                              | Horizon в 6,5 миллионов солнечных масс, но это лишь верхушка |                              |
|                         |                              | айсберга. На практике сверхмассивная чёрная дыра есть в      |                              |
|                         |                              | центре каждой галактики. У нашего Млечного Пути этот центр   |                              |
|                         |                              | имеет массу в 4,5 миллиона Солнц, и мы наблюдали его таким   |                              |
|                         |                              | образом: косвенно исходя из данных от звёзд, движущихся      |                              |
|                         |                              | вокруг вокруг не излучающих света больших масс в центре      |                              |
|                         |                              | галактики; косвенно исходя из данных о попадающей в неё      |                              |
|                         |                              | материи, которая вызывает рентгеновское и радиоизлучения,    |                              |
|                         |                              | включая вспышки; напрямую, при помощи той же технологии и    |                              |
|                         |                              | оборудования, которое измеряли чёрную дыру в центре Messier  |                              |
|                         |                              | 87. Многие из нас надеются на то, что коллабарация с Event   |                              |
|                         |                              | Horizon Telescope позволит опубликовать изображение          |                              |
|                         |                              | центральной чёрной дыры Млечного Пути в конце этого года. У  |                              |
|                         |                              | учёных имеются данные, но, поскольку их примерно в 1500 раз  |                              |
|                         |                              | меньше тех, что мы получим с первым изображением, на         |                              |
|                         |                              | временной шкале эти данные меняются в 1500 раз быстрее.      |                              |
|                         |                              | Создать точное изображение – задача гораздо более сложная,   |                              |
|                         |                              | особенно учитывая, насколько в такой грязной среде зашумлен  |                              |
|                         |                              | радиосигнал. Тем не менее команда выразила оптимизм по       |                              |
|                         |                              | поводу того, что снимок будет выпущен в ближайшие несколько  |                              |
|                         |                              | месяцев. Этот 20-летний период жизни звезд вблизи центра     |                              |
|                         |                              | нашей галактики увидел ESO (публикация 2018 года). Обратите  |                              |
|                         |                              | внимание на то, как разрешение и чувствительность к          |                              |
|                         |                              | особенностям обостряются и улучшаются к концу и как все      |                              |
|                         |                              | центральные звезды вращаются вокруг невидимой точки –        |                              |
|                         |                              | центральной чёрной дыры нашей галактики, совпадающей с       |                              |
|                         |                              | прогнозами Общей Теории Относительности Эйнштейна. Сочетание |                              |
|                         |                              | прямых и косвенных доказательств придаёт уверенности в том,  |                              |
|                         |                              | что рентгеновское и радиоизлучение, которое мы наблюдаем из  |                              |
|                         |                              | различных источников Вселенной, на самом деле – чёрная дыра. |                              |
|                         |                              | Чёрные дыры бинарно излучают сигналы электромагнитного       |                              |
|                         |                              | излучения. За эти годы мы обнаружили десятки таких сигналов. |                              |
|                         |                              | Активные галактические ядра и квазары питаются               |                              |
|                         |                              | сверхмассивными чёрными дырами, и мы даже наблюдали, как они |                              |
|                         |                              | включаются и отключаются, когда материя начинает или         |                              |
|                         |                              | перестаёт питать эти центральные двигатели. На самом деле мы |                              |
|                         |                              | наблюдали сверхмассивные чёрные дыры в мириадах галактик,    |                              |
|                         |                              | откуда бы мы ни смотрели. Новый опрос массива LOFAR, к       |                              |
|                         |                              | примеру, начинается с северной небесной полусферы. Увидев    |                              |
|                         |                              | лишь крошечную часть неба под поясом, учёные уже открыли     |                              |
|                         |                              | более 25 000 сверхмассивных чёрных дыр. На карте вы даже     |                              |
|                         |                              | можете увидеть, как они собираются и кластеризуются вместе,  |                              |
|                         |                              | согласно крупномасштабному распределению массивных галактик  |                              |
|                         |                              | в нашей Вселенной. На этой карте, составленной по            |                              |
|                         |                              | результатам исследования LOFAR, показаны сгруппированные во  |                              |
|                         |                              | Вселенной сверхмассивные чёрные дыры. Общая карта охватывает |                              |
|                         |                              | 740 квадратных градусов [квадратный градус – единица         |                              |
|                         |                              | измерения телесных углов. Поскольку один градус обычного     |                              |
|                         |                              | плоского угла равен pi/180 радиан, то один квадратный градус |                              |
|                         |                              | определён как (pi/180)2 = 0,0003046174 стерадиан. Сфера      |                              |
|                         |                              | содержит 4·1802/(pi) = 129 600/(pi) = 41 252,961 25          |                              |
|                         |                              | квадратных градусов], или около 2 % неба, и на сегодня       |                              |
|                         |                              | обнаружено более 25 000 чёрных дыр. Каждая точка света на    |                              |
|                         |                              | этом изображении – это активная сверхмассивная чёрная дыра.  |                              |
|                         |                              | И весь этот разговор о чёрных дырах даже не касается самой   |                              |
|                         |                              | революционной разработки прошлого десятилетия – прямого      |                              |
|                         |                              | обнаружения при помощи обсерваторий гравитационных волн.     |                              |
|                         |                              | Когда две чёрные дыры, вращаясь вокруг друг друга, сливаются |                              |
|                         |                              | в одну, они порождают гравитационные волны: пульсации        |                              |
|                         |                              | пространства-времени, то есть совершенно новое, не           |                              |
|                         |                              | электромагнитное (не на основе света) излучение. Когда такие |                              |
|                         |                              | волны проходят через детекторы гравитационных волн, они      |                              |
|                         |                              | попеременно сжимают и расширяют пространство, представленное |                              |
|                         |                              | в разных направлениях, и в данных с детекторов мы видим      |                              |
|                         |                              | паттерны этих пульсаций. Единственные успешные детекторы,    |                              |
|                         |                              | которые у нас есть прямо сейчас, построены в совместной      |                              |
|                         |                              | работе LIGO и Virgo, у них относительно небольшой масштаб, и |                              |
|                         |                              | он ограничивает частоту наблюдаемых волн, соответствующих    |                              |
|                         |                              | малым чёрным дырам в последней стадии вращения с потерей     |                              |
|                         |                              | энергии и слиянием. В ближайшие годы будут запущены новые    |                              |
|                         |                              | космические детекторы, такие как LISA, что позволит нам      |                              |
|                         |                              | обнаруживать чёрные дыры большей массы, а также – задолго до |                              |
|                         |                              | окончательного слияния – наблюдать и более мелкие чёрные     |                              |
|                         |                              | дыры. Художественное представление трёх космических кораблей |                              |
|                         |                              | LISA показывает, что пульсации в пространстве, порождаемые   |                              |
|                         |                              | длиннопериодическими гравитационными источниками волн,       |                              |
|                         |                              | должны открыть новый, интересный взгляд на Вселенную. Эти    |                              |
|                         |                              | волны можно рассматривать как пульсации в ткани самого       |                              |
|                         |                              | пространства-времени, но они также являются                  |                              |
|                         |                              | энергоносителями, которые, в теории, состоят из частиц. У    |                              |
|                         |                              | Вселенной есть ещё одна сложная головоломка: проблема тёмной |                              |
|                         |                              | материи. Если мы возьмём в расчёт всю материю, о которой     |                              |
|                         |                              | знаем, всю материю, которую можем наблюдать непосредственно, |                              |
|                         |                              | – атомы, плазму, газ, нейтрино, излучения, чёрные дыры и так |                              |
|                         |                              | далее, мы получим около 15 % всей массы, которая вообще      |                              |
|                         |                              | должна существовать. Без массы, которая примерно в 6 раз     |                              |
|                         |                              | больше наблюдаемой, которая не может сталкиваться или        |                              |
|                         |                              | взаимодействовать, как нормальные атомы, мы не можем         |                              |
|                         |                              | объяснить следующие явления: паттерны флуктуаций фоновых     |                              |
|                         |                              | космических микроволн; крупномасштабное скопление галактик   |                              |
|                         |                              | как явление и галактические скопления; движение конкретных   |                              |
|                         |                              | галактик внутри кластеров; размеры и массы наблюдаемых       |                              |
|                         |                              | галактик; гравитационное линзирование галактик, квазаров или |                              |
|                         |                              | сталкивающихся галактических групп и кластеров. Добавление   |                              |
|                         |                              | всего одного ингредиента, некоей формы холодной материи без  |                              |
|                         |                              | столкновений решает головоломку одним махом. Рентгеновская   |                              |
|                         |                              | (розовая) и общие карты материи (синяя) различных            |                              |
|                         |                              | сталкивающихся кластеров галактик показывают чёткое          |                              |
|                         |                              | разделение между нормальным веществом и гравитационными      |                              |
|                         |                              | эффектами – одно из самых убедительных свидетельств тёмного  |                              |
|                         |                              | вещества. Хотя некоторые из проведённых нами симуляций       |                              |
|                         |                              | показывают, что некоторые кластеры могут двигаться быстрее,  |                              |
|                         |                              | чем ожидалось, симуляция включает не только гравитацию, но и |                              |
|                         |                              | другие эффекты, такие как обратная связь, образование звёзд  |                              |
|                         |                              | и звёздные катаклизмы, которые также могут быть важны для    |                              |
|                         |                              | межзвёздного газа. Без тёмной материи эти наблюдения (наряду |                              |
|                         |                              | со многими другими) не могут быть объяснены в достаточной    |                              |
|                         |                              | мере. Так или иначе, объяснение в некотором смысле всё ещё   |                              |
|                         |                              | неудовлетворительно. Мы знаем некоторые общие признаки       |                              |
|                         |                              | тёмной материи, которые, взятые вместе, рассказывают о       |                              |
|                         |                              | Вселенной захватывающую историю. Но нам ещё предстоит        |                              |
|                         |                              | напрямую обнаружить какую бы то ни было частицу, которая     |                              |
|                         |                              | может быть ответственна за это. Вид материи, чисто           |                              |
|                         |                              | коллизионный, не обязательно объясняет структуру космоса,    |                              |
|                         |                              | которая появляется в мельчайших масштабах. Возможно, что за  |                              |
|                         |                              | это несоответствие отвечают чисто гравитационные эффекты,    |                              |
|                         |                              | такие как динамический нагрев, но возможно также, что тёмная |                              |
|                         |                              | материя не настолько проста. Между тем сейчас мы наблюдаем   |                              |
|                         |                              | много сверхмассивных чёрных дыр, которые каким-то образом    |                              |
|                         |                              | выросли до миллиарда или более масс Солнца всего за          |                              |
|                         |                              | несколько сотен миллионов лет: это сложная головоломка       |                              |
|                         |                              | формирования структуры нашей Вселенной. Основываясь на нашем |                              |
|                         |                              | понимании первых звёзд и того, как из них возникли первые    |                              |
|                         |                              | чёрные дыры, мы пытаемся объяснить, как они стали такими     |                              |
|                         |                              | большими и так быстро, наблюдая этих гигантов значительно    |                              |
|                         |                              | раньше предполагаемого. Если начать с самой первой чёрной    |                              |
|                         |                              | дыры, когда Вселенной было всего 100 миллионов лет, тут есть |                              |
|                         |                              | предел скорости, с которой эта чёрная дыра может расти:      |                              |
|                         |                              | предел Эддингтона. Либо эти чёрные дыры с самого начала      |                              |
|                         |                              | больше, чем предполагают наши теории, формируются раньше,    |                              |
|                         |                              | чем мы осознаём, либо они растут быстрее наших представлений |                              |
|                         |                              | и это позволяет им достичь наблюдаемой массы. Таковы границы |                              |
|                         |                              | наших знаний и представление об одной из самых актуальных    |                              |
|                         |                              | проблем современной космологии на сегодня. Благодаря         |                              |
|                         |                              | обсерваториям, инструментам и открытиям, которые уже         |                              |
|                         |                              | произошли, а также благодаря нашему знанию законов физики,   |                              |
|                         |                              | которое помогает нам интерпретировать их и помещать в        |                              |
|                         |                              | надлежащий контекст, мы прошли так далеко, насколько это     |                              |
|                         |                              | возможно. С другой стороны, есть много поводов, чтобы начать |                              |
|                         |                              | волноваться в связи с новыми технологическими разработками и |                              |
|                         |                              | возможностями наблюдения в самом ближайшем будущем. Это      |                              |
|                         |                              | большое дело; мы на границе нашего вечного поиска понимания  |                              |
|                         |                              | Вселенной вокруг нас! Дополню данный материал моей текстовой |                              |
|                         |                              | трансляцией  доклада о Невидимой Вселенной  кандидата наук,  |                              |
|                         |                              | астронома и профессора Йельского университета – Приямвады    |                              |
|                         |                              | Натараджана. Одна из лучших современных космологов-          |                              |
|                         |                              | наблюдателей, она недавно выпустила книгу под названием      |                              |
|                         |                              | «Картирование небес: радикальные научные идеи, раскрывающие  |                              |
|                         |                              | космос».  15:50 : Трудно представить, что всего 100 лет      |                              |
|                         |                              | назад мы даже не знали, что такое «Вселенная». Известные     |                              |
|                         |                              | объекты находились всего в нескольких сотнях, *может быть*,  |                              |
|                         |                              | некоторые были в нескольких тысячах световых лет от нас.     |                              |
|                         |                              | Звёзды, звёздные скопления, шаровые звёздные скопления,      |                              |
|                         |                              | туманности и т. д. Некоторые люди утверждали, что спиральные |                              |
|                         |                              | туманности (и, возможно, некоторые эллиптические) на самом   |                              |
|                         |                              | деле были целыми галактиками далеко за пределами Млечного    |                              |
|                         |                              | Пути, но это была точка зрения меньшинства. «Большой спор»   |                              |
|                         |                              | 1920 года, которые были призваны решить этот вопрос, его не  |                              |
|                         |                              | решили. Фактически модераторы дебатов дали больше аргументов |                              |
|                         |                              | в пользу того, что «эти туманности являются объектами в      |                              |
|                         |                              | нашей Галактике», не одобряя решения, что «они находятся за  |                              |
|                         |                              | пределами галактики». В 1916 году была опубликована статья,  |                              |
|                         |                              | в которой утверждалось, что в спиральной туманности M101     |                              |
|                         |                              | движутся отдельные звёзды, сегодня известной как галактика   |                              |
|                         |                              | Штырькового колеса. Эти данные тогда опровергли, и позже     |                              |
|                         |                              | утверждалось, что они ошибочны, но это произошло не раньше,  |                              |
|                         |                              | чем многие люди сделали выводы на основе ложных данных.      |                              |
|                         |                              | 15:54 : Когда у тебя есть наблюдения, которые ну просто      |                              |
|                         |                              | неправда, – это вызов. В известной работе всего за несколько |                              |
|                         |                              | лет до этого утверждалось, что в близлежащей "спиральной     |                              |
|                         |                              | туманности" – Pinwheel Galaxy (Messier 101) – наблюдаются    |                              |
|                         |                              | звёзды, двигающиеся во времени: вращаясь с объектом. Если бы |                              |
|                         |                              | это была галактика далеко за пределами Млечного Пути, эти    |                              |
|                         |                              | звёзды двигались бы намного быстрее света. Следовательно,    |                              |
|                         |                              | аргумент неверен и этот объект должен находиться рядом,      |                              |
|                         |                              | внутри нашей галактики. У галактики Pinwheel, Messier 101    |                              |
|                         |                              | много общих черт с нашим Млечным Путём, но аналогия          |                              |
|                         |                              | определённо неидеальна, поскольку и окраины галактики, и     |                              |
|                         |                              | внутренняя область ядра обладают особенностями, отличными от |                              |
|                         |                              | особенностей Млечного Пути. 15:57 : Но, когда мы детально    |                              |
|                         |                              | смотрим на Pinwheel, даже спустя 105 лет после тех           |                              |
|                         |                              | наблюдений, которые утверждали, что он вращается, мы видим,  |                              |
|                         |                              | что ничего подобного не происходило. Единственный объект,    |                              |
|                         |                              | который вообще двигался в этом поле зрения, – звезда,        |                              |
|                         |                              | которая редко вторгалась в него, она присутствует в нашей    |                              |
|                         |                              | Галактике вдоль линии видимости. Этот объект – галактика,    |                              |
|                         |                              | она  вращается , но для полного витка нужны сотни миллионов  |                              |
|                         |                              | лет; мы не можем обнаружить движение звёзд в этой галактике: |                              |
|                         |                              | она более чем в 10 миллионах световых лет отсюда. .          |                              |
|                         |                              | Относительная плотность вероятности для γ после учёта        |                              |
|                         |                              | статистических и систематических неопределённостей. Только   |                              |
|                         |                              | статистические ошибки показаны зелёным цветом; сумма         |                              |
|                         |                              | систематики – другими цветами. Даже с неопределённостью в    |                              |
|                         |                              | Stellar Spectral Library (спектральной библиотеке звёзд)     |                              |
|                         |                              | Общая Теория Относительности Эйнштейна надёжно подтверждена. |                              |
|                         |                              | 15:59 : Какой урок из этого можно извлечь? Чтобы сделать     |                              |
|                         |                              | вывод, что что-то реально и истинно, мы должны измерять не   |                              |
|                         |                              | то, что происходит, а две вещи: измерять это до              |                              |
|                         |                              | определённого уровня статистической значимости; учитывать    |                              |
|                         |                              | наши систематические ошибки и неопределённости. Как правило, |                              |
|                         |                              | для этого требуется уровень количественной строгости,        |                              |
|                         |                              | которого нет в предыдущих исследованиях, а также             |                              |
|                         |                              | воспроизводимость и независимое подтверждение, что не только |                              |
|                         |                              | невозможно получить для этих результатов вращения, но и      |                              |
|                         |                              | горячо оспаривается многими учёными в этой области. Короче   |                              |
|                         |                              | говоря, если новый эффект – реальность, должны существовать  |                              |
|                         |                              | несколько независимых способов проверить его или по крайней  |                              |
|                         |                              | мере несколько независимых команд, которые без влияния со    |                              |
|                         |                              | стороны работают над тем, чтобы обнаружить его. 16:00 :      |                              |
|                         |                              | Поехали! Весьма волнующий факт, что серия публичных лекций   |                              |
|                         |                              | всё ещё продолжается, это мероприятие для широкой публики во |                              |
|                         |                              | время глобальной пандемии. Я рад, что Институт Периметра     |                              |
|                         |                              | проделал эту работу! Трансляция публичной лекции 03 марта    |                              |
|                         |                              | 2021 года, доктор Прия Натараджан отдаёт полученные от       |                              |
|                         |                              | мероприятия деньги Институту Периметра. 16:04 PM : Очень     |                              |
|                         |                              | любопытно посмотреть, как работают слайды: видно ли их и     |                              |
|                         |                              | спикера одновременно? 16:06 PM : Нет. Видно слайды Прии,     |                              |
|                         |                              | слышен её голос. Тем не менее подача даёт возможность на     |                              |
|                         |                              | чём-то сосредоточиться, и я надеюсь, что формат будет        |                              |
|                         |                              | интересным и динамичным. Продолжаем! Вторая по величине      |                              |
|                         |                              | чёрная дыра, как её видно с Земли, – та, что находится в     |                              |
|                         |                              | центре галактики M87, показана здесь с трёх точек зрения. В  |                              |
|                         |                              | верхней части – оптический вид от Хаббла, в нижней левой –   |                              |
|                         |                              | радио от NRAO, а в нижней правой – рентген от Чандры. Эти    |                              |
|                         |                              | различные взгляды имеют также различное разрешение в         |                              |
|                         |                              | зависимости от оптической чувствительности, длины волны      |                              |
|                         |                              | используемого света и размера зеркал телескопа, используемых |                              |
|                         |                              | для их наблюдения. Всё это примеры излучения из областей     |                              |
|                         |                              | вокруг чёрных дыр, демонстрирующие, что чёрные дыры, в конце |                              |
|                         |                              | концов, не такие уж и чёрные. 16:09 : Позвольте кое-то       |                              |
|                         |                              | прояснить: доказательства существования сверхмассивных       |                              |
|                         |                              | чёрных дыр были довольно ошеломляющими гораздо больше чем 10 |                              |
|                         |                              | лет назад. Излучение высокой интенсивности, видимое, в       |                              |
|                         |                              | частности, в радиоспектре (внизу слева) и рентгеновском      |                              |
|                         |                              | (внизу справа) спектре, должно исходить от очень массивного, |                              |
|                         |                              | энергичного движителя, который сам по себе не излучает       |                              |
|                         |                              | света. Кроме того, мы наблюдали звёзды, которые вращаются    |                              |
|                         |                              | вокруг галактического центра с конца 1990-х годов, и опять-  |                              |
|                         |                              | таки никакого света не испускалось, и доказательства того,   |                              |
|                         |                              | что там находится объект массой в миллионы солнечных масс,   |                              |
|                         |                              | были довольно надёжными. С тех пор сделано гораздо больше,   |                              |
|                         |                              | но мысль о том, что эти центральные объекты были не чёрной   |                              |
|                         |                              | дырой, а чем-то иным, действительно не воспринимали всерьёз. |                              |
|                         |                              | Одной из сложных головоломок 1500-х годов было то, как       |                              |
|                         |                              | планеты двигались очевидно ретроградным образом. Такое       |                              |
|                         |                              | движение можно объяснить либо геоцентрической моделью        |                              |
|                         |                              | Птолемея (L), либо гелиоцентрической моделью Коперника (R).  |                              |
|                         |                              | Однако ни одной из них не удавалось добиться произвольной    |                              |
|                         |                              | точности в деталях. 16:12 : Я подумал, стоит отметить, что   |                              |
|                         |                              | когда мы смотрим на геоцентрическую и гелиоцентрическую      |                              |
|                         |                              | модели, наблюдаемое могут объяснить обе. Лишь спустя много   |                              |
|                         |                              | лет после Коперника, с появлением идеи Кеплера об            |                              |
|                         |                              | эллиптических орбитах, данные были значительно лучше         |                              |
|                         |                              | согласованы с гелиоцентрической моделью, чем с любой другой. |                              |
|                         |                              | Тихо Браге провёл некоторые из лучших наблюдений Марса до    |                              |
|                         |                              | изобретения телескопа, и работа Кеплера в значительной       |                              |
|                         |                              | степени опиралась на эти данные. Здесь наблюдения Браге за   |                              |
|                         |                              | орбитой Марса, особенно во время эпизодов ретроградного      |                              |
|                         |                              | движения, предоставили утончённое подтверждение теории       |                              |
|                         |                              | эллиптической орбиты Кеплера. 16:15 : Прия упоминает, но не  |                              |
|                         |                              | утруждаясь (а я думаю, стоило бы потрудиться!), о            |                              |
|                         |                              | многочисленных независимых линиях доказательств              |                              |
|                         |                              | существования тёмной материи. У нас есть целый ряд           |                              |
|                         |                              | наблюдений, которые мы можем провести, и я надеюсь, что она  |                              |
|                         |                              | тщательно исследует их. Но если вы хотите сделать упор на    |                              |
|                         |                              | количества и спросить: «Сколько энергии Вселенной находится  |                              |
|                         |                              | в форме чёрных дыр», вы получите ответ порядка ~0,001% от    |                              |
|                         |                              | общей энергии Вселенной. Примечательно также, что это почти  |                              |
|                         |                              | точно равно количеству отрицательной потенциальной энергии   |                              |
|                         |                              | гравитации, которая возникла в результате коллапса вещества, |                              |
|                         |                              | образовавшего сами чёрные дыры! Эволюция структуры Вселенной |                              |
|                         |                              | в крупном масштабе, от раннего однородного состояния до      |                              |
|                         |                              | кластеризованной Вселенной, которую мы знаем сегодня. Тип и  |                              |
|                         |                              | изобилие тёмной материи могли бы создать совершенно другую   |                              |
|                         |                              | Вселенную, если бы мы изменили то, что удерживает наша       |                              |
|                         |                              | Вселенная. Обратите внимание на тот факт, что структуры      |                              |
|                         |                              | малого масштаба во всех случаях появляются на ранней стадии, |                              |
|                         |                              | в то время как крупномасштабные структуры возникают намного  |                              |
|                         |                              | позже. 16:18 : То, о чем говорит Прия, вы можете увидеть на  |                              |
|                         |                              | приведенном выше графике: три различных моделирования с      |                              |
|                         |                              | тремя различными типами/обличиями тёмной материи. Если       |                              |
|                         |                              | Вселенная слишком сгруппирована или наоборот, или же         |                              |
|                         |                              | сгущается в разных масштабах по-разному, нежели прогнозирует |                              |
|                         |                              | наша модель, мы, безусловно, сможем исключить эти сценарии.  |                              |
|                         |                              | Единственный способ привести крупномасштабную структуру      |                              |
|                         |                              | Вселенной в соответствие с наблюдениями – это добавить       |                              |
|                         |                              | темную материю. Скорости галактик в кластере Coma, из        |                              |
|                         |                              | которых можно вывести общую массу кластера, чтобы удержать   |                              |
|                         |                              | его гравитационных границах. Отметим, что эти данные, взятые |                              |
|                         |                              | более чем через 50 лет после первых утверждений Цвицкого,    |                              |
|                         |                              | почти полностью совпадают с тем, о чём сам Цвицкий утверждал |                              |
|                         |                              | ещё в 1933 году. 16:21 : Ладно, это стоит показать. Видите   |                              |
|                         |                              | это график? Он показывает, основываясь на наблюдаемом        |                              |
|                         |                              | красном смещении, как быстро движутся отдельные галактики в  |                              |
|                         |                              | кластере Coma по отношению к нашей линии видимости. Обратите |                              |
|                         |                              | внимание, что "самые медленные" галактики удаляются от нас   |                              |
|                         |                              | примерно на ~4700 км/с, тогда как "самые быстрые" – на ~8900 |                              |
|                         |                              | км/с. Разница в ~4200 км/с огромна, это указывает на то, что |                              |
|                         |                              | должно быть достаточно массы, чтобы держать все эти          |                              |
|                         |                              | галактики связанными друг с другом даже при этих очень       |                              |
|                         |                              | высоких скоростях. Хотя многие оспаривали это (не            |                              |
|                         |                              | наблюдения, а интерпретацию), утверждая, что может           |                              |
|                         |                              | существовать объясняющая всё “нормальная тёмная материя”, –  |                              |
|                         |                              | этот род наблюдений теперь является жизненно важным          |                              |
|                         |                              | свидетельством в понимании загадки тёмной материи.           |                              |
|                         |                              | Галактика, управляемая только нормальной материей (L), будет |                              |
|                         |                              | иметь значительно меньшую скорость вращения в окрестностях,  |                              |
|                         |                              | чем по направлению к центру, подобно тому, как движутся      |                              |
|                         |                              | планеты в Солнечной системе. Однако наблюдения показывают,   |                              |
|                         |                              | что скорости вращения в значительной степени не зависят от   |                              |
|                         |                              | радиуса (R) (от галактического центра), а это приводит к     |                              |
|                         |                              | выводу о том, что количество невидимой или тёмной материи    |                              |
|                         |                              | должно быть больше. 16:24 : Я хочу, чтобы вы оценили разницу |                              |
|                         |                              | между галактикой только с нормальной материей, которая будет |                              |
|                         |                              | вращаться, как показано слева, с той, что справа, которая    |                              |
|                         |                              | предполагает гало тёмной материи. Если бы это была           |                              |
|                         |                              | единственное свидетельство, я свободно признал бы, что       |                              |
|                         |                              | объяснение тёмной материей не столь убедительно, как бы ни   |                              |
|                         |                              | был убедителен полный набор возможностей тёмной материи.     |                              |
|                         |                              | Любая конфигурация фоновых точек света – звёзд, галактик или |                              |
|                         |                              | кластеров – искажается из-за влияния массы переднего плана   |                              |
|                         |                              | посредством слабого гравитационного линзирования. Сигнатура  |                              |
|                         |                              | безошибочна даже при шуме случайной формы. 16:27 : Окей,     |                              |
|                         |                              | Прия сейчас показывает диаграмму сильного гравитационного    |                              |
|                         |                              | притяжения, и это очень важная часть головоломки. Как она    |                              |
|                         |                              | показывает, когда у вас есть большая масса, которая          |                              |
|                         |                              | оказывается на пути света из удалённого источника,           |                              |
|                         |                              | правильная конфигурация может привести к тому, что эта масса |                              |
|                         |                              | будет действовать как сильный объектив, который продуцирует  |                              |
|                         |                              | увеличенные изображения, несколько изображений, а также      |                              |
|                         |                              | искажённые изображения. Но что гораздо мощнее, так это       |                              |
|                         |                              | слабое гравитационное линзирование, и оно гораздо шире.      |                              |
|                         |                              | Галактики, как правило, ориентированы случайно: нижняя левая |                              |
|                         |                              | панель вверху показывает, как они должны выглядеть без       |                              |
|                         |                              | искажений, естественным образом. Однако там, где есть        |                              |
|                         |                              | большая масса (например, галактический кластер), которое     |                              |
|                         |                              | вмешивается в картину, вы видите искажения в форме и         |                              |
|                         |                              | ориентации этих галактик. Если вы проведёте статистический   |                              |
|                         |                              | анализ, то обнаружите, что вы можете сделать вывод о массе и |                              |
|                         |                              | распределении массы кластеров переднего плана. Вот блестящее |                              |
|                         |                              | изображение, показывающее реконструкцию масс галактического  |                              |
|                         |                              | кластера именно из такого типа линзы. Это ранний пример,     |                              |
|                         |                              | 1998 год. По имеющимся данным гравитационного линзирования   |                              |
|                         |                              | можно реконструировать массу галактического кластера.        |                              |
|                         |                              | Большая часть массы не находится  внутри отдельных галактик, |                              |
|                         |                              | показанных здесь в виде пиков, а исходит из межгалактической |                              |
|                         |                              | среды внутри кластера, где, по-видимому, обитает тёмная      |                              |
|                         |                              | материя. Модель и более детальные наблюдения могут также     |                              |
|                         |                              | выявить подструктуру тёмной материи. 16:31 : Самое приятное  |                              |
|                         |                              | в гравитационном линзировании – то, что для каждой массы     |                              |
|                         |                              | переднего плана, которую мы когда-либо наблюдали, всегда     |                              |
|                         |                              | есть источники фонового света. Чем больше источников и чем   |                              |
|                         |                              | лучше мы их измеряем, тем больше и лучше будет проводиться   |                              |
|                         |                              | реконструкция массы объекта на переднем плане. В случае      |                              |
|                         |                              | самых насыщенных кластеров галактик это приводит к           |                              |
|                         |                              | наибольшему гравитационному линзированию. Это позволяет нам, |                              |
|                         |                              | среди прочего, наблюдать галактики, которые в противном      |                              |
|                         |                              | случае были бы слишком удалёнными и слишком бледными, чтобы  |                              |
|                         |                              | их можно было увидеть с помощью нынешнего оборудования.      |                              |
|                         |                              | Галактический кластер MACS 0416, с проекта Хаббла Frontier   |                              |
|                         |                              | Fields, с массой, показанной в голубом цвете, и увеличением  |                              |
|                         |                              | от линзы – в пурпурном цвете. Пурпурный цвет – это область,  |                              |
|                         |                              | где увеличение линзой будет максимальным. Картирование массы |                              |
|                         |                              | кластера позволяет нам определить, какие локации из всех     |                              |
|                         |                              | должны быть исследованы в смысле наибольшего увеличения и    |                              |
|                         |                              | сверхдальних кандидатов. 16:34 : Итак, вы хотите увидеть     |                              |
|                         |                              | отличные примеры сильного гравитационного линзирования? Прия |                              |
|                         |                              | решила показать вам  Abell 2218 , который, несомненно,       |                              |
|                         |                              | обладает некоторыми довольно заметными особенностями. Но     |                              |
|                         |                              | знаете ли вы, что существует множество огромных, массивных,  |                              |
|                         |                              | далёких галактических кластеров не только во Вселенной, но и |                              |
|                         |                              | в каталоге Abell? Давайте посмотрим на мои любимые. В их     |                              |
|                         |                              | число входит Abell 370: Полосы и дуги, присутствующие в      |                              |
|                         |                              | Abell 370, далёком скоплении галактик на расстоянии около    |                              |
|                         |                              | 5-6 миллиардов световых лет, являются одними из самых ярких  |                              |
|                         |                              | свидетельств гравитационного линзирования и тёмной материи,  |                              |
|                         |                              | которые у нас есть. Линзированные галактики – ещё дальше,    |                              |
|                         |                              | некоторые из них – самые далёкие из когда-либо наблюдаемых.  |                              |
|                         |                              | Abell S1063: .Гигантская эллиптическая галактика в центре    |                              |
|                         |                              | галактического кластера Abell S1063 намного больше и светлее |                              |
|                         |                              | Млечного Пути, но многие другие галактики, даже галактики    |                              |
|                         |                              | меньшего размера, будут затмевать Млечный Путь. Abell 2667:  |                              |
|                         |                              | На этом снимке космического телескопа Хаббл показаны дуги и  |                              |
|                         |                              | многочисленные искажённые изображения фоновых галактик как   |                              |
|                         |                              | результат влияния фонового кластера, Abell 2667. и Abell     |                              |
|                         |                              | 2744. Скопление Pandora, формально известное как Abell 2744, |                              |
|                         |                              | представляет собой космическое столкновение четырёх          |                              |
|                         |                              | независимых кластеров галактик, собранных вместе под         |                              |
|                         |                              | действием непреодолимой силы гравитации. Здесь могут быть    |                              |
|                         |                              | видны тысячи галактик, но сама Вселенная содержит, возможно, |                              |
|                         |                              | два триллиона. 16:39 PM : Ха! Прия показывает график из      |                              |
|                         |                              | новой научной работы, из статьи, которую я сейчас пишу и     |                              |
|                         |                              | планирую опубликовать примерно через 6 часов. Интересная     |                              |
|                         |                              | штука жизнь! DAMA/LIBRA, и я говорю здесь свободно, как      |                              |
|                         |                              | известно, отличается от других, когда дело доходит до        |                              |
|                         |                              | экспериментов с тёмной материей. Да, нам ещё предстоит       |                              |
|                         |                              | обнаружить тёмную материю, и, если бы Прия захотела быть     |                              |
|                         |                              | менее дипломатичной, чем она была, это имело бы основание.   |                              |
|                         |                              | Внешнее пространство-время чёрной дыры Шварцшильда,          |                              |
|                         |                              | известной как параболоид Фламма, легко вычисляется. Но       |                              |
|                         |                              | внутри горизонтов событий все геодезические линии ведут к    |                              |
|                         |                              | центральной сингулярности. 16:42 : Хорошо, теперь мы явно    |                              |
|                         |                              | подошли к разговору о чёрной дыре. Мне нравится думать о     |                              |
|                         |                              | чёрных дырах с разных точек зрения. “Устойчивая сила         |                              |
|                         |                              | тяготения” –  хорошее определение: вы не сможете убежать,    |                              |
|                         |                              | даже если убегаете со скоростью света, и поэтому, если вы    |                              |
|                         |                              | упакуете достаточно материи в достаточно маленький объём     |                              |
|                         |                              | пространства, она вся превратится в чёрную дыру. Когда       |                              |
|                         |                              | материя коллапсирует, она неизбежно образует чёрную дыру.    |                              |
|                         |                              | Пенроуз первым разработал физику пространства-времени,       |                              |
|                         |                              | применимую ко всем наблюдателям во всех точках пространства  |                              |
|                         |                              | и во все моменты времени, такую, что она управляет системой, |                              |
|                         |                              | как эта. С тех пор его концепция – золотой стандарт в Общей  |                              |
|                         |                              | Теории Относительности. 16:45 : Чёрные дыры также могут      |                              |
|                         |                              | возникать из коллапсирующей материи в результате гибели      |                              |
|                         |                              | сверхмассивных звёзд. Заметьте: не только механизм           |                              |
|                         |                              | сверхновых, но и другие механизмы, такие как прямой коллапс, |                              |
|                         |                              | могут порождать их. Это не просто теория; мы буквально       |                              |
|                         |                              | видели, как очень массивные звёзды просто “исчезают”, а      |                              |
|                         |                              | сверхновая не взрывается! Должно быть, исчезнувшие звёзды    |                              |
|                         |                              | превратились в чёрные дыры. Фотографии с телескопа Хаббла в  |                              |
|                         |                              | видимом/ближнем ИК-диапазоне показывают массивную звезду, её |                              |
|                         |                              | масса примерно в 25 раз превышает массу Солнца; она          |                              |
|                         |                              | перестала существовать, сверхновой не возникло, и другого    |                              |
|                         |                              | объяснения тоже нет, то есть прямой коллапс – единственное   |                              |
|                         |                              | разумное и возможное объяснение. 16:48 : Действительно ли    |                              |
|                         |                              | чёрные дыры – это "прокол" в пространстве-времени? Хотите –  |                              |
|                         |                              | верьте, хотите – нет, но это столь же способ воспринимать    |                              |
|                         |                              | чёрную дыру, сколь и предыдущий, и на самом деле он довольно |                              |
|                         |                              | обобщённый. И вот одна забавная вещь: чёрные дыры            |                              |
|                         |                              | Шварцшильда (они массивны, но не вращаются) действительно    |                              |
|                         |                              | ведут себя как проколы: у нас буквально есть "дыра" (или,    |                              |
|                         |                              | математически, топологический дефект) в самом пространстве-  |                              |
|                         |                              | времени – разрыв. В смысле чёрной дыры Керра (то есть        |                              |
|                         |                              | вращающейся и массивной), она уже не совсем дыра, что более  |                              |
|                         |                              | реалистично, а скорее сущность, которая на самом деле        |                              |
|                         |                              | выводят... ну, мы не уверены, куда именно, но ответ,         |                              |
|                         |                              | кажется, "куда-то", а не "в никуда", или на точечную         |                              |
|                         |                              | сингулярность. Чёрные дыры Керра имеют кольцеобразные        |                              |
|                         |                              | сингулярности, и в отличие от чёрных дыр Шварцвальда до них  |                              |
|                         |                              | даже не дотянуться! Точное математическое описание дыры как  |                              |
|                         |                              | с массой, так и с угловым моментом, найдено Роем Керром в    |                              |
|                         |                              | 1963 году, это решение обнаружило вместо одного горизонта    |                              |
|                         |                              | событий с точечной сингулярностью внутренний и внешний       |                              |
|                         |                              | горизонты событий, а также внутреннюю и внешнюю эргосферу    |                              |
|                         |                              | плюс кольцевую сингулярность значительного радиуса. Внешний  |                              |
|                         |                              | наблюдатель не сможет видеть ничего за внешним горизонтом    |                              |
|                         |                              | событий. 16:50 : Я должен сказать, что к этому новому        |                              |
|                         |                              | формату [лекции] пришлось немного привыкать, но я обнаружил, |                              |
|                         |                              | что поглощён лекцией Прии так же, как и на всех предыдущих   |                              |
|                         |                              | открытых лекциях Института Периметра. Это победа технологий  |                              |
|                         |                              | над текущими проблемами! Художественное представление        |                              |
|                         |                              | квазара J0313-1806, показывающего сверхмассивную чёрную дыру |                              |
|                         |                              | и ветер экстремально высокой скорости. Квазар, видимый всего |                              |
|                         |                              | через 670 миллионов лет после Большого взрыва, в 1000 раз    |                              |
|                         |                              | ярче Млечного Пути и питается от самой ранней из известных   |                              |
|                         |                              | сверхмассивных чёрных дыр, масса которых превышает массу     |                              |
|                         |                              | Солнца более чем в 1,6 миллиарда раз. 16:54 : Теперь Прия    |                              |
|                         |                              | рассказывает о сверхмассивных чёрных дырах, и возникает      |                              |
|                         |                              | огромный вопрос: как они формируются и растут в нашей        |                              |
|                         |                              | Вселенной? Итак, мы знаем, что они питаются; мы знаем, где   |                              |
|                         |                              | они живут; мы знаем, как они влияют на окружающую среду. Но  |                              |
|                         |                              | есть ещё много, много открытых вопросов, и некоторые группы  |                              |
|                         |                              | учёных активно обсуждают следующий вопрос: когда галактики   |                              |
|                         |                              | сливаются, могут ли сверхмассивные чёрные дыры слиться (или  |                              |
|                         |                              | нет) в пределах нынешней эпохи Вселенной. Если нет, то мы    |                              |
|                         |                              | можем обнаружить большое количество двойных (или более)      |                              |
|                         |                              | сверхмассивных чёрных дыр в центрах галактик, которые        |                              |
|                         |                              | достаточно развились! Две чёрные дыры звёздной массы, когда  |                              |
|                         |                              | они – часть аккреционного диска или когда они движутся в     |                              |
|                         |                              | сверхмассивную чёрную дыру, могут расти в массе, испытывать  |                              |
|                         |                              | трение и эффектно сливаться, а сливаясь выпускать вспышку.   |                              |
|                         |                              | Вполне возможно, что GW190521 озарил пространство такой      |                              |
|                         |                              | вспышкой, когда слились два его прародителя, и что эта       |                              |
|                         |                              | конфигурация привела к такому событию. 16:57 : Чёрные дыры   |                              |
|                         |                              | промежуточной массы должны существоать, но они могут быть не |                              |
|                         |                              | очень распространены. Мы искали их в основном в пределах     |                              |
|                         |                              | шаровых звёздных скоплений: скоплений из нескольких сотен    |                              |
|                         |                              | тысяч звёзд; находки были спорными и немногочисленными, но   |                              |
|                         |                              | мы успешно обнаружили их, как намекает Прия, в случаях,      |                              |
|                         |                              | когда близко к одной из этих чёрных дыр промежуточной массы  |                              |
|                         |                              | проходит звезда и разрывается на части. Когда звезда или     |                              |
|                         |                              | умершая звезда проходит слишком близко к чёрной дыре,        |                              |
|                         |                              | приливные силы концентрированной массы способны полностью    |                              |
|                         |                              | уничтожить звезду, разорвав её на части. Хотя небольшая      |                              |
|                         |                              | часть материи будет поглощена чёрной дырой, большая часть    |                              |
|                         |                              | просто ускорится и будет выброшена обратно в космос. Эти     |                              |
|                         |                              | события приливного разрушения обладают колоссальной          |                              |
|                         |                              | энергией, недолговечным феноменом, но появление              |                              |
|                         |                              | автоматизированных телескопов, таких как Ziki Transient      |                              |
|                         |                              | Facility или Pan-STARRS, за последние несколько лет дало нам |                              |
|                         |                              | взрывной рост обнаружения этих объектов! Это моделирование   |                              |
|                         |                              | показывает два кадра слияния двух сверхмассивных чёрных дыр  |                              |
|                         |                              | в реалистичной, богатой межзвёздным газом среде. Если масса  |                              |
|                         |                              | сливающихся сверхмассивных чёрных дыр достаточно высока,     |                              |
|                         |                              | вполне вероятно, что эти события – самые энергонасыщенные    |                              |
|                         |                              | одиночные события во всей Вселенной. 17:01 : И, конечно,     |                              |
|                         |                              | есть соответствующая этому событию рябь в пространстве-      |                              |
|                         |                              | времени, даже сверхмассивной вариации. Возможно, Прия        |                              |
|                         |                              | намекнула, но не показала, что на данный момент в этой       |                              |
|                         |                              | ситуации кроется загадка: выбросят они или поглотят весь газ |                              |
|                         |                              | в окружающей среде, прежде чем приблизятся достаточно для    |                              |
|                         |                              | того, чтобы гравитационное излучение слило их воедино. Когда |                              |
|                         |                              | гравитационная волна проходит через какое-либо место в       |                              |
|                         |                              | пространстве, в разное время в разных направлениях она       |                              |
|                         |                              | вызывает расширение и сжатие, заставляя длины лазерных плеч  |                              |
|                         |                              | меняться во взаимно перпендикулярных ориентациях. Используя  |                              |
|                         |                              | это физическое изменение, мы разработали успешные детекторы  |                              |
|                         |                              | гравитационных волн, такие как LIGO и Virgo. 17:03 : Вот     |                              |
|                         |                              | анимация, которую очень любит Прия: рябь от слияния          |                              |
|                         |                              | гравитационных волн, которая показывает, как пространство-   |                              |
|                         |                              | время сжимается и разжимается во взаимно перпендикулярных    |                              |
|                         |                              | направлениях, когда гравитационная волна проходит через      |                              |
|                         |                              | него. 17:05 : Отлично! Прия рассказывает о своих             |                              |
|                         |                              | исследованиях, в частности о том, как мы получаем чёрные     |                              |
|                         |                              | дыры, которые достаточно массивны и возникают достаточно     |                              |
|                         |                              | рано, чтобы вырасти в то, что мы знаем сегодня как самые     |                              |
|                         |                              | ранние сверхмассивные чёрные дыры в молодой Вселенной.  Вот  |                              |
|                         |                              | некоторые самые ранние, если вам любопытно. Новый рекордсмен |                              |
|                         |                              | – самая ранняя чёрная дыра. Обратите внимание, что эта дыра, |                              |
|                         |                              | J0313-1806, достигла массы 1,6 миллиарда солнечных масс      |                              |
|                         |                              | всего через 670 миллионов лет после Большого Взрыва. 17:08 : |                              |
|                         |                              | Прия сейчас показывает анимацию ситуации, когда во Вселенной |                              |
|                         |                              | нами ожидается появление черных дыр определенной массы.      |                              |
|                         |                              | Обратите внимание, что эти прогнозы не совпадают с тем, что  |                              |
|                         |                              | мы видим; видимая столь рано дыра слишком массивна! 5:11 PM  |                              |
|                         |                              | : Хорошая лекция! Так держать, Прия копала глубоко. Мне      |                              |
|                         |                              | понравилась доступность, понравилась работа над тем, чтобы   |                              |
|                         |                              | ввести в курс дела и очертить границы современных знаний.    |                              |
|                         |                              | Единственное, чего я хочу, – чтобы ей хватило времени на     |                              |
|                         |                              | лекции о том, как мы собираемся решать проблемы на границах  |                              |
|                         |                              | знаний, не говоря уже о "Космическом телескопе Джеймса       |                              |
|                         |                              | Вебба". Да, ещё я люблю космический телескоп Джеймса Уэбба.  |                              |
|                         |                              | На Хэллоуин – 2019 астрофизик Итан Сигел оделся как          |                              |
|                         |                              | космический телескоп Джеймса Уэбба. 17:13 : Мне нравится,    |                              |
|                         |                              | что Прийя открыта к тёмной материи и относится к ней         |                              |
|                         |                              | адекватно: вот что мы думаем об этом, а вот и пределы, то,   |                              |
|                         |                              | насколько мы всё проверили, а также задаётся вопросом,       |                              |
|                         |                              | насколько надёжны и успешны альтернативы. Мы задаёмся        |                              |
|                         |                              | вопросами и подвергаем и подвергаем их соответствующей       |                              |
|                         |                              | тщательной проверке. 17:15 : Кто это сказал?! Кто сказал:    |                              |
|                         |                              | "Мы узнаем, что такое тёмная материя в ближайшие ~10 лет",   |                              |
|                         |                              | не добавляя необходимое "если повезёт"? Прия рассказывает о  |                              |
|                         |                              | WIMP и аксионах, они вошли в моду, со всеми возможными и     |                              |
|                         |                              | самыми разными воплощениями тёмной материи, количество       |                              |
|                         |                              | которых близко к бесконечному. Мы ищем, где это только       |                              |
|                         |                              | возможно, и это ценное, разумное усилие. Но если не нашли    |                              |
|                         |                              | "ничего из вышеперечисленного", то это не обязательно        |                              |
|                         |                              | вызовет переосмысление природы частиц тёмной материи. Мы     |                              |
|                         |                              | сомневаемся и пытаемся проверять, но не знаем, что делает    |                              |
|                         |                              | природа. Мы можем измерить только то, что можем измерить, и  |                              |
|                         |                              | сделать предварительные выводы на основе того, что видим (и  |                              |
|                         |                              | не видим). 17:18 : Забавный вопрос: что мы будем думать о    |                              |
|                         |                              | модной сегодня "причудливой" идее через 100 лет. Прия        |                              |
|                         |                              | говорит "multiverse" [акцент на кавычки –                    |                              |
|                         |                              | “мультивселенная”], но она права: эмпирического обоснования  |                              |
|                         |                              | нет (возможно). Она также говорит, что наш разум накладывает |                              |
|                         |                              | ограничения, но, возможно, этих ограничений нет. Точно так   |                              |
|                         |                              | же, как Коперник не мог себе представить космический         |                              |
|                         |                              | корабль, покидающий Солнечную систему, кто знает, чего не    |                              |
|                         |                              | можем себе представить мы! 17:23 : Последний вопрос: самая   |                              |
|                         |                              | важная черта, чтобы карьера физика была успешной? Прия       |                              |
|                         |                              | сказала о двух таких чертах: Устойчивость. Умение            |                              |
|                         |                              | воображать, мечтать. Эти отличные советы актуальны не только |                              |
|                         |                              | для физика, но и для программиста тоже, ведь эти две вещи    |                              |
|                         |                              | позволяют нам сопротивляться выгоранию, получать             |                              |
|                         |                              | удовольствие от того, что мы делаем и упрямо осваивать новое |                              |
|                         |                              | несмотря ни на что. Узнайте , как прокачаться в других       |                              |
|                         |                              | специальностях или освоить их с нуля: Профессия Data         |                              |
|                         |                              | Scientist Профессия Data Analyst Курс по Data Engineering    |                              |
|                         |                              | Другие профессии и курсы ПРОФЕССИИ Профессия Fullstack-      |                              |
|                         |                              | разработчик на Python Профессия Java-разработчик Профессия   |                              |
|                         |                              | QA-инженер на JAVA Профессия Frontend-разработчик Профессия  |                              |
|                         |                              | Этичный хакер Профессия C++ разработчик Профессия            |                              |
|                         |                              | Разработчик игр на Unity Профессия Веб-разработчик Профессия |                              |
|                         |                              | iOS-разработчик с нуля Профессия Android-разработчик с нуля  |                              |
|                         |                              | КУРСЫ Курс по Machine Learning Курс "Machine Learning и Deep |                              |
|                         |                              | Learning" Курс "Математика для Data Science" Курс            |                              |
|                         |                              | "Математика и Machine Learning для Data Science"  Курс       |                              |
|                         |                              | "Python для веб-разработки" Курс "Алгоритмы и структуры      |                              |
|                         |                              | данных" Курс по аналитике данных Курс по DevOps              |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |   Как работает VR? Разбор    | У VR есть такая особенность. Все, кто попробовал нормальный  |              VR              |
| pany/droider/blog/53874 |                              | VR обязательно хотят подсадить на эту тему всех своих друзей |             HTC              |
|            8/           |                              | и близких. Всё дело в том, что VR — это потрясающие          |           HTC Vive           |
|                         |                              | ощущения, о которых невозможно рассказать. Это обязательно   |    виртуальная реальность    |
|                         |                              | надо пробовать самому.    Но VR — это не только крутой опыт. |              ВР              |
|                         |                              | Это еще и крутые технологи, которые какие-то 10 лет назад    |           VR-игры            |
|                         |                              | назвали бы фантастикой, а теперь они доступны нам в домашних |          технологии          |
|                         |                              | условиях.      Сегодня мы расскажем вам про все крутые       |    технологии виртуальной    |
|                         |                              | технологические фишки в современных VR-девайсах. А поможет   |          реальности          |
|                         |                              | мне в этом первая в мире модульная VR система — HTC Vive     | шлемы виртуальной реальности |
|                         |                              | Cosmos Elite.     Трекинг      Как понимаете, подменить нашу |           VR-шлемы           |
|                         |                              | реальность на виртуальную — задача непростая. Поэтому в мире |           шлемы VR           |
|                         |                              | VR применяются очень хитрые технологии. И первый интересный  |                              |
|                         |                              | набор технологий, который используется в VR шлемах — это     |                              |
|                         |                              | трекинг.    К трекингу в современных VR шлемах есть два      |                              |
|                         |                              | кардинально разных подхода. Первый называется inside-out     |                              |
|                         |                              | tracking или внутренний трекинг. Он работает незамысловато.  |                              |
|                         |                              | На шлеме размещаются несколько камер с широким углом обзора, |                              |
|                         |                              | которые отслеживают ваши контроллеры и положение шлема       |                              |
|                         |                              | относительно предметов окружающей среды. А чтобы контроллеры |                              |
|                         |                              | точно были видны — они подсвечиваются. Плюс такого подхода,  |                              |
|                         |                              | в том что он дешевый и простой в настройке и использовании.  |                              |
|                         |                              | Минус — такой трекинг не самый точный, а также камеры не     |                              |
|                         |                              | могут фиксировать положение рук когда они вне обозрения —    |                              |
|                         |                              | например, за спиной. А руки за спиной в VR-играх — это не    |                              |
|                         |                              | редкость. Например, когда вы машете лазерным мечами like-a-  |                              |
|                         |                              | pro в Beat Saber. Также там часто прячут инвентарь и тяжелое |                              |
|                         |                              | оружие.    Такая система трекинга используется в Oculus Rift |                              |
|                         |                              | S и Quest, а также у младшего HTC Vive Cosmos.        Другая |                              |
|                         |                              | система называется Lighthouse, что переводится на русский    |                              |
|                         |                              | как маяк. Но проще всего систему назвать внешний трекинг. В  |                              |
|                         |                              | ней маяки или базовые станции ставятся друг напротив друга   |                              |
|                         |                              | очерчивая вашу игровую зону и поехали.    Сначала первая     |                              |
|                         |                              | базовая станция мигает инфракрасным светом. Сразу за ним     |                              |
|                         |                              | испускается широкий падающий лазерный луч. Каждое ИК-мигание |                              |
|                         |                              | это начало отсчета. И так 60 раз в секунду.    С момента     |                              |
|                         |                              | получения первого мигания шлем и контроллеры начинают отсчет |                              |
|                         |                              | 1,2,3 и так далее. Затем их датчики улавливают лазерный луч. |                              |
|                         |                              | Но из-за смещения датчиков в пространстве один датчик уловит |                              |
|                         |                              | луч на отсчете 3, другой на 5, третий, например, на 11. И    |                              |
|                         |                              | как раз базируясь на этой задержке в отсчете от датчиков и   |                              |
|                         |                              | рассчитывается положение шлема и контроллеров в              |                              |
|                         |                              | пространстве.        Внешний треккинг куда более точный и    |                              |
|                         |                              | надежный. Но в начале немного времени придется потратить на  |                              |
|                         |                              | установку маяков — я их поставил на штативы, но можно        |                              |
|                         |                              | положить на полку или прикрепить к стене.    Такая система   |                              |
|                         |                              | используется в Oculus Rift, Valve Index, HTC Vive первой     |                              |
|                         |                              | волны, и в текущем HTC Vive Cosmos Elite. Но конкретно с     |                              |
|                         |                              | Vive Cosmos есть нюансы.    В самом начале я вам сказал, что |                              |
|                         |                              | Vive Cosmos — это целая модульная экосистема. Которая        |                              |
|                         |                              | состоит на данный момент состоит из двух предложений:        |                              |
|                         |                              | Обычный Cosmos   Премиальный Cosmos Elite        В обеих     |                              |
|                         |                              | версиях используется один и тот же шлем, но в них            |                              |
|                         |                              | используются разные модули. Так в базовой комплектации в     |                              |
|                         |                              | шлеме установлена передняя панель с внутренним трекингом. На |                              |
|                         |                              | ней целых шесть камер с широким обзором на 310 градусов.     |                              |
|                         |                              | Также в комплекте нет маяков и контроллеры соответственно    |                              |
|                         |                              | там для внутреннего трекинга — светящиеся.        А в Elite  |                              |
|                         |                              | в комплекте идут все модули для внешнего трекинга. Но весь   |                              |
|                         |                              | прикол в том, что меняя модули одну модель можно превратить  |                              |
|                         |                              | в другую.        Например, можно проапгрейдиться с младшей   |                              |
|                         |                              | модели на старшую. А можно пойти дальше и подключить к       |                              |
|                         |                              | старшей модели самые продвинутые контроллеры с трекингом     |                              |
|                         |                              | всех пальцев Knuckles от Valve Index. Представляете, они     |                              |
|                         |                              | прекрасно будут работать, если вы конечно где-то их найдёте. |                              |
|                         |                              | Экраны      Следующая важная технология — это экраны.        |                              |
|                         |                              | Критичным для экрана в VR является время задержки            |                              |
|                         |                              | отображения. OLED-экраны самые быстрые, поэтому с них и      |                              |
|                         |                              | началось освоение. Но с ними возникла другая проблема.       |                              |
|                         |                              | Дело в том, что когда вы используете VR шлем, ваши глаза     |                              |
|                         |                              | находятся очень близко к дисплеям и крайне важно иметь очень |                              |
|                         |                              | высокое разрешение и плотность пикселей. Поэтому OLED-       |                              |
|                         |                              | дисплеи для VR сегодня — не лучший выбор. В OLED диоды       |                              |
|                         |                              | находятся на почтенном расстоянии друг от друга и            |                              |
|                         |                              | используется PenTile-раскладка. Поэтому такие дисплеи        |                              |
|                         |                              | выглядят зернистыми и появляется эффект москитной сетки. В   |                              |
|                         |                              | будущем эти проблемы скорее всего решит microLED.    А пока  |                              |
|                         |                              | лучший выбор для VR — это именно Super-Fast LCD. По сути,    |                              |
|                         |                              | это тот же IPS только быстрый. Именно такой стоит в HTC Vive |                              |
|                         |                              | Cosmos Elite.        Второй важный параметр — это частота    |                              |
|                         |                              | обновления она должна быть минимум 80 Гц, а лучше 90 или     |                              |
|                         |                              | выше. Сейчас самая высокая частота у шлема Valve Index — 144 |                              |
|                         |                              | Гц, но на практике вряд ли вы найдет компьютер, который      |                              |
|                         |                              | может выдавать такой FPS, ведь в VR нужно рендерить две      |                              |
|                         |                              | разные картинки одновременно, для левого и правого глаза.    |                              |
|                         |                              | Что мы имеем в Vive Cosmos Elite? Те самые Super-Fast LCD    |                              |
|                         |                              | дисплеи, частота обновления 90 Гц и самое высокое на         |                              |
|                         |                              | потребительском рынке разрешение 1440 × 1700 пикселей для    |                              |
|                         |                              | каждого дисплея, в итоге получается 2880 x 1700 пикселей.    |                              |
|                         |                              | В Valve Index и HTC Vive Pro разрешение немногим меньше —    |                              |
|                         |                              | 1440 × 1600, то есть разница всего 100 пикселей в высоту. И  |                              |
|                         |                              | кажется что это немного, но в VR-шлеме эта разница ощущается |                              |
|                         |                              | и в том числе играет в пользу угла обзора.    Это третий     |                              |
|                         |                              | важный параметр в VR. Тут он 110 градусов благодаря линзам,  |                              |
|                         |                              | которые наложены на экран для придания изображению           |                              |
|                         |                              | сферической картины, привычной нашему глазу.    Чем больше   |                              |
|                         |                              | угол обзора, тем меньше выражается эффект «экранного окна» и |                              |
|                         |                              | мы больше приближаемся к полному охвату человеческого        |                              |
|                         |                              | зрения. Более того в HTC Vive Pro был OLED-экран, поэтому    |                              |
|                         |                              | переход на IPS (Super Fast LCD) и увеличение разрешения тут  |                              |
|                         |                              | очень заметны.    Еще одна крутая технология, о которой      |                              |
|                         |                              | хотелось бы рассказать, сейчас есть в профессиональных       |                              |
|                         |                              | решениях от HTC. Это система трекинга глаз — Vive Pro Eye и  |                              |
|                         |                              | она позволяет реализовать технологию фовеального рендеринга. |                              |
|                         |                              | Дело в том, что наш глаз видит четко только ту область куда  |                              |
|                         |                              | он сфокусирован, все что вокруг он воспринимает чуть         |                              |
|                         |                              | размыто. Зная, куда направлен взгляд в тот или иной момент,  |                              |
|                         |                              | можно отображать эту область с максимально возможным         |                              |
|                         |                              | качеством. А остальную область на экране можно не рендерить  |                              |
|                         |                              | в полном качестве. В итоге такой лайфхак дает серьезной      |                              |
|                         |                              | серьезное улучшение картинки при одинаковом железе. Это      |                              |
|                         |                              | очень крутая технология. Сейчас даже научились отслеживать   |                              |
|                         |                              | саккады.     Беспроводные технологии  Окей идём, дальше. Как |                              |
|                         |                              | вы считаете, что больше всего мешает погружению в            |                              |
|                         |                              | виртуальную реальность. Думаете невысокое разрешение? Нет,   |                              |
|                         |                              | это не так. Самое большое ограничение сегодня — провода!     |                              |
|                         |                              | И вот у HTC есть огромный козырь в рукаве. Существует        |                              |
|                         |                              | беспроводной набор — VIVE Cosmos Wireless Adapter Attachment |                              |
|                         |                              | Kit. Эта штука работает на особенном стандарте Wi-Fi —       |                              |
|                         |                              | 802.11ad. Это не Wi-Fi 6 и не Wi-Fi 5. Стандарт называется   |                              |
|                         |                              | WiGig и работает он на частоте 60 ГГц, поэтому скорость      |                              |
|                         |                              | фантастическая и нет задержек.        Правда батарейки       |                              |
|                         |                              | хватает всего на 2 -2 ,5 часа игры, и в компьютер нужно      |                              |
|                         |                              | вставить отдельную плату PCI express. Но в любом случае на   |                              |
|                         |                              | сегодня это самое передовое решение, чтобы играть без        |                              |
|                         |                              | проводов. И хоть конструкция кажется немного громоздкой, это |                              |
|                         |                              | дает совершенно новый опыт -полноценный VR без проводов.     |                              |
|                         |                              | Игры      Но самая главная VR-технология — это игры! Поэтому |                              |
|                         |                              | подрубаем всё и играем!    Один из Мифов VR, что не во что   |                              |
|                         |                              | играть, а это вообще не так. У HTC есть свой сервис подписки |                              |
|                         |                              | Viveport. Cейчас там 1168 тайтлов, совместимых с Cosmos      |                              |
|                         |                              | Elite. При этом 2 месяца подписки вам сразу дают в подарок.  |                              |
|                         |                              | Но если сразу с головой пустить в VR, то это безусловно Half |                              |
|                         |                              | Life Alyx!    Поверьте мне, только ради этого одного стоит   |                              |
|                         |                              | попробовать VR. Когда я впервые включил Alyx, я минут сорок  |                              |
|                         |                              | стоял в первой локации на балконе кидал вниз банки           |                              |
|                         |                              | разглядывал все вокруг и просто восторгался.    Многих       |                              |
|                         |                              | волнует вопрос укачивания в шлемах виртуальной реальности.   |                              |
|                         |                              | Проблема может возникать от нескольких параметров — низкая   |                              |
|                         |                              | точность трекинга или например высокая задержка — тут с этим |                              |
|                         |                              | проблем нет. В играх, где вы стоите на месте, например, в    |                              |
|                         |                              | том же Beat Saber, я сразу чувствовал себя комфортно!    Но  |                              |
|                         |                              | при этом, если вы хотите чувствовать себя как рыба в воде в  |                              |
|                         |                              | любом VR мире, вестибулярку придется подучить. Это больше    |                              |
|                         |                              | касается моментов, когда ваш персонаж в игре перемещается, а |                              |
|                         |                              | вы стоите или сидите на месте. Именно от этого и возникает   |                              |
|                         |                              | конфликт: мозг не понимает, как такое может быть. Поэтому    |                              |
|                         |                              | для плавного погружения лучше выбирать режим перемещения     |                              |
|                         |                              | «телепорт», а потом плавно пробовать полное перемещение, мне |                              |
|                         |                              | хватило недели, играя час в день, чтобы весь дискомфорт      |                              |
|                         |                              | прошел. Потом остается только кайфовать — и это того стоит!  |                              |
|                         |                              | Half Life Alyx отлично подходит для такого обучения — но это |                              |
|                         |                              | всего один проект, который при этом безусловно лучший. Я     |                              |
|                         |                              | уверен, что будут появляться проекты еще круче, они уже в    |                              |
|                         |                              | разработке.    Другой отличный пример Walking Dead: Sins and |                              |
|                         |                              | Sinners. Но этот проект я не рекомендую людям со слабыми     |                              |
|                         |                              | нервами. Ещё есть вирусный Beat Saber, в котором я провел    |                              |
|                         |                              | немало часов. В общем и целом, игр хватит не на один месяц   |                              |
|                         |                              | игры.    Кстати, чего не хватает во многих шлемах, это связи |                              |
|                         |                              | с внешним миром. В HTC Vive Cosmos можно «открыть забрало» — |                              |
|                         |                              | откинуть экран и посмотреть, что происходит вокруг.          |                              |
|                         |                              | Будущее VR  Но давайте заглянем, куда же будет двигаться в   |                              |
|                         |                              | VR в ближайшие годы. Естественно, мы хотим полного           |                              |
|                         |                              | погружения в виртуальные миры как в фильме Get Ready Player  |                              |
|                         |                              | One или в русском переводе «Первому игроку приготовиться».   |                              |
|                         |                              | Поэтому уже сейчас начали появляться VR-костюмы с отдачей,   |                              |
|                         |                              | либо их можно собрать самому.        Экосистема Vive Cosmos  |                              |
|                         |                              | подразумевает подключение дополнительных модулей, которые    |                              |
|                         |                              | можно закрепить на ногах или других частях тела. Это даст    |                              |
|                         |                              | вашему аватару еще больше живости. Уже сейчас некоторые      |                              |
|                         |                              | энтузиасты используют такие модули для VR-чата и в других    |                              |
|                         |                              | социальных VR-платформах. История с Covid только             |                              |
|                         |                              | подталкивает это развитие вперед.    Лично я уже посетил     |                              |
|                         |                              | несколько VR-ивентов, презентаций, концертов, даже ходил в   |                              |
|                         |                              | кино с друзьями. Это целый мир, который появляется и быстро  |                              |
|                         |                              | развивается при нас. Мир с безграничными возможностями не    |                              |
|                         |                              | только в играх.    Кроме общения вы можете творить в VR,     |                              |
|                         |                              | создавая 3D-модели, как скульпторы, архитекторы, аниматоры.  |                              |
|                         |                              | Говоря о кино, Джон Фавро при съемках Маугли активно         |                              |
|                         |                              | использовал VR для погружения актеров в мир будущего фильма. |                              |
|                         |                              | И с каждым днем появляется все больше профессионального      |                              |
|                         |                              | софта для разных областей. Уверен, что скоро появятся        |                              |
|                         |                              | профессии, которые будут существовать только в VR.           |                              |
|                         |                              | Понятно что сейчас VR — это дорогое удовольствие. Шлем HTC   |                              |
|                         |                              | Vive Cosmos Elite в России стоит 100 тысяч рублей. При этом  |                              |
|                         |                              | можно докупить беспроводной адаптер. Не стоит забывать, что  |                              |
|                         |                              | для игр в VR понадобится и еще и мощный ПК.    Порог входа — |                              |
|                         |                              | высокий, но за билет в будущее иногда стоит заплатить,       |                              |
|                         |                              | особенно когда хочется попасть туда раньше остальных.        |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos | Как мы с братом алмаз делали | Наверное, у кого-то из читателей мелькали мысли "а можно ли  |         diy-проекты          |
|        t/547198/        |                              | сварить настоящий алмаз на кухне и/или на коленке". Можно и  |            алмазы            |
|                         |                              | я решился рассказать как мы с братом это еще в детстве       |          самоделки           |
|                         |                              | делали. Предыстория и благодарности      Мне повезло — мой   |         физика детям         |
|                         |                              | папа инженер, а инженер должен знать все. Папа работал на    |                              |
|                         |                              | предприятии связи (спутниковая и наземная релейка) и в       |                              |
|                         |                              | советские времена родителям разрешали брать детей на работу. |                              |
|                         |                              | Наверное, хотели династии на предприятиях выращивать, а      |                              |
|                         |                              | может еще почему, но это было классно, жаль что сейчас       |                              |
|                         |                              | запрещают. Я и мой двоюродный брат бывали там часто.     К   |                              |
|                         |                              | большей части  рабочего оборудования нас естественно не      |                              |
|                         |                              | подпускали и у самих мозгов хватало не трогать, но среди     |                              |
|                         |                              | рабочего оборудования можно было пользоваться компьютерами   |                              |
|                         |                              | (не подключенными к основному оборудованию связи и           |                              |
|                         |                              | управляющим механизмам) и измерительными приборами, а вот    |                              |
|                         |                              | сломанное было в полном распоряжении. Тогда не было модного  |                              |
|                         |                              | слова утилизация, но и не было столько мусора, т. к. все     |                              |
|                         |                              | разбиралось и пускалось в оборот, помню даже корки хлеба в   |                              |
|                         |                              | хлебном магазине собирали, а уж детали аппаратуры тем более. |                              |
|                         |                              | Это были не только платы и целые стойки, бывало силовое      |                              |
|                         |                              | оборудование и даже кое-какие механизмы. Нам давали          |                              |
|                         |                              | разбирать такие классные штуки как ВКУ (видео-контрольное    |                              |
|                         |                              | устройство что-то типа телевизора) и другую аппаратуру, в    |                              |
|                         |                              | т.ч. высокочастотные приемо-передатчики, компьютеры и        |                              |
|                         |                              | управляющие механизмы. Мы разбирали до последнего винтика и  |                              |
|                         |                              | последней детальки, проверяли детали на исправность,         |                              |
|                         |                              | сортировали и раскладывали по разным ячейкам в специальных   |                              |
|                         |                              | ящичках. Даже металлические элементы самих стоек и провода   |                              |
|                         |                              | использовались вторично (кое-какое оборудование создавалось  |                              |
|                         |                              | на месте при необходимости). Мы были счастливы. Среди        |                              |
|                         |                              | папиных коллег были интересные люди: лучшие инженеры и       |                              |
|                         |                              | программисты (в те времена в связь абы-кого не брали, т. к.  |                              |
|                         |                              | простой в пару минут уже грозил проблемами всему             |                              |
|                         |                              | коллективу), там были классные технологи, лучшие механики, и |                              |
|                         |                              | кого там только еще не было, даже целый астроном — дядя      |                              |
|                         |                              | Боря, который про звезды мог все рассказать. А как иначе,    |                              |
|                         |                              | ведь полностью автономный объект должны содержать разные (и  |                              |
|                         |                              | самые лучше) специалисты из разных областей науки и техники. |                              |
|                         |                              | И они там были. Был там и шикарный ассортимент технической   |                              |
|                         |                              | литературы: по аналоговой и цифровой электронике, по         |                              |
|                         |                              | программированию, по микропроцессорной технике, механике,    |                              |
|                         |                              | химии, физики. В общем рай для мальчиков с начала            |                              |
|                         |                              | разговорной речи до 12 лет. В общем к этому возрасту на      |                              |
|                         |                              | ассемблере мы говорили лучше чем на русском языке. Так же у  |                              |
|                         |                              | нас был почти обязательный набор многих советских            |                              |
|                         |                              | школьников: «Юный техник», «ЮТ-для умелых рук», «Левша», «А  |                              |
|                         |                              | почему?», «Радио», «В помощь радиолюбителю», «Моделист-      |                              |
|                         |                              | конструктор» и т. д. и т. п. Все что читалось в              |                              |
|                         |                              | вышеуказанной литературе или было рассказано папиными        |                              |
|                         |                              | друзьями почти обязательно пробовалось на практике. Кроме    |                              |
|                         |                              | разных электронных схемок и механизмов мы варили стекло,     |                              |
|                         |                              | делали кирпичи, плавили металлические сплавы, увлекались     |                              |
|                         |                              | ракетомоделированием и другими шикарными интересностями, в   |                              |
|                         |                              | общем всем, чем должен заниматься стандартный советский      |                              |
|                         |                              | школьник. Всем этим людям и моему папе мы благодарны за      |                              |
|                         |                              | знания и умения, благодаря им мы занимаем текущее социальное |                              |
|                         |                              | положение и неплохо зарабатываем. Большое спасибо им (в т.ч. |                              |
|                         |                              | начальникам, которые разрешали детей приводить на работу) за |                              |
|                         |                              | наше счастливое детство. Случайность  Шло теплое лето 1991   |                              |
|                         |                              | года. Мне было 10 лет, а моему двоюродному брату Женьке 11 и |                              |
|                         |                              | мы проводили опыты с электролизом. Покрывали все подряд,     |                              |
|                         |                              | тонким слоем всего подряд. От монеток до шишек с елок. Мы    |                              |
|                         |                              | меняли материалы, пробовали разные варианты, анализировали   |                              |
|                         |                              | получившиеся свойства, записывали в тетрадочку. Все шло по   |                              |
|                         |                              | плану, но однажды углеродный электрод закоротил на второй    |                              |
|                         |                              | контакт и немного нагрелся. А напряжение было всего-то 3     |                              |
|                         |                              | Вольта (естественно постоянка, это же электролиз). Сразу     |                              |
|                         |                              | вспомнили про лампочки и увеличили до 5В. Пошел дым (от      |                              |
|                         |                              | электрода, БП был классный, он выдерживал и не такие         |                              |
|                         |                              | издевательства) и появилась жидкость на электроде. Потом до  |                              |
|                         |                              | 27В и электрод стал красным. Потом до 30В и электрод стал    |                              |
|                         |                              | белым. После отключения он стал опять черным, но очень       |                              |
|                         |                              | рыхлым. И тут мы вспомнили, что алмазы делаются при высоком  |                              |
|                         |                              | давлении и высокой температуре. Было принято решение         |                              |
|                         |                              | попробовать сделать свой алмаз, как позже очень очень точно  |                              |
|                         |                              | сказал один известный электронно-механический философ и      |                              |
|                         |                              | мизантроп Бэндер в Футураме: «с блэкджеком и ...».  План     |                              |
|                         |                              | действий и первый эксперимент      Кое-какие эксперименты    |                              |
|                         |                              | сейчас вспоминаем и холодным потом обливаемся, мозгов-то в   |                              |
|                         |                              | том возрасте маловато такими делами заниматься. Видно кто-то |                              |
|                         |                              | сверху за нами приглядывал. С электричеством мы решили       |                              |
|                         |                              | быстро и просто, т. к.  нас был доступ к объекту рядом с     |                              |
|                         |                              | местом проживания и туда приходит три фазы. Мы уже знали,    |                              |
|                         |                              | что между нулем и фазой 220В, а между двумя фазами 380В.     |                              |
|                         |                              | Было помещение для этого дела и даже разъединительный        |                              |
|                         |                              | трансформатор. А нам нужно не надолго — один имульс в        |                              |
|                         |                              | милисекунды. Сейчас бы на такое не решились с текущим        |                              |
|                         |                              | багажом знаний (надо внимательней следить за опытами         |                              |
|                         |                              | детей!), но советский школьник должен уметь остановить       |                              |
|                         |                              | вражеский танк и лучше не один. Мы решили, что самое тяжелое |                              |
|                         |                              | уже решили — значит поперли дальше.     Создать полноценный  |                              |
|                         |                              | пресс мы не могли, т. к. не было у нас материалов, которые   |                              |
|                         |                              | обладали одновременно несколькими свойствами: доступность,   |                              |
|                         |                              | термостойкость, негорючесть и не должны проводить            |                              |
|                         |                              | электричество. Все доступное либо сгорит, либо расплавится,  |                              |
|                         |                              | либо проводит электричество. Либо вообще все сразу. В нашем  |                              |
|                         |                              | «производстве» бывало одновременно по несколько              |                              |
|                         |                              | экспериментов, т. е. некоторые эксперименты мы делали, а     |                              |
|                         |                              | другие уже в плане и разработке. Учитывая, то что мы сразу   |                              |
|                         |                              | не могли заняться алмазом, мы делали дальше другие           |                              |
|                         |                              | эксперименты. И вот момент мы занимались чем-то из гипса     |                              |
|                         |                              | (уже не помню), накопали классной глины и делали поделки     |                              |
|                         |                              | (кирпичики, посуду и т. п.), плавили корунд из добытого      |                              |
|                         |                              | оксида алюминия . Мы тогда хотели большой рубин для лазера   |                              |
|                         |                              | сделать, но не смогли найти жалкие 0,5% оксида хрома от      |                              |
|                         |                              | объема оксида алюминия, а то маленького рубина из старого    |                              |
|                         |                              | будильника не хватало для этой цели, поэтому решили сделать  |                              |
|                         |                              | хотя бы корунд. В ходе этих экспериментов зародилась идея    |                              |
|                         |                              | просто закрепить углеродную болванку на двух электродах и    |                              |
|                         |                              | закатать это все в гипс или глину.      Расчет был такой,    |                              |
|                         |                              | что как ни старайся, а кислород все-равно туда попадет. У    |                              |
|                         |                              | нас не будет длительного нагрева электричества, будет        |                              |
|                         |                              | импульс. Он успеет нагреть до нужной температуры, но все-    |                              |
|                         |                              | равно часть углерода превратится в газ и создаст давление.   |                              |
|                         |                              | Сказано — сделано. Соединили → закатали → высушили несколько |                              |
|                         |                              | дней →засунули защитный кожух →встали за угол → подсоединили |                              |
|                         |                              | →взорвалось. Влупило не по-детски. Только огрызки проводов   |                              |
|                         |                              | остались. А от нашего реактора даже пыли не осталось ни на   |                              |
|                         |                              | стенах, ни в воздухе. В общем убираться не пришлось, просто  |                              |
|                         |                              | вышли из помещения.  Исправляем ошибки и дубль два      Как  |                              |
|                         |                              | показал первый эксперимент — часть расчетов подтвердились и  |                              |
|                         |                              | несмотря на короткий импульс мгновенно создается не хилое    |                              |
|                         |                              | давление. Более крепких материалов у нас не было. Были       |                              |
|                         |                              | варианты укрепить то что есть, тем что есть.        Сделали  |                              |
|                         |                              | слой потолще. После сушки сделали обмотку (раньше так пушки  |                              |
|                         |                              | укрепляли), сунули в кусок трубы (с зазором и компаундом,    |                              |
|                         |                              | пулестойкие стекла специально делают из слоев различной      |                              |
|                         |                              | плотности и хрупкости), опрессовали и опять обмотали. Встали |                              |
|                         |                              | за угол и подсоединили. Пыф - яркая вспышка. В этот раз      |                              |
|                         |                              | реактор целый. Разобрали — внутри труха.    Неожиданные      |                              |
|                         |                              | результаты и сложности. Дубль три      В этот раз думали     |                              |
|                         |                              | долго. Были предположения, что давление хоть и большое, но   |                              |
|                         |                              | не достаточное или корпус пропускает где-то, а потом решили  |                              |
|                         |                              | что это может быть из-за того, что у нас первоначально (при  |                              |
|                         |                              | электролизе) была постоянка, а здесь переменка.              |                              |
|                         |                              | Сказано — сделано. Все пересобрали реактор и поставили диод  |                              |
|                         |                              | в цепь. Встали за угол и подсоединили. Пыф - яркая вспышка.  |                              |
|                         |                              | Реактор целый. Отлетели провода и испарился диод. Разобрали  |                              |
|                         |                              | реактор — кусочек углерода был почти целым.  Мы на верном    |                              |
|                         |                              | пути. Дубль четыре и испытание полученного образца  Думали   |                              |
|                         |                              | не долго, тут тонкое место очевидно.        Пересобрали      |                              |
|                         |                              | реактор, но вместо диода собрали мощный диодный мост. Встали |                              |
|                         |                              | за угол и подсоединили. Звук испаряющегося металла           |                              |
|                         |                              | уникальный, он незабываем, неповторим и не воспроизводим. К  |                              |
|                         |                              | нему наверное долго привыкать надо, зато какие красивые      |                              |
|                         |                              | следы на потолке остаются. После вспышки у нас остался       |                              |
|                         |                              | только реактор, диодный мост (в этот раз целы) и огрызки     |                              |
|                         |                              | кабеля. Разобрали. Половина углерода сгорела, а в самом      |                              |
|                         |                              | центре маленький блестящий черный шарик размером почти с два |                              |
|                         |                              | шарика от авторучки. Электричество он не проводил, супер-    |                              |
|                         |                              | пупер-мега-гага-терра микроскопа у нас не было (был только   |                              |
|                         |                              | простенький), хроматографа тоже, поэтому далее были          |                              |
|                         |                              | эксперименты с доступными способами: плавили кислотами,      |                              |
|                         |                              | давили тисками. Ничего его не взяло, все выдержал шарик.     |                              |
|                         |                              | Как-то проверить еще не было возможности. Решили пойти       |                              |
|                         |                              | вабанк и сделать резкий большой удар (сил разогнать кувалду  |                              |
|                         |                              | тогда уже хватало благодаря нашему тренеру по карате).       |                              |
|                         |                              | Положили образец на наковальню, поставили сверху болт и      |                              |
|                         |                              | ударили по шляпке болта кувалдой. Болт сдвинулся, вектор     |                              |
|                         |                              | удара пошел под углом и в результате мы наш образец (шарик)  |                              |
|                         |                              | никогда больше не видели. Эксперимент повторять не стали, т. |                              |
|                         |                              | к. слишком долго. Наступил август 1991 и мы решили заняться  |                              |
|                         |                              | чем-то более полезным, но это совсем другая история для      |                              |
|                         |                              | отдельной статьи.                                            |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Как сфера Дайсона поможет   | Эта космическая мегаструктура может стать ключом к           |         skillfactory         |
| pany/skillfactory/blog/ |  нам достигнуть бессмертия   | воскрешению и обретению бессмертия Российские учёные         |   искусственный интеллект    |
|         547110/         |                              | предложили несколько возможных путей технологического        |            физика            |
|                         |                              | воскрешения, в том числе метод, получивший название          |           будущее            |
|                         |                              | "цифровое бессмертие: воскрешение по записям". Этот метод    |            данные            |
|                         |                              | базируется на использовании мощного искусственного           |           научпоп            |
|                         |                              | интеллекта, получающего энергию, необходимую для выполнения  |     цифровое бессмертие      |
|                         |                              | вычислительных операций, от Солнца через особую              |                              |
|                         |                              | мегаструктуру – сферу Дайсона. У человечества пока нет       |                              |
|                         |                              | возможностей для создания сферы Дайсона, однако, по словам   |                              |
|                         |                              | учёных, настанет день, когда такую задачу можно будет        |                              |
|                         |                              | поручить нанороботам.  Вас привлекают дикие научные проекты, |                              |
|                         |                              | граничащие с фантастикой? Нас – тоже! Давайте разберёмся во  |                              |
|                         |                              | всём этом более подробно. Давайте немного пофантазируем.     |                              |
|                         |                              | Наступило далёкое-предалёкое будущее. Вас уже давным-давно   |                              |
|                         |                              | нет на свете, вы умерли много лет назад, но у вас есть шанс  |                              |
|                         |                              | вернуться к жизни! И такой же шанс появится не только у вас, |                              |
|                         |                              | но и у любого человека, оставившего след в истории           |                              |
|                         |                              | человеческой цивилизации. В этом сценарии, как ни странно,   |                              |
|                         |                              | наименее сложным этапом станет сам процесс воскрешения из    |                              |
|                         |                              | мёртвых. Самой трудной, если вообще выполнимой, частью плана |                              |
|                         |                              | станет задача возродиться в новой жизни самим собой. Вот как |                              |
|                         |                              | всё планируется осуществить: предлагается создать особую     |                              |
|                         |                              | мегаструктуру, уже получившую своё название:  сфера Дайсона  |                              |
|                         |                              | . Управление такой структурой будет поручено мощнейшему      |                              |
|                         |                              | искусственному интеллекту (ИИ). Задача такой структуры –     |                              |
|                         |                              | собирать абсолютно все личные данные о людях, чтобы          |                              |
|                         |                              | впоследствии можно было восстановить их точную цифровую      |                              |
|                         |                              | копию. Для функционирования такой мегаструктуры необходимо   |                              |
|                         |                              | колоссальное количество энергии. Если ваши личные данные     |                              |
|                         |                              | будут собраны правильно, то после смерти вы снова сможете    |                              |
|                         |                              | прожить всю свою жизнь в смоделированной реальности, а когда |                              |
|                         |                              | снова настанет время умирать, вас перенесут в                |                              |
|                         |                              | смоделированный загробный мир – всё это очень похоже на      |                              |
|                         |                              | события, происходившие в сериале " Чёрное Зеркало " в городе |                              |
|                         |                              | Сан-Джуниперо , в котором вы вечно пребываете с друзьями,    |                              |
|                         |                              | членами семьи и в окружении знаменитостей. Не спорим, всё    |                              |
|                         |                              | это может показаться бредом сумасшедшего. Но в один          |                              |
|                         |                              | прекрасный день описанный сценарий всё же может стать        |                              |
|                         |                              | реальностью. Мы только что описали План С "Цифровое          |                              |
|                         |                              | бессмертие", разработанный в рамках проекта достижения       |                              |
|                         |                              | личного бессмертия, над которым с 2014 года работает         |                              |
|                         |                              | российский трансгуманист Алексей Турчин, поставивший перед   |                              |
|                         |                              | собой задачу увеличения продолжительности человеческой       |                              |
|                         |                              | жизни. Турчин изложил детали такого плана в статье           |                              |
|                         |                              | "Классификация подходов к технологическому воскрешению" ,    |                              |
|                         |                              | опубликованной им недавно в соавторстве с коллегой Максимом  |                              |
|                         |                              | Черняковым, также трансгуманистом. (Планы A, B и D           |                              |
|                         |                              | соответственно носят названия "Борьба со старением",         |                              |
|                         |                              | "Крионика" и "Квантовое бессмертие". В статье раскрывается   |                              |
|                         |                              | смысл каждого из этих планов и описываются соответствующие   |                              |
|                         |                              | перспективы достижения бессмертия.) Когда Турчину было 11    |                              |
|                         |                              | лет, умерла его одноклассница. И тогда он, ещё совсем юный,  |                              |
|                         |                              | стал задумываться о вечной жизни: достижима ли она? как      |                              |
|                         |                              | этого добиться? "Я стал размышлять, что можно предпринять    |                              |
|                         |                              | для достижения этой цели, и додумался до теории, которую     |                              |
|                         |                              | можно смело вставлять в научно-фантастические рассказы”, –   |                              |
|                         |                              | рассказал Турчин в интервью  Pop Mech .  В 2007 году он стал |                              |
|                         |                              | членом  Российского трансгуманистического движения  –        |                              |
|                         |                              | сообщества, целью которого является обучение российских      |                              |
|                         |                              | жителей технологиям, способным помочь в преодолении          |                              |
|                         |                              | существующих физических и умственных ограничений. В 2012     |                              |
|                         |                              | году Турчин стал соучредителем первой в России               |                              |
|                         |                              | трансгуманистической партии и в течение последних нескольких |                              |
|                         |                              | лет создавал и совершенствовал План достижения бессмертия,   |                              |
|                         |                              | фиксируя все сколько-нибудь примечательные моменты своей     |                              |
|                         |                              | жизни.  Турчин скрупулёзно фиксирует в дневниках все свои    |                              |
|                         |                              | сны, любые разговоры с другими людьми и вообще всё, что с    |                              |
|                         |                              | ним происходит каждый день. Турчин подчёркивает, что такая   |                              |
|                         |                              | фиксация должна быть "сплошной". Почему "сплошной"? Потому   |                              |
|                         |                              | что необходимо фиксировать не только значимые или приятные   |                              |
|                         |                              | жизненные моменты, но и любые неприятные обстоятельства,     |                              |
|                         |                              | когда, например, человек совершал ошибки или необдуманные    |                              |
|                         |                              | поступки, так как мощный искусственный интеллект будет       |                              |
|                         |                              | помещать возвращаемых к жизни людей в точно такие же условия |                              |
|                         |                              | развития, в каких они пребывали в прошлой жизни. Именно      |                              |
|                         |                              | такой подход позволит добиться настоящей "аутентичности", –  |                              |
|                         |                              | говорит он. После того как искусственный интеллект создаст   |                              |
|                         |                              | точную цифровую копию человека, станет возможно всё, даже    |                              |
|                         |                              | полное восстановление биологического организма, утверждает   |                              |
|                         |                              | Турчин. Поиск ДНК возрождаемого человека – ещё одна задача,  |                              |
|                         |                              | которую должен будет решать искусственный интеллект. Если    |                              |
|                         |                              | потребуется, он даже пойдёт на раскапывание вашей могилы!    |                              |
|                         |                              | Ведь, только имея образец ДНК, можно создать клон            |                              |
|                         |                              | физического тела, в котором предполагается разместить        |                              |
|                         |                              | цифровую копию человека. Теперь представим, что такую        |                              |
|                         |                              | операцию по подготовке к цифровому бессмертию нужно          |                              |
|                         |                              | применить не к одному человеку, а к миллиардам и миллиардам  |                              |
|                         |                              | людей, когда-либо живших на Земле, то есть нужно иметь       |                              |
|                         |                              | великое множество копий одной и той же моделирующей          |                              |
|                         |                              | программы, но с разными динамически меняющимися параметрами. |                              |
|                         |                              | Внедрение в моделирующую программу любых новых параметров,   |                              |
|                         |                              | описывающих человеческое развитие, неминуемо приведёт к      |                              |
|                         |                              | экспоненциальному росту количества таких копий. На Земле и   |                              |
|                         |                              | близко нет таких источников энергии, которые были бы         |                              |
|                         |                              | способны обеспечить вычислительную мощность, достаточную для |                              |
|                         |                              | решения такой задачи. Поэтому искать источник энергии мы     |                              |
|                         |                              | будем в другом месте – на Солнце. И, вот, мы приходим к идее |                              |
|                         |                              | создания сферы Дайсона, в центре которой находится Солнце.   |                              |
|                         |                              | Так выглядит Сфера Дайсона. Физик Фримен Дайсон (ныне        |                              |
|                         |                              | покойный) в статье " Поиск искусственных звёздных источников |                              |
|                         |                              | инфракрасного излучения ", опубликованной в 1960 году в      |                              |
|                         |                              | журнале  Science , предложил концепцию особой мегаструктуры. |                              |
|                         |                              | Её смысл заключался в следующем: это гипотетическая тонкая   |                              |
|                         |                              | сферическая оболочка большого радиуса со звездой (в нашем    |                              |
|                         |                              | случае Солнцем) в центре, способная использовать энергию     |                              |
|                         |                              | центральной звезды – невообразимые 400 септильонов джоулей,  |                              |
|                         |                              | ежедневно излучаемых нашей звездой. Это в триллионы раз      |                              |
|                         |                              | больше, чем потребляет всё земное население. Чтобы было      |                              |
|                         |                              | понятнее: сферу Дайсона можно представить как множество      |                              |
|                         |                              | отдельных спутников, расположенных на разных орбитах.        |                              |
|                         |                              | Создание гигантской структуры, в которой различные элементы  |                              |
|                         |                              | были бы связаны между собой на физическом уровне, стало бы   |                              |
|                         |                              | неразумным решением, так как такая структура была бы         |                              |
|                         |                              | гравитационно нестабильной, поясняет Турчин. Сам он          |                              |
|                         |                              | представляет такую мегаструктуру в виде огромного количества |                              |
|                         |                              | солнечных электростанций с коллекторами чёрного цвета (или   |                              |
|                         |                              | чёрного с оттенком оранжевого). Такие электростанции         |                              |
|                         |                              | образуют виртуальную сферу, "поверхность" которой отстоит от |                              |
|                         |                              | Солнца на немыслимые 300 миллионов километров. Это будет     |                              |
|                         |                              | настоящая  межпланетная мегаструктура , создание которой     |                              |
|                         |                              | ознаменует переход человечества на новый этап развития – с   |                              |
|                         |                              | планетарного на межзвёздный. Данный контент импортирован из  |                              |
|                         |                              | YouTube. Тот же контент можно найти в другом формате или     |                              |
|                         |                              | ознакомиться с более подробной информацией на веб-сайте.     |                              |
|                         |                              | Однако есть одна небольшая проблема: такую конструкцию       |                              |
|                         |                              | земляне просто не в состоянии создать. "Создать реальную     |                              |
|                         |                              | сферу вокруг Солнца – практически неразрешимая задача", –    |                              |
|                         |                              | считает  Стюарт Армстронг  (Stuart Armstrong), научный       |                              |
|                         |                              | сотрудник Института будущего человечества при Оксфордском    |                              |
|                         |                              | университете, проанализировавший различные концепции         |                              |
|                         |                              | создания такой мегаструктуры (об этом ранее  была статья в   |                              |
|                         |                              | Pop Mech . По словам Армстронга, предел прочности при        |                              |
|                         |                              | разрыве, который не позволит сфере Дайсона разорвать саму    |                              |
|                         |                              | себя на части, значительно превышает прочность любых         |                              |
|                         |                              | известных человечеству материалов. Кроме того, сфера такой   |                              |
|                         |                              | конструкции не будет иметь стабильную гравитационную связь   |                              |
|                         |                              | со звездой. Если любая часть сферы сместится ближе к звезде, |                              |
|                         |                              | например, после удара метеорита, то на такую часть сферы     |                              |
|                         |                              | звезда будет оказывать более сильное гравитационное          |                              |
|                         |                              | воздействие, а это приведёт к гравитационной нестабильности. |                              |
|                         |                              | Итак, будем исходить из того, что сферу Дайсона люди         |                              |
|                         |                              | построить (пока) не могут. "Однако эту задачу способны       |                              |
|                         |                              | выполнить нанороботы", – говорит Турчин. Маленькие роботы    |                              |
|                         |                              | могут начать добывать железо и кислород на малых планетах и  |                              |
|                         |                              | использовать эти ресурсы для создания вокруг Солнца          |                              |
|                         |                              | отражающей поверхности из гематита. Но, даже если с помощью  |                              |
|                         |                              | роботов удастся решить проблему использования всей этой      |                              |
|                         |                              | энергии,  Стивен Холлер  (Stephen Holler), доцент кафедры    |                              |
|                         |                              | физики Фордемского университета, к идее цифрового            |                              |
|                         |                              | воскрешения всё равно относится скептически. "Я не уверен,   |                              |
|                         |                              | что можно с абсолютной точностью поставить человека в точно  |                              |
|                         |                              | такие же условия развития, в каких он жил в прошлой жизни,   |                              |
|                         |                              | ведь придётся учитывать абсолютно все условия, в которых он  |                              |
|                         |                              | рос, развивался и жил – к примеру, нужно будет учесть        |                              |
|                         |                              | подзатыльник, которым этого человека наградил ещё в          |                              |
|                         |                              | мальчишеском возрасте какой-нибудь другой мальчишка-задира,  |                              |
|                         |                              | и так далее, каждую мелочь вплоть до самой смерти", – сказал |                              |
|                         |                              | Холлер в интервью  Pop Mech . "На то, как будет складываться |                              |
|                         |                              | вся человеческая жизнь, оказывает воздействие великое        |                              |
|                         |                              | множество причин. Было бы здорово, если бы нам был известен  |                              |
|                         |                              | полный список таких причин!.. Но у нас нет такого списка, –  |                              |
|                         |                              | говорит Холлер. – Но, даже если бы он существовал, в нём всё |                              |
|                         |                              | равно не были бы отражены абсолютно все события, и это       |                              |
|                         |                              | делает задачу воскрешения человека невообразимо трудной".    |                              |
|                         |                              | Вполне возможно, более разумно будет пойти по пути создания  |                              |
|                         |                              | "цифровых близнецов", а не цифрового "я". Но станет ли ваш   |                              |
|                         |                              | цифровой близнец тем, кем были в прошлой жизни именно вы?    |                              |
|                         |                              | Вообще говоря, да, станет, но с большими оговорками. "На     |                              |
|                         |                              | момент создания такого цифрового близнеца он будет вашей     |                              |
|                         |                              | точной копией, – говорит Холлер. – Но после этого он станет  |                              |
|                         |                              | развиваться как совсем другая личность. Он станет новым      |                              |
|                         |                              | человеком. Цифровая копия всегда будет отличаться от         |                              |
|                         |                              | биологической". Келли Смит  (Kelly Smith), профессор кафедры |                              |
|                         |                              | философии и биологических наук Университета Клемсона,        |                              |
|                         |                              | занимающийся изучением социальных, концептуальных и          |                              |
|                         |                              | этических проблем, связанных с освоением космоса, считает    |                              |
|                         |                              | архисложную задачу создания сферы Дайсона скорее             |                              |
|                         |                              | политическим, чем технологическим, вызовом:  "Всем людям     |                              |
|                         |                              | Земли предстоит неустанно трудиться над этим проектом в      |                              |
|                         |                              | течение 100 лет", – заявил Смит в интервью  Pop Mech .       |                              |
|                         |                              | Однако люди устроены так, что им привычнее  планировать что- |                              |
|                         |                              | либо только на краткосрочную перспективу , их больше         |                              |
|                         |                              | беспокоит сиюминутная прибыль, а не долгосрочная выгода.     |                              |
|                         |                              | "Кто захочет посвятить всю жизнь созданию нечто такого, что  |                              |
|                         |                              | не принесет пользы ни им, ни их детям, ни их внукам, а лишь  |                              |
|                         |                              | людям, которые будут жить на планете через тысячу лет?" – с  |                              |
|                         |                              | удивлением спрашивает он. К тому же, даже если нам удастся   |                              |
|                         |                              | разработать новые технологии и научиться загружать личность  |                              |
|                         |                              | человека на вычислительные устройства, источником питания    |                              |
|                         |                              | которых является сфера Дайсона, в любом случае мы сможем     |                              |
|                         |                              | говорить лишь о значительном увеличении продолжительности    |                              |
|                         |                              | жизни человека, но не о его бессмертии. И в этом будет       |                              |
|                         |                              | виновата энтропия Вселенной: "Звезда, снабжающая энергией    |                              |
|                         |                              | сферу Дайсона, рано или поздно превратится в сверхновую, и – |                              |
|                         |                              | всё, нашему источнику энергии придёт конец", – говорит Смит. |                              |
|                         |                              | Смит разделяет озабоченность Холлера проблемой               |                              |
|                         |                              | воспроизведения точных условий развития для создания         |                              |
|                         |                              | человека. "С какой бы скрупулезностью и тщательностью мы ни  |                              |
|                         |                              | фиксировали все события нашей жизни, нам всё равно не        |                              |
|                         |                              | удастся с точностью повторить условия развития, по крайней   |                              |
|                         |                              | мере сейчас", – говорит он.  За миллиарды лет работы         |                              |
|                         |                              | имитационной модели  в компьютерные коды, естественно, могут |                              |
|                         |                              | вкрасться ошибки. "Вполне может быть, что в конечном счёте   |                              |
|                         |                              | мы сможем воспроизвести 90 процентов человеческого сознания, |                              |
|                         |                              | но будет ли созданный таким образом человек тем, кого мы     |                              |
|                         |                              | ждали? – задаётся вопросом Смит. – Был ли бы я счастлив      |                              |
|                         |                              | узнать, что после моей смерти вместо меня будет вечно жить,  |                              |
|                         |                              | умирать и снова возрождаться моя восьмидесятипроцентная      |                              |
|                         |                              | копия? Не знаю, не знаю..." Эта проблема также беспокоит     |                              |
|                         |                              | Турчина – человека, разработавшего План С, хотя он полагает, |                              |
|                         |                              | что данная проблема имеет характер скорее философский,       |                              |
|                         |                              | нежели физический: "Если копия похожа на оригинал до такой   |                              |
|                         |                              | степени, что мы не в состоянии отличить оригинал от копии,   |                              |
|                         |                              | можно ли считать, что копия тождественна оригиналу?" Нет,    |                              |
|                         |                              | нельзя. Разработанный Турчиным План С цифрового бессмертия   |                              |
|                         |                              | не в состоянии вернуть человека к жизни со стопроцентной     |                              |
|                         |                              | гарантией, как это делается в авраамических религиях,        |                              |
|                         |                              | оперирующих понятием души. Между тем следует отметить, что   |                              |
|                         |                              | на сегодня ничего более перспективного, чем идея             |                              |
|                         |                              | использования мощных механизмов искусственного интеллекта и  |                              |
|                         |                              | сферы Дайсона с её колоссальными энергетическими ресурсами   |                              |
|                         |                              | для цифрового воскрешения, пока не придумано, говорит он.    |                              |
|                         |                              | Давайте порассуждаем, какие варианты развития событий могут  |                              |
|                         |                              | ждать вас после смерти? Тут могут быть два возможных         |                              |
|                         |                              | варианта. Если в вашем теле была душа, вы продолжите жить    |                              |
|                         |                              | после смерти, то есть всё закончится к всеобщему             |                              |
|                         |                              | удовлетворению. Но, если души в вашем теле не было и ваша    |                              |
|                         |                              | жизнь завершилась окончательной и бесповоротной гибелью, –   |                              |
|                         |                              | не стоит расстраиваться, ведь определённая часть вас всё     |                              |
|                         |                              | равно сможет продолжать существовать неопределённо долгое    |                              |
|                         |                              | время в виде цифровой копии. "В любом случае вы останетесь в |                              |
|                         |                              | выигрыше", – говорит Турчин. Узнайте , как прокачаться в     |                              |
|                         |                              | других специальностях или освоить их с нуля: Профессия Data  |                              |
|                         |                              | Scientist Профессия Data Analyst Курс по Data Engineering    |                              |
|                         |                              | Другие профессии и курсы ПРОФЕССИИ Профессия Fullstack-      |                              |
|                         |                              | разработчик на Python Профессия Java-разработчик Профессия   |                              |
|                         |                              | QA-инженер на JAVA Профессия Frontend-разработчик Профессия  |                              |
|                         |                              | Этичный хакер Профессия C++ разработчик Профессия            |                              |
|                         |                              | Разработчик игр на Unity Профессия Веб-разработчик Профессия |                              |
|                         |                              | iOS-разработчик с нуля Профессия Android-разработчик с нуля  |                              |
|                         |                              | КУРСЫ Курс по Machine Learning Курс "Machine Learning и Deep |                              |
|                         |                              | Learning" Курс "Математика для Data Science" Курс            |                              |
|                         |                              | "Математика и Machine Learning для Data Science"  Курс       |                              |
|                         |                              | "Python для веб-разработки" Курс "Алгоритмы и структуры      |                              |
|                         |                              | данных" Курс по аналитике данных Курс по DevOps              |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |   Контролируем JavaScript    | Привет. С выходом Chrome 89 (а так же в Deno 1.8) появилась  |          javascript          |
|        t/547214/        |   импорты с помощью Import   | возможность использовать Карты импортов (Import maps) –      |             deno             |
|                         |             maps             | механизма,  позволяющего получить контроль над поведением    |          ecmascript          |
|                         |                              | JavaScript-импортов. Несмотря  на то, что современная        |                              |
|                         |                              | разработка строится с использованием нативных  модулей, мы   |                              |
|                         |                              | не можем запускать приложения без предварительной сборки.    |                              |
|                         |                              | Одна из целей карт импортов как раз решает эту проблему.     |                              |
|                         |                              | Если кратко, то теперь можно будет совершенно законно и без  |                              |
|                         |                              | всяких сборщиков писать, скажем, так: Под катом разберём как |                              |
|                         |                              | это всё работает. Для того, чтобы директива import или       |                              |
|                         |                              | выражение import() могли разрешать пути к модулям в новом    |                              |
|                         |                              | виде, нужно эти пути где-то описать. Да, оказалось никакой   |                              |
|                         |                              | магии с подкапотным разрешением зависимостей как в той же    |                              |
|                         |                              | Node.js или webpack тут нет. Карты импортов задаются с       |                              |
|                         |                              | помощью тега script с атрибутом type="importmap" в формате   |                              |
|                         |                              | JSON. А теперь на примере. Запускаем статический сервер      |                              |
|                         |                              | (например, с помощью python -m SimpleHTTPServer 9000) и      |                              |
|                         |                              | создаём два файла: index.html и my-lib.mjs Открываем в       |                              |
|                         |                              | браузере страничку, и вуаля: в консоль вывелось "hi!". Далее |                              |
|                         |                              | более подробно разберём, как оно устроено. Структура На      |                              |
|                         |                              | данный момент, согласно спецификации, описывающий            |                              |
|                         |                              | зависимости JSON может содержать два ключа:  imports  и      |                              |
|                         |                              | scopes . Если появится какой-то неизвестный ключ, то должно  |                              |
|                         |                              | выводиться предупреждение в консоль (хотя у меня Хром этого  |                              |
|                         |                              | не делает). Imports Значение ключа imports – объект,         |                              |
|                         |                              | содержащий в качестве ключей имена модулей (к которым можно  |                              |
|                         |                              | обращаться для последующего импорта) и адрес модуля. Адрес   |                              |
|                         |                              | должен начинаться с  / ,  ../ ,  ./  или быть абсолютным     |                              |
|                         |                              | URL. Также есть возможность описывать "пакеты", содержащие   |                              |
|                         |                              | несколько модулей. Для этого нужно к названию ключа добавить |                              |
|                         |                              | / в конец. Создадим директорию "my-pack" добавив в неё       |                              |
|                         |                              | index.mjs с содержимым: А также в "my-pack" добавим          |                              |
|                         |                              | директорию "some-module" с файлом some-helper.mjs с          |                              |
|                         |                              | содержимым: Перепишем importmap нашего index.html: Теперь,   |                              |
|                         |                              | кроме обычного импорта основного пакета мы также можем       |                              |
|                         |                              | получить доступ к его внутренним модулям Scopes Бывают       |                              |
|                         |                              | случаи, когда используя один и тот же импорт (точнее,        |                              |
|                         |                              | спецификатор импорта), нам нужно получать разные версии      |                              |
|                         |                              | библиотеки в зависимости от того, откуда её импортируют. На  |                              |
|                         |                              | этот случай и нужны скоупы. Пример: В данном случае внутри   |                              |
|                         |                              | любого модуля, url которого будет начинаться с               |                              |
|                         |                              | some/other/url/ импорт "mypack" будет ссылаться на "./my-    |                              |
|                         |                              | pack/index-v2.jsm", во всех остальных случаях будет          |                              |
|                         |                              | использоваться "./my-pack/index.mjs". Также есть возможность |                              |
|                         |                              | вложенных скоупов. Например: Это даст нам такое разрешение   |                              |
|                         |                              | путей: Specifier Referrer Resulting URL a /scope1/foo.mjs    |                              |
|                         |                              | /a-1.mjs b /scope1/foo.mjs /b-1.mjs c /scope1/foo.mjs        |                              |
|                         |                              | /c-1.mjs a /scope2/foo.mjs /a-2.mjs b /scope2/foo.mjs        |                              |
|                         |                              | /b-1.mjs c /scope2/foo.mjs /c-1.mjs a /scope2/scope3/foo.mjs |                              |
|                         |                              | /a-2.mjs b /scope2/scope3/foo.mjs /b-3.mjs c                 |                              |
|                         |                              | /scope2/scope3/foo.mjs /c-1.mjs Подключение карт импортов    |                              |
|                         |                              | Как и с остальными ресурсами, подключаемыми через тег        |                              |
|                         |                              | script. Можно заполнять содержимое тега: а можно             |                              |
|                         |                              | импортировать карту используя атрибут src: Важно, что по     |                              |
|                         |                              | этому адресу ответ должен приходить с MIME type              |                              |
|                         |                              | application/importmap+json .  Особенности Карты импортов     |                              |
|                         |                              | блокируют остальные запросы импортов, поэтому рекомендуется  |                              |
|                         |                              | использовать инлайновый вариант. Если добавить карту импорта |                              |
|                         |                              | после использования определения модулей, то это приведёт к   |                              |
|                         |                              | ошибке: An import map is added after module script load was  |                              |
|                         |                              | triggered. На момент написания этой статьи есть возможность  |                              |
|                         |                              | добавить только одну карту импорта. Если добавить вторую, то |                              |
|                         |                              | это приведёт к ошибке. В Хроме выводит следующее: Multiple   |                              |
|                         |                              | import maps are not yet supported.  https://crbug.com/927119 |                              |
|                         |                              | Deno В Deno карты импортов подключаются помощью флага        |                              |
|                         |                              | --import-map: Где  import_map.json  - это карта импортов, а  |                              |
|                         |                              | index.ts  - файл для запуска (компиляции). Источники         |                              |
|                         |                              | https://wicg.github.io/import-maps                           |                              |
|                         |                              | https://github.com/WICG/import-maps https://deno.land/manual |                              |
|                         |                              | /linking_to_external_code/import_maps                        |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Узнаю тебя из тысячи: новый  |    Интернет наполнен самыми причудливыми фотографиями и      |   искусственный интеллект    |
| pany/selectel/blog/5467 | алгоритм способен распознать | видео знаменитостей. Кто-то пробуется на новые роли, делает  |        deep learning         |
|           14/           |    дипфейк по отражению в    | вызывающие заявления, выступает в не самых благоприятных     |           deepfake           |
|                         |            глазах            | образах, неожиданно снимается в фильмах 18+ и творит прочие  |           дипфейк            |
|                         |                              | абсурдности. В общем-то, человек — хозяин своей судьбы,      |            казусы            |
|                         |                              | поэтому переживать за всех этих людей не стоит. Но проблема  |                              |
|                         |                              | в том, что новые технологии позволяют «подставить» даже      |                              |
|                         |                              | вполне здравомыслящего человека, создав дипфейк, видео или   |                              |
|                         |                              | фото. Но и от этой «болезни» нашлось лекарство.     Ученые   |                              |
|                         |                              | из  Университета штата Нью-Йорк в Буффало  предложили        |                              |
|                         |                              | надежный способ, позволяющий  отличить  дипфейковое          |                              |
|                         |                              | изображение от настоящего. В основе решения — отражение в    |                              |
|                         |                              | глазах человека. Как ни странно, но искусственно             |                              |
|                         |                              | сгенерированное сетью GAN-изображение имеет отличия в бликах |                              |
|                         |                              | и отражении в глазах.        Лицо VS дипфейк    За последние |                              |
|                         |                              | годы технологии изменения лица на фотографиях получила новые |                              |
|                         |                              | виток разивтия. Отличить настоящее фото от скомпилированного |                              |
|                         |                              | стало почти невозможно. Выявить подделки не могут даже       |                              |
|                         |                              | алгоритмы. И неудивительно, вся эта сфера развивается по     |                              |
|                         |                              | спирали с догоняющим эффектом. Что это значит? Пока одна     |                              |
|                         |                              | сторона создает новые технологии подмены лица, другая —      |                              |
|                         |                              | работает над программами обнаружения этих фейков. Процесс    |                              |
|                         |                              | так и не заканчивается, а постоянные усовершенствования      |                              |
|                         |                              | приводят к спиральной динамике во всех сферах, связанных с   |                              |
|                         |                              | созданием/обнаружением дипфейков.        Источник    Так что |                              |
|                         |                              | там с отражениями? Глаза человека находятся ближе между      |                              |
|                         |                              | собой, чем источник света. Когда мы берем реальную           |                              |
|                         |                              | фотографию, то ее отражения в нашем правом и левом глазах    |                              |
|                         |                              | одинаковые. Они могут иметь отличия, но незначительные. Так  |                              |
|                         |                              | вот, в алгоритмах для подмены изображений  отсутствуют       |                              |
|                         |                              | «физические ограничения, описывающие поведение отражений».   |                              |
|                         |                              | Как итог, создаваемые сетью лица имеют отличные между собой  |                              |
|                         |                              | отражения и блики.       Как работает новый алгоритм?    Для |                              |
|                         |                              | правильной работы алгоритма необходимо соблюдение следующих  |                              |
|                         |                              | условий:       Оба глаза смотрят в камеру. Линия,            |                              |
|                         |                              | соединяющая глаза, параллельна камере.   Глаза отдалены от   |                              |
|                         |                              | источника света или отражения.   Источники света или         |                              |
|                         |                              | отражатели видимы обоими глазами.         Изображения        |                              |
|                         |                              | реальные (сверху) и фейковые (снизу)    Затем запускается    |                              |
|                         |                              | алгоритм. И работает он по следующей схеме:       Алгоритм   |                              |
|                         |                              | находит на фотографии лицо.   Обозначает контур лица и       |                              |
|                         |                              | размечает реперные точки: кончики глаз, рот, нос, брови.     |                              |
|                         |                              | На основании ключевых точек вырезает область глаз,           |                              |
|                         |                              | ограниченную радужной оболочкой.   Затем включается механизм |                              |
|                         |                              | бинаризации. Если яркость пикселей выше пороговых значений,  |                              |
|                         |                              | то они отмечаются черным цветом, остальные оставляют белыми. |                              |
|                         |                              | Получают два изображения: в правом и левом глазах.    С      |                              |
|                         |                              | помощью  коэффициента Жаккара  сравнивают их идентичность.   |                              |
|                         |                              | Оценка результатов      Для оценки эффективности и           |                              |
|                         |                              | работоспособности алгоритма ученые использовали две выборки: |                              |
|                         |                              | реальные лица из Flickr-Faces-HQ;   искусственно созданные   |                              |
|                         |                              | нейросетью StyleGAN2 лица с ресурса  This Person Does Not    |                              |
|                         |                              | Exist .         График сходства для сгенерированных сетью и  |                              |
|                         |                              | реальных изображений    Собрав необходимые данные, они       |                              |
|                         |                              | построили график. Также добавили для анализа ROC-кривую.     |                              |
|                         |                              | На графике видно, что идентифицировать лица, реальные или    |                              |
|                         |                              | сгенерированные, удалось с точностью 94%. Результат          |                              |
|                         |                              | впечатляющий.     Но есть и минус. Алгоритм отлично работает |                              |
|                         |                              | с портретным изображением и ярким светом. То есть            |                              |
|                         |                              | практически в идеальных условиях. Помимо этого, алгоритм     |                              |
|                         |                              | сравнивает не форму изображение в целом, а разбивает         |                              |
|                         |                              | фотографии на пиксели.       Боли дипфейков      Авторство   |                              |
|                         |                              | технологии дипфейка, появившейся в 2014 году,  приписывают   |                              |
|                         |                              | студенту Стэнфорда Яну Гудфеллоу. Ее долго использовали      |                              |
|                         |                              | среди разработчиков в научных целях. Но уже через три года   |                              |
|                         |                              | один из пользователей Reddit заменил с помощью технологии    |                              |
|                         |                              | лица знаменитостей в порнофильмах. И понеслось.    Два самых |                              |
|                         |                              | распространенных варианта применения ложных изображений —    |                              |
|                         |                              | это троллинг знаменитостей и политические манипуляции.       |                              |
|                         |                              | Палата представителей конгресса США увидела реальную угрозу  |                              |
|                         |                              | в существовании технологии. И считает, что дипфейки          |                              |
|                         |                              | представляют угрозу  национальной безопасности. В Калифорнии |                              |
|                         |                              | в итоге  запретили  на законодательном уровне                |                              |
|                         |                              | распространение дипфейков с кандидатами во время выборных    |                              |
|                         |                              | кампаний.                                                    |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos | Подключаем дисплей SPI LCD   |    Пост содержит инструкцию как подключить TFT-LCD дисплей   |        Allwinner A64         |
|        t/547180/        |    ILI9341 к одноплатному    | на популярном контроллере ILI9341 к одноплатному компьютеру  |           Armbian            |
|                         | компьютеру Banana Pi BPI-M64 | на ОС Armbian с помощью дерева устройств (Device Tree        |          Banana Pi           |
|                         |   или любому другому на ОС   | overlays) без танцев с бубном. В сети Интернет много         |         Device Tree          |
|                         |           Armbian            | материала как подключать различные LCD экраны к Raspberry    |             GPIO             |
|                         |                              | Pi. Но что если у вас нет Raspberry Pi, а хочется подключить |           ILI9341            |
|                         |                              | недорогой LCD экран на SPI интерфейсе? Все что вам           |             LCD              |
|                         |                              | необходимо, это любая плата с поддержкой ОС Armbian. В       |            Linux             |
|                         |                              | каталог поддерживаемых плат ОС Armbian входят платы: Asus,   |             SPI              |
|                         |                              | Pine64, Hardkernel, Orange Pi, Banana Pi, и т.д. На данный   |            Ubuntu            |
|                         |                              | момент в каталоге более 114 моделей плат, объявлена          |             X11              |
|                         |                              | поддержка различного оборудования из коробки. Доступны для   |             xfce             |
|                         |                              | подключения: 4G/LTE модемы, USB Wi-Fi, USB Bluetooth, USB    |                              |
|                         |                              | Ethernet, сканеры DVB-тюнеры и т.д. К всем этим платам можно |                              |
|                         |                              | легко подключить  SPI LCD дисплей ILI9341, как это           |                              |
|                         |                              | реализовать прошу под кат.     Преамбула  Многие одноплатные |                              |
|                         |                              | компьютеры снабжены HDMI выходом, но подключение             |                              |
|                         |                              | полноценного дисплея с поддержкой HDMI входа достаточно      |                              |
|                         |                              | дорогое удовольствие для небольшого проекта. В особенности,  |                              |
|                         |                              | если необходимо  реализовать минимальный функционал          |                              |
|                         |                              | взаимодействия с пользователем, терминал распечатки          |                              |
|                         |                              | документов, вывод текущего статуса работающего приложения.   |                              |
|                         |                              | Для подобных задач можно использовать символьные дисплеи LCD |                              |
|                         |                              | HD44780  на интерфейсе I2C, они достаточно дешевы и удобны.  |                              |
|                         |                              | Но в тоже время сильно ограничены в функциональности, на эти |                              |
|                         |                              | экраны невозможно вывести консоль Linux и нативный UI        |                              |
|                         |                              | приложения, вдобавок площадь LCD экрана нельзя использовать  |                              |
|                         |                              | как панель ввода информации. Для решения этих задач          |                              |
|                         |                              | прекрасно подойдут LCD экраны на SPI интерфейсе, дисплей     |                              |
|                         |                              | диагональю 3.5 дюйма с резистивным слоем можно приобрести за |                              |
|                         |                              | 9.57$ (включая доставку). На LCD экран можно выводить        |                              |
|                         |                              | консоль Linux и подсистему X11. Таким образом, использование |                              |
|                         |                              | SPI LCD является лучшим вариантом по соотношению             |                              |
|                         |                              | функциональности к стоимости.     Дисплей ILI9341 2.2 inch   |                              |
|                         |                              | 2.2" SPI TFT  Контроллер ILI9341 предназначен для управления |                              |
|                         |                              | TFT панелью. Под контроллер ILI9341 поставляются панели      |                              |
|                         |                              | диагональю от 2.2 до 3.2 дюймов, разрешение 240x320, к       |                              |
|                         |                              | некоторым LCD добавляют резистивный слой.  К одноплатному    |                              |
|                         |                              | компьютеру Banana Pi BPI-M64 будем подключать модуль SPI LCD |                              |
|                         |                              | ILI9341 диагональю 2.4 дюйма без резистивного слоя.          |                              |
|                         |                              | Рассмотрим характеристики и распиновку  SPI LCD ILI9341 2.4  |                              |
|                         |                              | inch       2,4-дюймовый цветной экран, поддержка 65K цветов  |                              |
|                         |                              | разрешение 320X240   интерфейс подключения SPI   доступен    |                              |
|                         |                              | слот для SD-карты   питание модуля 3.3V~5V   Напряжение      |                              |
|                         |                              | управления логикой 3.3V(TTL)     Контакты подключения LCD    |                              |
|                         |                              | Number   Pin Label   Description       1   VCC   5V/3.3V     |                              |
|                         |                              | power input       2   GND   Ground       3   CS   LCD chip   |                              |
|                         |                              | select signal, low level enable       4   RESET   LCD reset  |                              |
|                         |                              | signal, low level reset       5   DC/RS   LCD register /     |                              |
|                         |                              | data selection signal,high level: register, low level: data  |                              |
|                         |                              | 6   SDI(MOSI)   SPI bus write data signal       7   SCK      |                              |
|                         |                              | SPI bus clock signal       8   LED   Backlight control, high |                              |
|                         |                              | level lighting,if not controlled, connect 3.3V always bright |                              |
|                         |                              | 9   SDO(MISO)   SPI bus read data signal, if you do not need |                              |
|                         |                              | to the read function, you can not connect it        Для      |                              |
|                         |                              | управления подсветки используется контакт  номер 8 — LED .   |                              |
|                         |                              | Максимальное напряжение 3.3V соответствует максимальной      |                              |
|                         |                              | яркости от общего питания VCC. Если необходимо задать 50%    |                              |
|                         |                              | яркости экрана, то на LED необходимо подать напряжение в     |                              |
|                         |                              | 1.65V. Для программного управления яркости подсветки         |                              |
|                         |                              | необходимо контакт LED подключать к аналоговому выходу GPIO  |                              |
|                         |                              | на одноплатном компьютере. В случае наличия только цифровых  |                              |
|                         |                              | выходов, доступна лишь возможности включить или полностью    |                              |
|                         |                              | выключить подсветку экрана.    Исходя из характеристик LCD   |                              |
|                         |                              | экрана предъявляются следующие требования к одноплатному     |                              |
|                         |                              | компьютеру:       наличие SPI интерфейса   напряжение логики |                              |
|                         |                              | на контактах 3.3V (большинство плат)   потребуется еще два   |                              |
|                         |                              | (RESET, DC/RS) свободных контактов GPIO     Что ты за зверь  |                              |
|                         |                              | Armbian и какой одноплатный компьютер необходим  На странице |                              |
|                         |                              | armbian.com/download  представлено большое количество        |                              |
|                         |                              | разнообразных одноплатных компьютеров. С точки зрения        |                              |
|                         |                              | удобства подключения, лучше выбирать плату с 40-контактным   |                              |
|                         |                              | разъемом GPIO совместимым с Raspberry Pi 3. Например, если   |                              |
|                         |                              | подключать SPI LCD ILI9341 2.4 inch к плате Banana Pi        |                              |
|                         |                              | BPI-M64 и Orange Pi PC, то номера физически подключаемых     |                              |
|                         |                              | контактов GPIO будут совпадать (не путать с названиями       |                              |
|                         |                              | контактов процессора, они будут различны, далее потребуется  |                              |
|                         |                              | для конфигурирования). В случае если одноплатный компьютер   |                              |
|                         |                              | будет построена не на процессоре Allwinner, то возможно      |                              |
|                         |                              | потребуется изменять больше параметров в файле:              |                              |
|                         |                              | sun50i-a64-spi-ili9341-led-always-on.dts (будет далее по     |                              |
|                         |                              | тексту).     Armbian  — это самый популярный дистрибутив     |                              |
|                         |                              | Linux, предназначенный для одноплатных компьютеров           |                              |
|                         |                              | построенных на ARM процессоре, список поддерживаемых плат    |                              |
|                         |                              | огромен: Orange Pi, Banana Pi, Odroid, Olimex, Cubieboard,   |                              |
|                         |                              | Roseapple Pi, Pine64, NanoPi и др. Дистрибутив Armbain       |                              |
|                         |                              | основан на Debian и Ubuntu.    После явления миру Raspberry  |                              |
|                         |                              | Pi, китайские производители решили тоже влиться в движение   |                              |
|                         |                              | Open Hardware Source, и сделали много разнообразных плат. Но |                              |
|                         |                              | программная поддержка была крайне слабой, для решения данной |                              |
|                         |                              | проблемы зародился проект Armbian. На данный момент Armbian  |                              |
|                         |                              | уже исполнилось 7 лет, поддерживается 114 моделей плат,      |                              |
|                         |                              | объявлена поддержка различного оборудования из коробки.      |                              |
|                         |                              | Доступны для подключения: 4G/LTE модемы, USB Wi-Fi, USB      |                              |
|                         |                              | Bluetooth, USB Ethernet, сканеры DVB-тюнеры и т.д.    Для    |                              |
|                         |                              | запуска Armbian на одноплатном компьютере необходимо         |                              |
|                         |                              | загрузить образ с сайта, затем скопировать его на microSD    |                              |
|                         |                              | карту, с которой в последствие нужно будет загрузиться. Если |                              |
|                         |                              | на плате размещена eMMC память достаточного объема, то через |                              |
|                         |                              | утилиту armbian-config, операционная система легко           |                              |
|                         |                              | переносится с microSD карты на eMMC память вместе с          |                              |
|                         |                              | загрузчиком.    Создание IoT-проекта с использованием        |                              |
|                         |                              | Armbian в отличие от Raspberry Pi, позволяет выбирать платы  |                              |
|                         |                              | различающие по производительности, и набора периферии.       |                              |
|                         |                              | Например, на всех версиях Raspberry Pi размещен только один  |                              |
|                         |                              | Ethernet порт. Но если требуется сделать маршрутизатор с     |                              |
|                         |                              | несколькими Ethernet портами, то из списка поддерживаемых    |                              |
|                         |                              | плат Armbian подойдут модели: Helios64, Espressobin,         |                              |
|                         |                              | Bananapi R2, и т.д.     Поддерживаемые SoC       Allwinner   |                              |
|                         |                              | A10, A20, A31, H2+, H3, H5, H6, A64   Amlogic S805 and S905  |                              |
|                         |                              | (Odroid boards), S802/S812, S805, S905, S905X and S912 (fork |                              |
|                         |                              | by @balbes150)   Actionsemi S500   Freescale / NXP iMx6      |                              |
|                         |                              | Marvell Armada A380   Rockchip RK3288/RK3328/RK3399          |                              |
|                         |                              | Samsung Exynos 5422     Схема подключения SPI LCD ILI9341    |                              |
|                         |                              | 2.4 inch к Banana Pi BPI-M64 (порт GPIO Raspberry Pi 3)  SPI |                              |
|                         |                              | интерфейс LCD экрана подключаем к SPI1 на Banana Pi BPI-M64. |                              |
|                         |                              | Контакты CS, RESET, DC/RS можно подключать к любым цифровым  |                              |
|                         |                              | выводам.     Таблица контактов подключения:         Номер    |                              |
|                         |                              | LCD   Метка LCD   Номер контакта на Banana Pi BPI-M64 (порт  |                              |
|                         |                              | GPIO Raspberry Pi 3)       1   VCC   1 или 2 (если           |                              |
|                         |                              | необходима максимальная яркость, то контакт №2 на 5V)        |                              |
|                         |                              | 2   GND   39, или любой другой Ground       3   CS   24      |                              |
|                         |                              | 4   RESET   18       5   DC/RS   22       6   SDI(MOSI)   19 |                              |
|                         |                              | 7   SCK   23       8   LED   1 или любой свободный GPIO на   |                              |
|                         |                              | 3.3V       9   SDO(MISO)   21        Если контакт LED        |                              |
|                         |                              | подключать к цифровому выводу GPIO, то для включения         |                              |
|                         |                              | подсветки вручную потребуется подавать логическую «1» — для  |                              |
|                         |                              | включения или «0» — для выключения экрана.     Схема         |                              |
|                         |                              | подключения SPI LCD ILI9341:       Одноплатный компьютер     |                              |
|                         |                              | Banana Pi BPI-M64   Banana Pi BPI-M64   — это 64-битный      |                              |
|                         |                              | четырехъядерный мини-одноплатный компьютер, поставляемый     |                              |
|                         |                              | как решение с открытым исходном кодом. Ядром системы         |                              |
|                         |                              | является процессор Allwinner A64 с 4-мя ядрами Cortex-A53 с  |                              |
|                         |                              | частотой 1.2 ГГц. На плате размещено 2 ГБ DDR3 SDRAM 733МГц  |                              |
|                         |                              | оперативной памяти и 8 ГБ eMMC.    Самое главное для         |                              |
|                         |                              | успешного подключения SPI LCD необходимо знать название      |                              |
|                         |                              | контактов для SPI интерфейса, их номер и название зависит от |                              |
|                         |                              | модели процессора. Для решения этой задачи необходим         |                              |
|                         |                              | Allwinner A64 Datasheet. На  Wiki-странице Banana Pi BPI-M64 |                              |
|                         |                              | представлена распиновка 40-контактного разъема GPIO, из      |                              |
|                         |                              | которого мы узнаем название контактов: PD2, PD3, и т.д.      |                              |
|                         |                              | 40 PIN GPIO of Banana pi BPI-M64       GPIO Pin Name         |                              |
|                         |                              | Default Function   Function2：GPIO   Function3       CON2-P18 |                              |
|                         |                              | PD4   PD4         CON2-P19   SPI1-MOSI   PD2   UART4-TX      |                              |
|                         |                              | CON2-P21   SPI1-MISO   PD3   UART4-RX       CON2-P22   PC0   |                              |
|                         |                              | PC0         CON2-P23   SPI1-CLK   PD1   UART3-RX             |                              |
|                         |                              | CON2-P24   SPI1-CS   PD0   UART3-TX        Помимо название   |                              |
|                         |                              | контакта, необходимо узнать порядковый номер этого контакта  |                              |
|                         |                              | на ножке процессора, легко вычисляется по формуле: (позиция  |                              |
|                         |                              | буквы в алфавите — 1) * 32 + позиция вывода.  Рассчитаем     |                              |
|                         |                              | номер ножки для контакта PD2. Первая буква не учитывается    |                              |
|                         |                              | т.к. P — PORT, позиция буквы D в алфавите = 4, получаем      |                              |
|                         |                              | (4-1) * 32 + 2 = 98.   Контакту с меткой PD2 соответствует   |                              |
|                         |                              | 98 ножка на процессоре, далее потребуется для                |                              |
|                         |                              | конфигурирования дерева устройств.     Дерево устройств      |                              |
|                         |                              | (Device Tree, DT) в Linux   Дерево устройств (Device Tree,   |                              |
|                         |                              | DT)  — это структура данных в системе Linux, состоящая из    |                              |
|                         |                              | именованных узлов и свойств, описывающих оборудование,       |                              |
|                         |                              | которое невозможно обнаружить путем опроса оборудования.     |                              |
|                         |                              | Дерево должно включать имя базового процессора, конфигурацию |                              |
|                         |                              | его памяти и любые периферийные устройства (внутренние и     |                              |
|                         |                              | внешние). DT не используется для описания программного       |                              |
|                         |                              | обеспечения, хотя перечисление аппаратных модулей вызывает   |                              |
|                         |                              | загрузку модулей драйверов.    Сердцем любой отладочной      |                              |
|                         |                              | платы или одноплатного компьютера является SoC. SoC имеет    |                              |
|                         |                              | множество контактов (ног) для подключения линий              |                              |
|                         |                              | электропитания и различных устройств.        Контакты могут  |                              |
|                         |                              | быть объедены вместе для формирования интерфейса, например   |                              |
|                         |                              | MIPI DSI(MIPI Display Serial Interface). Интерфейс MIPI DSI  |                              |
|                         |                              | предназначен для подключения LCD панелей, активно            |                              |
|                         |                              | используется в смартфонах и планшетах. Но если к устройству  |                              |
|                         |                              | не планируется подключать дисплей по MIPI DSI, то эти линии  |                              |
|                         |                              | можно использовать для других целей, путем изменения DT. В   |                              |
|                         |                              | отличие от архитектуры x86 в системах построенных на SoC нет |                              |
|                         |                              | возможности произвести полностью опознание всех устройств в  |                              |
|                         |                              | режиме Plug and Play. Поэтому необходимо явное               |                              |
|                         |                              | декларирование какие контакты используются для интерфейсов и |                              |
|                         |                              | какие именно устройства подключены к этим интерфейсам.    До |                              |
|                         |                              | появления DT информация об устройствах в Linux являлась      |                              |
|                         |                              | неотъемлемой частью ядра, и в случае изменения состава       |                              |
|                         |                              | периферийных устройств требовалось пересобрать образ         |                              |
|                         |                              | системы. Это было крайне неудобно, и поэтому описание        |                              |
|                         |                              | периферийных устройств перенесли в конфигурационные файлы,   |                              |
|                         |                              | которые собираются на логическом уровне в дерево. Где ветвь  |                              |
|                         |                              | — устройство с указанием драйвера необходимого для работы    |                              |
|                         |                              | этого устройства.    После использования DT отпала           |                              |
|                         |                              | необходимость в формирование индивидуального образа для      |                              |
|                         |                              | каждого набора периферии устройств. Теперь достаточно        |                              |
|                         |                              | сформировать один образ, включить в него набор драйверов для |                              |
|                         |                              | различных устройств, и для каждого устройства сформировать   |                              |
|                         |                              | свой DT.     Наложения дерева устройств (Device Tree         |                              |
|                         |                              | overlays)   Device Tree overlays  (наложения дерева          |                              |
|                         |                              | устройств) — добавление к DT принципа наложения слоев        |                              |
|                         |                              | устройств. Если конфигурация описывает интерфейс UART к      |                              |
|                         |                              | которому был подключен Bluetooth, и необходимо Bluetooth     |                              |
|                         |                              | заменить на GPS модуль, то можно не удалять существующие     |                              |
|                         |                              | настройки Bluetooth а добавить  дополнительный слой для GPS  |                              |
|                         |                              | модуля который переопределит предыдущие настройки.     Для   |                              |
|                         |                              | работы с DT используются следующие термины:         DT       |                              |
|                         |                              | Дерево устройств       DTB (*.dtb)   Бинарный файл дерева    |                              |
|                         |                              | устройств       DTBO (*.dtbo)   Бинарный файл дерева         |                              |
|                         |                              | устройств для наложения       DTC   Компилятор дерева        |                              |
|                         |                              | устройств       DTO   Наложения дерева устройств       DTS   |                              |
|                         |                              | (*.dts)   Исходный файл для дерева устройств       FDT       |                              |
|                         |                              | Flattened Device Tree, двоичный формат, содержащийся в файле |                              |
|                         |                              | .dtb        Аппаратная конфигурация  описывается в файлах    |                              |
|                         |                              | исходниках DT ( .dts ) затем они компилируется в бинарные    |                              |
|                         |                              | файлы DT ( .dtb ) уже для конечного использования в системе. |                              |
|                         |                              | Так же можно выполнить обратную процедуру декомпиляции       |                              |
|                         |                              | файлов *. dtb  в *. dts, компилятор/декомпилятор             |                              |
|                         |                              | присутствует в системе.        Реализация DTO включает       |                              |
|                         |                              | разделение дерева устройств,  построение, разбиение на       |                              |
|                         |                              | разделы и исполнение.     Разделение DT  DT разделяются на   |                              |
|                         |                              | две части:       Main DT (основное дерево устройств) .       |                              |
|                         |                              | Предоставляет разработчик SoC и является настройкой по       |                              |
|                         |                              | умолчанию. В данном случае предоставляет компания Allwinner  |                              |
|                         |                              | разработчик процессора Allwinner A64.   Overlay DT           |                              |
|                         |                              | (Накладываемое дерево устройств) . Специфическая             |                              |
|                         |                              | конфигурация производителя платы, включает периферийные      |                              |
|                         |                              | устройства которые размещены на плате. Для платы Banana Pi   |                              |
|                         |                              | BPI-M64 предоставляет компания SinoVoip Co.,    Тема Device  |                              |
|                         |                              | Tree overlays в Linux достаточно большая, чтобы не           |                              |
|                         |                              | превращать пост в многотомное произведение Ленина, более     |                              |
|                         |                              | детально можно почитать в публикации  Работа с GPIO на       |                              |
|                         |                              | примере Banana Pi BPI-M64. Часть 2. Device Tree overlays.    |                              |
|                         |                              | Формирование DTS для SPI LCD ILI9341 2.4 inch  Тестирование  |                              |
|                         |                              | производилось на образе  Armbian_20.08.2_Bananapim64_bionic_ |                              |
|                         |                              | current_5.8.6_minimal.img.xz , на основе Ubuntu 18.04.5 LTS  |                              |
|                         |                              | (Bionic Beaver), ядро Linux 5.8.6. uname: Linux bananapim64  |                              |
|                         |                              | 5.8.6-sunxi64 #20.08.2 SMP Fri Sep 4 08:52:31 CEST 2020      |                              |
|                         |                              | aarch64 aarch64 aarch64 GNU/Linux.    В Armbian уже есть     |                              |
|                         |                              | драйвер для ILI9341, поэтому все что требуется, это создать  |                              |
|                         |                              | файл описания устройства в формате DTS, скомпилировать его в |                              |
|                         |                              | формат DTBO, и перезагрузить одноплатный компьютер. Как      |                              |
|                         |                              | говорится Easy!    Для формирования файла DTS необходимо     |                              |
|                         |                              | узнать ссылку на  gpiochip  в котором находится SPI          |                              |
|                         |                              | интерфейс, для этого откроем терминал Armbian и выполним     |                              |
|                         |                              | команду  cat /sys/kernel/debug/gpio :      Данная команда    |                              |
|                         |                              | выведет все доступные устройства gpiochip и номера           |                              |
|                         |                              | задействованных контактов в операционной системе. В          |                              |
|                         |                              | предыдущем разделе для контакта  SPI1-MOSI , название        |                              |
|                         |                              | контакта PD2, определили номер ножки процессора — 98. Исходя |                              |
|                         |                              | из полученного результата номер 98 приходится на диапазон    |                              |
|                         |                              | GPIOs 0-255, который соответствует чипу  gpiochip1: GPIOs    |                              |
|                         |                              | 0-255, parent: platform/1c20800.pinctrl, 1c20800.pinctrl .   |                              |
|                         |                              | Далее для формирования файла DTS потребуется узнать ссылку   |                              |
|                         |                              | на  1c20800.pinctrl .    Создадим файл DTS с названием:      |                              |
|                         |                              | sun50i-a64-spi-ili9341-led-always-on.dts  (в основе dts файл |                              |
|                         |                              | для платы Orange Pi PC):      Рассмотрим содержимое:         |                              |
|                         |                              | fragment@0  — является наложением на блок узла               |                              |
|                         |                              | /soc/pinctrl@1c20800,  ссылка этого узла &pio. Описывает     |                              |
|                         |                              | название задействованных контактов GPIO PD4", «PC0 и         |                              |
|                         |                              | определяет функцию gpio_out для контактов.   &pio  — это     |                              |
|                         |                              | ссылка в дереве устройств для контактов GPIO на узел         |                              |
|                         |                              | /soc/pinctrl@1c20800, название определяли выше. Ссылка       |                              |
|                         |                              | берется из файла в Armbian по пути: /boot/dtb-5.8.6-sunxi64/ |                              |
|                         |                              | allwinner/sun50i-a64-bananapi-m64.dtb. Для компиляции в      |                              |
|                         |                              | формат DTS, выполнить команду: $ dtc -I dtb -O dts           |                              |
|                         |                              | sun50i-a64-bananapi-m64.dtb -o sun50i-a64-bananapi-m64.dts   |                              |
|                         |                              | fragment@1  — является наложением на блок узла               |                              |
|                         |                              | /soc/spi@1c69000, ссылка этого узла &spi1.   status = „okay“ |                              |
|                         |                              | — задействует  SPI1 интерфейс на плате для подключения       |                              |
|                         |                              | устройств   cs-gpios = <&pio 3 0 0>; /* PD0 */  — номер      |                              |
|                         |                              | контакта для CS интерфейса SPI1.   <&pio 3 0 0>   —          |                              |
|                         |                              | параметры контакта, где &pio ссылка на gpioiochip1 в         |                              |
|                         |                              | основном дереве устройств, буква P не учитывается, означает  |                              |
|                         |                              | PORT, буква D — кодируется в цифру 3 (формула: порядковый    |                              |
|                         |                              | номер буквы в алфавите — 1), 0 после цифры 3 это позиция     |                              |
|                         |                              | вывода, 0 из PD0, и последний 0 — означает полярность, по    |                              |
|                         |                              | умолчанию всегда 0 (полярность  0 — на логический ноль,      |                              |
|                         |                              | выдается напряжение 0; полярность 1 — на логический ноль,    |                              |
|                         |                              | выдается напряжение 1).   compatible = „ilitek,ili9341“  —   |                              |
|                         |                              | идентификатор драйвера для данного устройства   pinctrl-0 =  |                              |
|                         |                              | <&ili9341_pins>  — ссылка на используемые контакты из        |                              |
|                         |                              | fragment@0   spi-max-frequency = <16000000>  — частота       |                              |
|                         |                              | работы SPI интерфейса   rotate = <90>  — ориентация          |                              |
|                         |                              | изображения, поворот на 90 градусов, в зависимости как       |                              |
|                         |                              | необходимо расположить дисплей.   fps = <25>  — кадров в     |                              |
|                         |                              | секунду   reset-gpios = <&pio 3 4 1>  — контакт RESET=PD4    |                              |
|                         |                              | dc-gpios = <&pio 2 0 0>  — контакт DC_RS=PC0    Разместим    |                              |
|                         |                              | файл по пути /boot/dtb/allwinner/overlay. Затем компилирует  |                              |
|                         |                              | файл .dts в .dtbo:      Запустим утилиту конфигурирования    |                              |
|                         |                              | платы: $ armbian-config. Перейдем по меню: System >          |                              |
|                         |                              | Hardware, и включим слой (overlay):  spi-ili9341-led-always- |                              |
|                         |                              | on . После перезагрузки платы, консоль Linux будет на SPI    |                              |
|                         |                              | LCD экране:                                                  |                              |
|                         |                              |                          Midnight Commander и Htop на SPI    |                              |
|                         |                              | LCD                                                          |                              |
|                         |                              |                          Midnight Commander       Htop       |                              |
|                         |                              |                          Название контактов  Для всех        |                              |
|                         |                              | процессоров Allwinner формат записи контакта, соответствует  |                              |
|                         |                              | виду  cs-gpios = <&pio 3 0 0> , для других процессоров       |                              |
|                         |                              | формат записи контакта будет отличаться.     Решение проблем |                              |
|                         |                              | Если изображение не появилось на LCD, выполните команду для  |                              |
|                         |                              | проверки: $ dmesg | grep -E 'ili9341'.    В консоли должна   |                              |
|                         |                              | быть следующая информация:         Настройка SPI LCD для     |                              |
|                         |                              | графического интерфейса Xfce и подсистемы X11  Для вывода    |                              |
|                         |                              | консоли Linux достаточно добавить файл DTS и все, но для     |                              |
|                         |                              | вывода графики этого недостаточно.    1) Установим XORG и    |                              |
|                         |                              | XFCE:      2) Для процессора Allwinner необходимо            |                              |
|                         |                              | дополнительно устанавливать GPU драйвер — fbdev:      3)     |                              |
|                         |                              | Удалить все конфигурационные файлы по пути                   |                              |
|                         |                              | /etc/X11/xorg.conf.d (если нет файлов, то отлично)    4)     |                              |
|                         |                              | Создать конфигурационный файл по пути                        |                              |
|                         |                              | /usr/share/X11/xorg.conf.d/99-fbdev.conf и разместить в нем  |                              |
|                         |                              | следующий фрагмент:      Где  /dev/fb0  — устройство SPI     |                              |
|                         |                              | LCD. Если к плате подключена HDMI панель, то может быть два  |                              |
|                         |                              | устройства /dev/fb0 и /dev/fb1.    Запускаем графический     |                              |
|                         |                              | интерфейс командой: startx или startxfсe4:          Если     |                              |
|                         |                              | необходимо сразу переходить в графический интерфейс, то      |                              |
|                         |                              | необходимо дополнительно установить пакеты:      Для         |                              |
|                         |                              | возвращения запуска только консоли необходимо отключить      |                              |
|                         |                              | автозапуск службы  display-manager.service       Решение     |                              |
|                         |                              | проблем  Если графический интерфейс не запускается то для    |                              |
|                         |                              | решение проблем необходимо посмотреть журнал событий X11,    |                              |
|                         |                              | командой:       Итог  Установка и настройка SPI LCD не       |                              |
|                         |                              | требует никаких компиляций модулей из исходного текста, что  |                              |
|                         |                              | существенно упрощает установку. Главное внимательно          |                              |
|                         |                              | выставить контакты и все заработает из коробки. Поставленные |                              |
|                         |                              | цели успешно решены.     RoadMap     Подключение дисплея     |                              |
|                         |                              | большего размера 3.5 дюйма на контроллере ILI9488.           |                              |
|                         |                              | Настройка Touch интерфейса для Xfсe.   Вывод на SPI LCD      |                              |
|                         |                              | только одного графического приложения используя подсистему   |                              |
|                         |                              | X11 из Docker контейнера (решение для публичных терминалов,  |                              |
|                         |                              | киосков, POS-терминалов).    Файл  sun50i-a64-spi-           |                              |
|                         |                              | ili9341-led-always-on.dts  и другие файлы наложения дерева   |                              |
|                         |                              | доступны в каталоге  GitHub Banana-Pi-BPI-M64/dt-overlays/   |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |    Elasticsearch: сайзинг    |  Каждый индекс Elasticsearch состоит из шардов. Шарды — это  |        gals software         |
| pany/galssoftware/blog/ | шардов как завещал Elastic + | логическое и физическое разделение индекса. В этой статье мы |         галс софтвэр         |
|         547000/         | анонс вебинара + предложения | расскажем о сайзинге шардов Elasticsearch — важной его       |        elasticsearch         |
|                         |          по митапу           | части, серьёзно влияющей на производительность кластера. В   |          elk stack           |
|                         |                              | высоконагруженных системах выбор правильной конфигурации     |        elastic stack         |
|                         |                              | архитектуры хранения позволит серьёзно сэкономить на железе. |           logstash           |
|                         |                              | Бóльшая часть статьи основана на  соответствующем разделе    |            kibana            |
|                         |                              | документации Elastic. Подробности под катом.     Сайзинг     |           filebeat           |
|                         |                              | шардов Elasticsearch   Как Elasticsearch работает с шардами  |          metricbeat          |
|                         |                              | Поисковые запросы обычно попадают в несколько шардов (в      |        elastic sizing        |
|                         |                              | продукционных нагруженных средах рекомендуем использовать    |       сайзинг кластера       |
|                         |                              | ноду с ролью coordinating). Каждый шард выполняет поисковый  |        elasticsearch         |
|                         |                              | запрос в одном процессорном треде. Если запросов много, пул  |     shards elasticsearch     |
|                         |                              | тредов поиска заканчивается (именно поиска, т.к.  есть и     |                              |
|                         |                              | другие ), что приводит к возникновению очередей, снижению    |                              |
|                         |                              | производительности и, как следствие, медленной скорости      |                              |
|                         |                              | поиска.     Каждый шард использует ресурсы памяти и          |                              |
|                         |                              | процессора. Небольшое количество бóльших по объёму шардов    |                              |
|                         |                              | использует меньше ресурсов, чем множество мелких.  Давайте   |                              |
|                         |                              | теперь краем глаза взглянем на сегменты (см. картинку ниже). |                              |
|                         |                              | Каждый шард Elasticsearch является индексом Lucene.          |                              |
|                         |                              | Максимальное количество документов, которое можно закинуть в |                              |
|                         |                              | индекс Lucene — 2 147 483 519. Индекс Lucene разделен на     |                              |
|                         |                              | блоки данных меньшего размера, называемые сегментами.        |                              |
|                         |                              | Сегмент — это небольшой индекс Lucene. Lucene выполняет      |                              |
|                         |                              | поиск во всех сегментах последовательно. Большинство шардов  |                              |
|                         |                              | содержат несколько сегментов, в которых хранятся данные      |                              |
|                         |                              | индекса. Elasticsearch хранит метаданные сегментов в JVM     |                              |
|                         |                              | Heap, чтобы их можно было быстро извлечь для поиска. По мере |                              |
|                         |                              | роста объёма шарда его сегменты объединяются в меньшее       |                              |
|                         |                              | количество более крупных сегментов. Это уменьшает количество |                              |
|                         |                              | сегментов, что означает, что в динамической памяти хранится  |                              |
|                         |                              | меньше метаданных (см. также  forcemerge , к которому мы     |                              |
|                         |                              | вернемся чуть дальше в статье).    Еще стоит сказать о       |                              |
|                         |                              | ребалансировке кластера. Если добавляется новая нода или     |                              |
|                         |                              | одна из нод выходит из строя, происходит ребалансировка      |                              |
|                         |                              | кластера. Ребалансировка сама по себе недешёвая с точки      |                              |
|                         |                              | зрения производительности операция. Кластер сбалансирован,   |                              |
|                         |                              | если он имеет равное количество шардов на каждой ноде и      |                              |
|                         |                              | отсутствует концентрация шардов любого индекса на любой      |                              |
|                         |                              | ноде. Elasticsearch запускает автоматический процесс,        |                              |
|                         |                              | называемый ребалансировкой, который перемещает шарды между   |                              |
|                         |                              | узлами в кластере, чтобы его сбалансировать. При             |                              |
|                         |                              | перебалансировке применяются заранее заданные  правила       |                              |
|                         |                              | выделения сегментов  (об allocation awareness и других       |                              |
|                         |                              | правилах мы подробнее расскажем в одной из следующих         |                              |
|                         |                              | статей). Если вы используете  data tiers , Elasticsearch     |                              |
|                         |                              | автоматически разместит каждый шард на соответствующем       |                              |
|                         |                              | уровне. Балансировщик работает независимо на каждом уровне.  |                              |
|                         |                              | Как заставить Elasticsearch ещё лучше работать с шардами     |                              |
|                         |                              | Правильно удалять данные.  Если вы удалили документ, из      |                              |
|                         |                              | файловой системы он удалится не сразу. Вместо этого,         |                              |
|                         |                              | Elasticsearch помечает документ как удаленный на каждом      |                              |
|                         |                              | шарде. Отмеченный документ будет продолжать использовать     |                              |
|                         |                              | ресурсы, пока он не будет удален во время периодического     |                              |
|                         |                              | слияния сегментов. Если нужно физически освободить место,    |                              |
|                         |                              | лучше всего сразу удалять индексы целиком, которые в итоге   |                              |
|                         |                              | освободят файловую системы.     Создавать шарды размером от  |                              |
|                         |                              | 10 до 50 ГБ.  Elastic говорит, шарды размером более 50 ГБ    |                              |
|                         |                              | потенциально могут снизить вероятность восстановления        |                              |
|                         |                              | кластера после сбоя. Из-за той самой ребалансировки, о       |                              |
|                         |                              | которой мы говорили в начале статьи. Ну, и большие шарды     |                              |
|                         |                              | накладнее передавать по сети. Предел в 50 ГБ выглядит,       |                              |
|                         |                              | конечно, как сферический конь в вакууме, поэтому мы сами     |                              |
|                         |                              | больше склоняемся к 10 ГБ.  Вот тут человек советует  10 ГБ  |                              |
|                         |                              | и смотреть на размер документов в следующем плане:       От  |                              |
|                         |                              | 0 до 4 миллионов документов на индекс: 1 шард.   От 4 до 5   |                              |
|                         |                              | миллионов документов на индекс: 2 шарда.   Более 5 миллионов |                              |
|                         |                              | документов считать по формуле: (количество документов / 5    |                              |
|                         |                              | миллионов) + 1 шард.      20 или менее шардов на 1 ГБ JVM    |                              |
|                         |                              | Heap.  Количество шардов, которыми может жонглировать нода,  |                              |
|                         |                              | пропорциональны объему JVM Heap ноды. Например, нода с 30 ГБ |                              |
|                         |                              | JVM Heap должна иметь не более 600 шардов. Чем меньше, тем,  |                              |
|                         |                              | скорее всего, лучше. Если это пропорция не выполняется можно |                              |
|                         |                              | добавить ноду. Посмотрим сколько там используется JVM Heap   |                              |
|                         |                              | на каждой ноде:        А теперь посмотрим сколько шардов на  |                              |
|                         |                              | каждой ноде и видим, что с нашим тестовым стендов всё в      |                              |
|                         |                              | порядке. Жить будет.        Количество шардов на узле можно  |                              |
|                         |                              | ограничить при помощи опции                                  |                              |
|                         |                              | index.routing.allocation.total_shards_per_node , но если их  |                              |
|                         |                              | уже много, присмотритесь к  Shrink API .     Совсем          |                              |
|                         |                              | необязательно создавать индексы размером в 1 день.  Часто    |                              |
|                         |                              | встречали у заказчиков подход, при котором каждый новый день |                              |
|                         |                              | создавался новый индекс. Иногда это оправдано, иногда можно  |                              |
|                         |                              | и месяц подождать. Ролловер ведь можно запускать не только с |                              |
|                         |                              | max_age, но и с max_size или max_docs. На Хабре была статья, |                              |
|                         |                              | в которой  Адель Сачков , в ту пору из Яндекс Денег (сейчас  |                              |
|                         |                              | уже нет), делился полезным лайфхаком: создавал индексы не в  |                              |
|                         |                              | момент наступления новых суток, а заранее, чтобы этот        |                              |
|                         |                              | процесс не аффектил на производительность кластера, но у     |                              |
|                         |                              | него там были микросервисы.   … каждые сутки создаются новые |                              |
|                         |                              | индексы по числу микросервисов — поэтому раньше каждую ночь  |                              |
|                         |                              | эластик впадал в клинч примерно на 8 минут, пока создавалась |                              |
|                         |                              | сотня новых индексов, несколько сотен новых шардов, график   |                              |
|                         |                              | нагрузки на диски уходил «в полку», вырастали очереди на     |                              |
|                         |                              | отправку логов в эластик на хостах, и Zabbix расцветал       |                              |
|                         |                              | алертами как новогодняя ёлка. Чтобы этого избежать, по       |                              |
|                         |                              | здравому размышлению был написан скрипт на Python для        |                              |
|                         |                              | предварительного создания индексов.  С новогодней ёлкой      |                              |
|                         |                              | неплохой каламбурчик получился.     Не пренебрегайте ILM и   |                              |
|                         |                              | forcemerge.  Индексы должны плавно перетекать между          |                              |
|                         |                              | соответствующими нодами  согласно ILM . В OpenDistro есть    |                              |
|                         |                              | аналогичный механизм.        С индексами, в которые уже не   |                              |
|                         |                              | ведется запись можно выполнить forcemerge — слияние меньших  |                              |
|                         |                              | по размеру сегментов в более крупные. Это в итоге снизит     |                              |
|                         |                              | накладные расходы на эксплуатацию шардов и повысит скорость  |                              |
|                         |                              | поиска. Forcemerge требует значительных ресурсов, поэтому    |                              |
|                         |                              | лучше это делать к какие-то в непиковые часы. Добавим, что   |                              |
|                         |                              | forcemerge это фактические создание нового сегмента из двух  |                              |
|                         |                              | старых, поэтому свободное место на диске лишним точно не     |                              |
|                         |                              | будет.    Приходите в комментарии и расскажите о своём опыте |                              |
|                         |                              | с раскладыванием шардов по нодам. Было бы интересно узнать о |                              |
|                         |                              | том, что работает в вашем случае.     Анонс вебинара.        |                              |
|                         |                              | Elastic приглашает посетить 17 марта в 12 часов по           |                              |
|                         |                              | московскому времени вебинар  Elastic Telco Day: Applications |                              |
|                         |                              | and operational highlights from telco environments .         |                              |
|                         |                              | Эксперты расскажут о применении в решений Elastic в          |                              |
|                         |                              | телекоме.  Регистрация.     Предложения по митапу.           |                              |
|                         |                              | Планируем проведение онлайн-митап по Elastic в апреле.       |                              |
|                         |                              | Напишите в комментариях или в личку какие темы вам было бы   |                              |
|                         |                              | интересно разобрать, каких спикеров услышать. Если бы вы     |                              |
|                         |                              | хотели сами выступить и у вас есть что рассказать, тоже      |                              |
|                         |                              | напишите. Вступайте в группу  Elastic Moscow User Group ,    |                              |
|                         |                              | чтобы не пропустить анонс митапа.     Канал в телеге.        |                              |
|                         |                              | Подписывайтесь на наш канал  Elastic Stack Recipes , там     |                              |
|                         |                              | интересные материалы и анонсы мероприятий.     Читайте наши  |                              |
|                         |                              | другие статьи:       Определение объёма кластера             |                              |
|                         |                              | Elasticsearch и тестирование производительности в Rally      |                              |
|                         |                              | Сайзинг Elasticsearch   Как лицензируется и чем отличаются   |                              |
|                         |                              | лицензии Elastic Stack (Elasticsearch)   Разбираемся с       |                              |
|                         |                              | Machine Learning в Elastic Stack (он же Elasticsearch, он же |                              |
|                         |                              | ELK)   Elastic под замком: включаем опции безопасности       |                              |
|                         |                              | кластера Elasticsearch для доступа изнутри и снаружи         |                              |
|                         |                              | Если вас интересуют услуги внедрения, администрирования и    |                              |
|                         |                              | поддержки Elastic Stack, вы можете оставить заявку в  форме  |                              |
|                         |                              | обратной связи  на специальной странице.                     |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos | Let vs where в Ocaml/Haskell | Языки Ocaml и Haskell ведут родословную из языка ISWIM,      |           Haskell            |
|        t/547204/        |                              | описанного в знаменитой статье Питера Лендина "The next 700  |            ocaml             |
|                         |                              | programming languages". В ней автор, отталкиваясь от языка   |             let              |
|                         |                              | LISP, создаёт новый язык программирования и, в частности,    |            where             |
|                         |                              | вводит ключевые слова  ,   и  , которые широко используются  |                              |
|                         |                              | в языках семейства ML. Рано или поздно у всякого пытливого   |                              |
|                         |                              | ума, занимающегося функциональным программированием          |                              |
|                         |                              | возникает вопрос: почему в Ocaml не прижилось ключевое слово |                              |
|                         |                              | , широко используемое в Haskell? С моей точки зрения, это, в |                              |
|                         |                              | основном, обусловлено различиями в семантике этих языков, а  |                              |
|                         |                              | именно императивно-энергичным характером Ocaml и чистотой-   |                              |
|                         |                              | ленивостью вычислений в Haskell (которые непосредственно и   |                              |
|                         |                              | жёстко связаны с impure/pure характерами этих языков). Оба   |                              |
|                         |                              | эти выражения,   и  , произошли от из языка LISP, которое    |                              |
|                         |                              | имеет два варианта этой особой формы:   и  . Вариант         |                              |
|                         |                              | отличается тем, что все связывания в блоке происходят        |                              |
|                         |                              | последовательно и могут зависеть друг от друга: В некоторых  |                              |
|                         |                              | диалектах Scheme объявления переменных могут быть            |                              |
|                         |                              | автоматически переупорядочены интерпретатором, поэтому их    |                              |
|                         |                              | становится необязательно писать в "правильном" порядке. Оба  |                              |
|                         |                              | варианта связывания,   и   соответствуют вот этому,          |                              |
|                         |                              | "продвинутому" варианту  . При этом в Ocaml для разделения   |                              |
|                         |                              | "параллельных связываний" используется ключевое слово  , а в |                              |
|                         |                              | Haskell они просто помещаются в один блок. Если смотреть     |                              |
|                         |                              | исключительно в суть вещей, видно, что выражения   и         |                              |
|                         |                              | различаются в двух аспектах: место, где ставится связывание, |                              |
|                         |                              | и количество выражений в блоке. Связывание имён до и после   |                              |
|                         |                              | использования. Первое принципиальное отличие - связывание    |                              |
|                         |                              | ставится перед выражением, в котором используется связанное  |                              |
|                         |                              | имя, а   употребляется после: Таким образом, let ... in      |                              |
|                         |                              | лучше описывает семантику последовательного выполнения       |                              |
|                         |                              | программы Ocaml, с её энергичными и, в целом,                |                              |
|                         |                              | императивными/псевдоимперативными вычислениями. Если         |                              |
|                         |                              | связывание содержит побочные эффекты, например мы интуитивно |                              |
|                         |                              | будем ожидать последовательного выполнения программы сверху  |                              |
|                         |                              | вниз. И это прекрасно сочетается с последовательным          |                              |
|                         |                              | вычислением top-level выражений в Ocaml, которые             |                              |
|                         |                              | обрабатываются именно сверху вниз, с первой директивы   до   |                              |
|                         |                              | последней строчки в традиционном В то же время, связывание   |                              |
|                         |                              | where прекрасно передаёт non-strict семантику языка Haskell, |                              |
|                         |                              | когда в качестве модели вычисления используется term/graph   |                              |
|                         |                              | reduction. Фактически, мы используем блок связываний   как   |                              |
|                         |                              | сноски, примечания: И программа читается естественным        |                              |
|                         |                              | образом: мы хотим вывести   и  , которые даны ниже. А если   |                              |
|                         |                              | сноска   не используется, так и читать её не надо - она ведь |                              |
|                         |                              | не упоминается в основном тексте.  А вот связывание  ,  ,    |                              |
|                         |                              | в блоке  , который тоже поддерживается языком Haskell, будет |                              |
|                         |                              | выглядеть ненатурально - вроде   и читается глазом, но       |                              |
|                         |                              | вычисляться ведь точно не будет. С другой стороны, внутри    |                              |
|                         |                              | псевдоимперативного блока  , связывание   очень к месту.     |                              |
|                         |                              | Переиспользование имён или shadowing Cвязывание  , как в     |                              |
|                         |                              | Ocaml, так и в Haskell, может употребляться несколько раз в  |                              |
|                         |                              | одном и том же блоке. А   - лишь однократно на одном уровне  |                              |
|                         |                              | вложенности: Это опять таки, играет на руку соответствующей  |                              |
|                         |                              | модели выполнения, поощряя или, наоборот, запрещая           |                              |
|                         |                              | переопределение имён, или, как ещё оно романтично называется |                              |
|                         |                              | "shadowing". В коде прикладных программ на Ocaml shadowing   |                              |
|                         |                              | используется повсеместно, позволяя эмулировать присвоение и  |                              |
|                         |                              | писать в псевдоимперативном стиле: В результате, хотя        |                              |
|                         |                              | программа выше и написана в функциональном стиле, мы можем   |                              |
|                         |                              | читать её как императивную: А в лагере Haskell,              |                              |
|                         |                              | однократность   явно, "лингвистически", запрещает shadowing  |                              |
|                         |                              | внутри одного блока, заставляя использовать многочисленные   |                              |
|                         |                              | апострофы. Этот запрет shadowing великолепно сочетается с    |                              |
|                         |                              | тем, что все top-level имена в модуле должны быть            |                              |
|                         |                              | уникальными, ведь из-за non-strict порядка вычислений мы их  |                              |
|                         |                              | не можем переопределять. А также с тем, что по семантике     |                              |
|                         |                              | языка Haskell вычисление обязано зацикливаться. Такое        |                              |
|                         |                              | принципиально противоположное отношение к shadowing в Ocaml  |                              |
|                         |                              | и Haskell косвенно, помимо традиционного для Ocaml           |                              |
|                         |                              | псевдоимперативного стиля, вызвано отличием сложной системы  |                              |
|                         |                              | модулей Ocaml и простыми модулями Haskell (backpack не       |                              |
|                         |                              | взлетел, и к счастью -  поиск значения очередного типа   из  |                              |
|                         |                              | модуля   в коде на Ocaml так же утомителен как и отладка     |                              |
|                         |                              | фабрики фабрик в ООП). Поскольку у модулей Ocaml может быть  |                              |
|                         |                              | несколько сигнатур, по-умолчанию, язык использует разные     |                              |
|                         |                              | файлы для сигнатуры (.mli) и для кода самого модуля (.ml).   |                              |
|                         |                              | Причём, опять таки, по-умолчанию, компилятор автоматически   |                              |
|                         |                              | генерирует файл сигнатуры, экспортируя все top-level         |                              |
|                         |                              | выражения модуля, написанные программистом. Из-за этого, в   |                              |
|                         |                              | прикладном коде на Ocaml разработчики склонны минимизировать |                              |
|                         |                              | количество top-level выражений, скрывая все детали внутри    |                              |
|                         |                              | них. То есть, писать функции по несколько страниц с большим  |                              |
|                         |                              | количеством let ... in связываний (см., к примеру            |                              |
|                         |                              | report_constructor_mismatch в файле  https://github.com/ocam |                              |
|                         |                              | l/ocaml/blob/trunk/typing/includecore.ml#L212  ) В Haskell   |                              |
|                         |                              | упрощённая система модулей совмещает сигнатуру и тело        |                              |
|                         |                              | модуля, позволяя легко создавать список экспорта. А поэтому, |                              |
|                         |                              | в типичном случае для прикладного кода, когда из модуля      |                              |
|                         |                              | нужно лишь одна-две функции, а остальное содержимое          |                              |
|                         |                              | инкапсулировано, этот подход позволяет создавать большое     |                              |
|                         |                              | количество top-level выражений малого размера. А значит, в   |                              |
|                         |                              | каждом из этих выражений можно обойтись связыванием where    |                              |
|                         |                              | без shadowing. Кстати, легко назвать язык, органично         |                              |
|                         |                              | сочетающий недостатки обоих подходов - это Clean. Заключение |                              |
|                         |                              | Для полноты, необходимо упомянуть, что   лучше, чем          |                              |
|                         |                              | поддерживает стиль программирования "сверху-вниз", поскольку |                              |
|                         |                              | с ним мы сначала пишем болванку результата, а уже потом      |                              |
|                         |                              | заполняем пропущенные места. Но это, в общем, согласуется с  |                              |
|                         |                              | тем, что Haskell лучше подходит для прототипирования, а у    |                              |
|                         |                              | Ocaml проще предсказывать производительность. Конечно, в     |                              |
|                         |                              | хорошо написанном простом библиотечном коде на языке Ocaml,  |                              |
|                         |                              | уровня   совсем бы не помешала директива where для того,     |                              |
|                         |                              | чтобы подчёркивать особенности кода, написанного в чистом,   |                              |
|                         |                              | функциональном стиле. Например, в функциях   и  . Но, положа |                              |
|                         |                              | руку на сердце, большая часть текстов на Ocaml значительно   |                              |
|                         |                              | хуже по качеству, и требует несоизмеримых усилий для того,   |                              |
|                         |                              | чтобы понять - можно ли использовать интерпретацию в стиле   |                              |
|                         |                              | graph rewriting или же стоит предерживаться традиционного    |                              |
|                         |                              | псевдоимперативного понимания. Поэтому, программируя на      |                              |
|                         |                              | Ocaml мы вполне можем обойтись без  , точно также, как для   |                              |
|                         |                              | чистого функционального кода на Haskell мы почти не          |                              |
|                         |                              | используем  . Таким образом, как хорошие инженерные          |                              |
|                         |                              | произведения, языки Ocaml и Haskell создают синергию         |                              |
|                         |                              | синтаксиса и семантики. Директивы связывания   и   играют    |                              |
|                         |                              | свою роль, подчёркивая подчёркивая линейную                  |                              |
|                         |                              | псевдоимперативную и "ленивую" (graph reduction) модели      |                              |
|                         |                              | выполнения. Они также прекрасно сочетаются с предпочитаемым  |                              |
|                         |                              | стилем написания прикладных программ и соответствующей       |                              |
|                         |                              | системой модулей.                                            |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |   Основы программирования    | Перед тем как мы начнем писать свой токен, а затем систему   |       smart contracts        |
|        t/547202/        |     смарт-контрактов TON     | смарт-контрактов, давайте проведем краткий обзор важных      |                              |
|                         |          (FreeTON)           | элементов смарт-контрактов для FreeTON. В предыдущей статье  |                              |
|                         |                              | Hello Word смарт-контракт для TON (FreeTON)  мы рассмотрели  |                              |
|                         |                              | самое начало работы с смарт-контрактами FreeTON и            |                              |
|                         |                              | HelloWorld. Структура данной статьи: Типы чисел int и uint,  |                              |
|                         |                              | pure-функции и event (события): напишем калькулятор на       |                              |
|                         |                              | blockchain; Структуры и массивы: смарт-контракты как база    |                              |
|                         |                              | данных; Хеш-таблицы: mapping; Публичные ключи и require.     |                              |
|                         |                              | Примечание: в коде далее в начале функций будет              |                              |
|                         |                              | присутствовать вызов  tvm.accept();  поскольку мы пока что   |                              |
|                         |                              | рассматриваем учебные варианты смарт-контрактов. Калькулятор |                              |
|                         |                              | Объявить переменную с числовым типом можно с помощью  int    |                              |
|                         |                              | (целое число со знаком) и  uint  (целое без знака). Можно    |                              |
|                         |                              | указать количество бит для числа в суффиксе указанного       |                              |
|                         |                              | числового типа, например:  int8, int16, uint128 . Типы  int  |                              |
|                         |                              | и  uint  - это то же что и  int256  и  uint256 . Над числами |                              |
|                         |                              | в смарт-контракте мы производим арифметические операции.     |                              |
|                         |                              | Теперь напишем смарт-контракт с калькулятором. Он имеет одну |                              |
|                         |                              | функцию  calc , которая принимает 3  uint -параметра: 2      |                              |
|                         |                              | числа-операнда и число, обозначающее номер операции над      |                              |
|                         |                              | переданными функции операндами. У нашей функции  calc  также |                              |
|                         |                              | присутствует модификатор  pure , что говорит, о том, что     |                              |
|                         |                              | данная функция не использует данные смарт-контракта, а       |                              |
|                         |                              | выполняет свои операции только с тем, что ей передано в      |                              |
|                         |                              | аргументах. В случае когда в функцию передается неизвестный  |                              |
|                         |                              | ей номер операции мы генерируем событие, которое сообщает    |                              |
|                         |                              | внешнему вызывающему наш смарт-контракт приложению, что что- |                              |
|                         |                              | то произошло. События ( event ) в смарт-контрактах           |                              |
|                         |                              | используются весьма часто, а тут оно нам пригодилось, для    |                              |
|                         |                              | того, чтобы сообщить дополнительную информацию, о том, что   |                              |
|                         |                              | возвращаемый функцией результат 0 это не результат, а ошибка |                              |
|                         |                              | связанная с тем, что передан неизвестный номер               |                              |
|                         |                              | арифметического оператора. Структуры и массивы То что мы     |                              |
|                         |                              | объявляем в начале (как правило) смарт-контракта, вне        |                              |
|                         |                              | области функций, относится к области памяти, связанной со    |                              |
|                         |                              | смарт-контрактом. А так, как смарт-контракт в итоге          |                              |
|                         |                              | становится загружен в blockchain, то данные смарт-контракта  |                              |
|                         |                              | хранятся в blockchain как в базе данных. Напишем простой     |                              |
|                         |                              | смарт-контракт для хранения данных в blockchain. Структура   |                              |
|                         |                              | User  в нашем контракте служит для хранения информации о     |                              |
|                         |                              | пользователе, и содержит 2 поля данных типа  uint : вес и    |                              |
|                         |                              | баланс юзера. Поскольку мы хотим хранить данные не об одном, |                              |
|                         |                              | а о многих юзерах, после объявления структуры, мы объявили   |                              |
|                         |                              | массив структур этого типа. Теперь мы можем добавлять в наш  |                              |
|                         |                              | массив пользователей с помощью  push , а затем вычислив по   |                              |
|                         |                              | индексу массива идентификатор нового юзера - возвращаем его  |                              |
|                         |                              | в событии  NewUser . Обратите внимание на то как выглядит    |                              |
|                         |                              | возврат значений функцией  GetUser : в данном случае мы      |                              |
|                         |                              | объявляем переменные в  returns , которым в теле функции     |                              |
|                         |                              | присваиваем значения. Также заметьте модификатор  pure  мы   |                              |
|                         |                              | поменяли на  view . Хеш-таблицы: mapping Выше мы рассмотрели |                              |
|                         |                              | массивы, у которых ключом к значению ( User ) является       |                              |
|                         |                              | индекс (или порядковый номер, начиная с нуля) элемента в     |                              |
|                         |                              | нём. Другой разновидностью коллекций элементов являются      |                              |
|                         |                              | отображения  mapping . В них также мы можем хранить          |                              |
|                         |                              | последовательности элементов заданного типа, как и в случае  |                              |
|                         |                              | с массивами, но в отличии от массивов, ключами к таким       |                              |
|                         |                              | значениям являются не простые числовые индексы, а значения   |                              |
|                         |                              | другого заданного типа. Это позволяет производить поиск      |                              |
|                         |                              | элементов в отражении по строке, адресу, публичному ключу и  |                              |
|                         |                              | другим значениям. Давайте добавим такой  mapping  в наш      |                              |
|                         |                              | немного переделанный пример: Публичные ключи и require Вызов |                              |
|                         |                              | функции смарт-контракта похож на отправку сообщения, в том   |                              |
|                         |                              | плане, что мы отправляем на адрес аккаунта со смарт-         |                              |
|                         |                              | контрактом объект, содержащий название вызываемой функции и  |                              |
|                         |                              | параметры для нее (если они требуются). Помимо этого в       |                              |
|                         |                              | сообщение может быть добавлены дополнительные данные:        |                              |
|                         |                              | публичный ключ, подпись, значение  value  для передачи       |                              |
|                         |                              | токенов  TON Crystal  в вызываемый аккаунт. Поговорим о      |                              |
|                         |                              | публичном ключе. Получить значение публичного ключа аккаунта |                              |
|                         |                              | отправившего сообщение нашему смарт-контракту можно путем    |                              |
|                         |                              | вызова API функции  msg.pubkey() . В функции  NewToken()  мы |                              |
|                         |                              | выполнили присваивание  accounts[tokens.length-1] =          |                              |
|                         |                              | msg.pubkey();  в котором для каждого вновь создаваемого  ID  |                              |
|                         |                              | токена в отображение  accounts  помещается публичный ключ    |                              |
|                         |                              | создавшего этот токен аккаунта, а в качестве ключа мы        |                              |
|                         |                              | используем идентификатор этого токена, который вычисляем     |                              |
|                         |                              | после пополнения массива  tokens . Затем в  SetTokenInfo()   |                              |
|                         |                              | где мы можем настроить название и символ для нашего токена,  |                              |
|                         |                              | мы задаем требование, только при выполнении которого         |                              |
|                         |                              | возможно продолжение вызова функции. Мы берем публичный ключ |                              |
|                         |                              | отправителя по значению  tid  находим в отображении          |                              |
|                         |                              | accounts  установленный при создании публичный ключ и        |                              |
|                         |                              | сравниваем. Только если они равны мы сможем установить или   |                              |
|                         |                              | изменить имя и символ токена. Тут были описаны аспекты, для  |                              |
|                         |                              | читателей, изучающих тему смарт-контрактов FreeTON "с нуля", |                              |
|                         |                              | а в следующих статьях мы начнем создавать собственный токен. |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |  И еще разок про Serverless  | Логотип AWS Lambda (ну или Half Life, я так и не понял) С    |             aws              |
|        t/546530/        |                              | публичного релиза AWS Lambda прошло ни много ни мало 6 с     |            lambda            |
|                         |                              | лишним лет. Реактивные функции, реагирующие на события, не   |          serverless          |
|                         |                              | только позволили по-другому смотреть на архитектуру систем и |         cloudnative          |
|                         |                              | приложений, но и породили новый buzzword Serverless. Мотивом |                              |
|                         |                              | к написанию этой статьи служит  пост  в блоге Netflix.       |                              |
|                         |                              | Прочитав его, а так же комментарии русскоязычной аудитории,  |                              |
|                         |                              | я прихожу к выводу, что направление "бессерверных            |                              |
|                         |                              | вычислений" еще не обкатано вдоль и поперек (как и в         |                              |
|                         |                              | англоязычной тусовке, чего греха таить), и неплохо бы        |                              |
|                         |                              | проитерироваться по этой теме еще раз. Мой пост будет        |                              |
|                         |                              | опираться на технологии, разработанные в компании AWS, но    |                              |
|                         |                              | тезисы из него применимы как к другим облачным провайдерам   |                              |
|                         |                              | (GCP, Azure), так и к "домашним" имплементациям (OpenFaaS).  |                              |
|                         |                              | Я собираюсь пройтись по трем, на мой взгляд самым важным,    |                              |
|                         |                              | пунктам, касающимся Serverless Сначала я "демистифицирую"    |                              |
|                         |                              | понятие Serverless, отделив его от реактивных функций        |                              |
|                         |                              | Lambda, Затем я пройдусь по архитектуре Lambda И закончу     |                              |
|                         |                              | этот пост рядом рекомендаций по разработке и сопровождению   |                              |
|                         |                              | Serverless приложений. В дальнейшем я буду использовать  sls |                              |
|                         |                              | для обозначения Serverless. Я очень ленивый. Lambda !=       |                              |
|                         |                              | Serverless, Lambda in Serverless == True Горе павшим         |                              |
|                         |                              | жертвами сладких речей адвокатов и евангелистов! "Вам не     |                              |
|                         |                              | нужно будет управлять парком машин!", "Вы сможете развернуть |                              |
|                         |                              | свое приложение за считанные секунды!", "С помощью sls       |                              |
|                         |                              | эффективность вашей разработки возрастет в разы!", - это и   |                              |
|                         |                              | многое другое пытаются втолкнуть мне толпы героев и          |                              |
|                         |                              | евангелистов AWS, но я познал суть™. Видите ли, риторика     |                              |
|                         |                              | "мне не нужно думать об инфраструктуре" обречена на провал.  |                              |
|                         |                              | Разве код работает в воздухе? Разве он не нуждается в сети?  |                              |
|                         |                              | Разве мне нужно заботиться об инфраструктуре, если у меня    |                              |
|                         |                              | есть Kubernetes, и я просто объявляю в нем сущности? На мой  |                              |
|                         |                              | взгляд, лучше всего  преимущество  sls описал Рик Хулихан на |                              |
|                         |                              | своем докладе посвященному архитектурным паттернам DynamoDB, |                              |
|                         |                              | кратко затронув новую парадигму (весь доклад сам по себе     |                              |
|                         |                              | интересный, но ссылка ведет на последние несколько минут).   |                              |
|                         |                              | Fail cheap - вот, что конкурентно "продает" sls. Чтобы       |                              |
|                         |                              | проверить тезис, мне не нужно  так много  ресурсов, как      |                              |
|                         |                              | понадобилось бы чтобы развернуть небольшой кластер из        |                              |
|                         |                              | виртуалок или контейнеров. Скорость здесь - не решающий      |                              |
|                         |                              | фактор. В 2021-ом году, что Lambda функция, что таблица      |                              |
|                         |                              | DynamoDB, что контейнер в ECS/EKS, что экземпляр EC2 - все   |                              |
|                         |                              | это запускается в считанные минуты, если не секунды. Скрытое |                              |
|                         |                              | послание №1 Если на этом моменте у вас пропал интерес, смело |                              |
|                         |                              | закрывайте статью. Serverless не нужен просто, чтобы был.    |                              |
|                         |                              | Это иной вид мышления и разработки, и не сказать, что он     |                              |
|                         |                              | лучше уже устоявшихся. Что такое Serverless AWS              |                              |
|                         |                              | предоставляет огромный набор сервисов для построение систем  |                              |
|                         |                              | различной степени нагрузки и тяжести, часть из которых имеет |                              |
|                         |                              | бирку sls - очереди и потоковая обработка (SQS, Kinesis),    |                              |
|                         |                              | нотификации (SES, SNS), интеграции (EventBridge, Step        |                              |
|                         |                              | Functions), хранилище (S3), базы данных (DynamoDB), работа с |                              |
|                         |                              | данными (Glue, Athena). Если вы смотрели мое выступление на  |                              |
|                         |                              | HighLoad++, вы помните, как именно я  отличаю  sls от        |                              |
|                         |                              | "обычных" сервисов. Sls создает для вас отдельный уровень    |                              |
|                         |                              | абстракции, снимая с вас операционную нагрузку по работе с   |                              |
|                         |                              | сервисом (на самом деле нет - теперь вам надо учить новую    |                              |
|                         |                              | технологию/подход). Взять к примеру базы данных DynamoDB -   |                              |
|                         |                              | сама СУБД уже есть! В ваше пользование предоставляется       |                              |
|                         |                              | таблица с ее "пропускной способностью" (WCU/RCU), индексы и  |                              |
|                         |                              | прочие фичи. В случае с сервисом ETL Glue вас не допускают к |                              |
|                         |                              | работе с самим движком ETL - вместо этого вы объявлете схему |                              |
|                         |                              | трансформации данных, указываете источник и пункт назначения |                              |
|                         |                              | данных, а так же описываете задачу. Все остальное находится  |                              |
|                         |                              | вне вашего ведения и управления, чтобы вы себе лишний раз    |                              |
|                         |                              | ногу не отстрелили (если очень хотите отстрелить -           |                              |
|                         |                              | поднимайте свое на виртуалках ЕС2). Отличие будет в          |                              |
|                         |                              | биллинге. Если в случае с базами RDS и задачами ECS Fargate  |                              |
|                         |                              | где оплата идет поминутно (или посекундно?), с sls вы        |                              |
|                         |                              | платите за объем (сколько гигабайт "весят" данные в S3) и    |                              |
|                         |                              | утилизацию (запросы и трафик). За счет гранулярного биллинга |                              |
|                         |                              | вы можете точнее прогнозировать и считать расходы и          |                              |
|                         |                              | проецировать их на вашу архитектуру и бизнес-логике. В       |                              |
|                         |                              | частности, если у вас есть некий сервис, и конкретное        |                              |
|                         |                              | действие пользователя вызывает 3 функции, которые пишут по   |                              |
|                         |                              | сообщению в свою очередь, откуда потом данные складываются в |                              |
|                         |                              | таблицу, то несложно посчитать сколько вам обойдется 1000    |                              |
|                         |                              | таких действий. Или миллион. Отсюда же и управление          |                              |
|                         |                              | масштабируемостью. Все ограничения либо у вас в голове, либо |                              |
|                         |                              | отражены на странице  квот  AWS. Ничего сложного, верно?     |                              |
|                         |                              | Основное непонимание связано как раз с отсутствием простой   |                              |
|                         |                              | истины в умах: sls - это абстракция над PaaS, которая        |                              |
|                         |                              | тарифицируется по-другому. Отсюда и сложности с sls          |                              |
|                         |                              | приложениями. Sls приложение - не только набор Lambda        |                              |
|                         |                              | функций за API GW. Sls приложение состоит  только  из sls    |                              |
|                         |                              | сервисов. Надеюсь, по этой теме вопросов у вас не осталось.  |                              |
|                         |                              | Если остались - пишите в комментариях, отвечу всем по        |                              |
|                         |                              | возможности. Архитектура AWS Lambda Родоначальница sls       |                              |
|                         |                              | подхода вызвала в своей время немало шума, ведь ее релиз     |                              |
|                         |                              | пришелся на то же время, что и буря вокруг Docker и рождение |                              |
|                         |                              | Kubernetes. За простотой Lambda функций (далее - Функция)    |                              |
|                         |                              | стоит определенная хитрость, ведь мысль о том, что "просто   |                              |
|                         |                              | нужно написать код и запустить" вызывает недоверие. На самом |                              |
|                         |                              | же деле Функции несколько сложнее, чем звучат из сладких уст |                              |
|                         |                              | многочисленных sls евангелистов и героев, (и порождают не    |                              |
|                         |                              | меньше сложностей, но об этом позже). Архитектура Функции    |                              |
|                         |                              | состоит из 3 частей: Источник События (Triggering Event);    |                              |
|                         |                              | внутренности AWS Lambda - runtime, deployment package        |                              |
|                         |                              | (логика с зависимостями), слои (layers) и "дополнение"       |                              |
|                         |                              | (extensions); точка назначения Функции (если имеется) -      |                              |
|                         |                              | корзина S3, таблица DynamoDB, очередь SQS и т.д. Картинка    |                              |
|                         |                              | посвящается Ване Моисееву - моему другу и любителю иконок    |                              |
|                         |                              | AWS В довесок к этому идут еще мониторинг, трассировка       |                              |
|                         |                              | запроса и многие прелести, например Lambda Permission - а    |                              |
|                         |                              | именно "разрешение" какому-то внешнему ресурсу (генератору   |                              |
|                         |                              | событий) запускать Функции, передавая им полезную нагрузку   |                              |
|                         |                              | (Событие). Что происходит под капотом Lambda - история куда  |                              |
|                         |                              | сложнее, и лучше послушать о ней из  первоисточника .        |                              |
|                         |                              | Незамысловатая на первый взгляд архитектура породила очень   |                              |
|                         |                              | много вопросов по эксплуатации и разработке, безопасности и  |                              |
|                         |                              | мониторингу, compliance, governance и много много других.    |                              |
|                         |                              | Покрыть их все - тема не одного десятка статей, поэтому      |                              |
|                         |                              | дальше я пройдусь по основным практикам. Как жить с Lambda   |                              |
|                         |                              | Давайте по порядку. Есть следующие проблемы, которые надо    |                              |
|                         |                              | адресовать: Локальная разработка и отладка Архитектура sls   |                              |
|                         |                              | приложений Организация кодовой базы Развертывание            |                              |
|                         |                              | Эксплуатация (логирование, мониторинг, трассировка)          |                              |
|                         |                              | Безопасность Звучит сложно? Ну передавайте от меня привет    |                              |
|                         |                              | тем, кто говорил, что sls это легко.  1. Локальная           |                              |
|                         |                              | разработка и отладка Стоит первым пунктом потому, что с      |                              |
|                         |                              | этого все и начинается. AWS завез прекрасный инструмент под  |                              |
|                         |                              | названием Serverless Application Model или  SAM . SAM        |                              |
|                         |                              | представляет собой два компонента: интерфейс командной       |                              |
|                         |                              | строки aws-sam-cli (ставится как через   так и через  ) и    |                              |
|                         |                              | шаблон (сильно упрощенный CloudFormation). Для отладки       |                              |
|                         |                              | Функции нужно объявить ее в шаблоне. Затем можно будет       |                              |
|                         |                              | вызывать ее двумя способами:   или   (для Функций,           |                              |
|                         |                              | отвечающих на вызовы API GW). Если вы впервые видите SAM, то |                              |
|                         |                              | проще всего запустить один из quick start шаблонов,          |                              |
|                         |                              | заботливо приготовленных для вас инженерами AWS. Пройдя в    |                              |
|                         |                              | можно вызвать функцию локально (первый запуск займет         |                              |
|                         |                              | некоторое время, образ Lambda runtime нужно скачать): А      |                              |
|                         |                              | установив плагин для JetBrain IDE или VS Code можно          |                              |
|                         |                              | использовать и полноценный отладчик, чтобы узнать, где       |                              |
|                         |                              | конкретно входящий JSON неправильно обрабатывается! 2.       |                              |
|                         |                              | Архитектура sls приложений Микросервисная архитектура        |                              |
|                         |                              | подразумевает какой-то компонент (микросервис) достаточно    |                              |
|                         |                              | изолированный от остальных, чтобы не рушить весь бизнес      |                              |
|                         |                              | своим падением, и достаточно интегрированный, чтобы          |                              |
|                         |                              | обслуживать конкретную бизнес-задачу. Давайте представим     |                              |
|                         |                              | некий market-service для биржи, который имплементирует API   |                              |
|                         |                              | . Вызовы на этот API вернут нам список текущих рынков,       |                              |
|                         |                              | базовых валют, по прямому запросу - тикер. С точки зрения    |                              |
|                         |                              | микросервисов это может имплементировать один сервис, в      |                              |
|                         |                              | котором будут реализованы следующие API: В контейнерной      |                              |
|                         |                              | оркестрации это делается с помощью обычного сервиса, а вся   |                              |
|                         |                              | логика имплементирована в нем. Реализовать такой функционал  |                              |
|                         |                              | в Lambda тоже можно в одной функции. Полезная нагрузка в     |                              |
|                         |                              | запросе будет выглядеть следующим образом (при условии, что  |                              |
|                         |                              | запрос пришел из API GW): Мы можем осуществить проверку      |                              |
|                         |                              | пути/ресурса и в зависимости от этого реализовать логику     |                              |
|                         |                              | одной функции. Что-то навроде: У этого подхода есть одно     |                              |
|                         |                              | заметное достоинство - код централизован, и мы точно знаем   |                              |
|                         |                              | где его править. Однако этот крайне неэффективен и является  |                              |
|                         |                              | антипаттерном для sls архитектур. И вот ряд почему:          |                              |
|                         |                              | Тарификация Функции идет по времени выполнения и мы тратим   |                              |
|                         |                              | драгоценное время на избыточный control flow. Если Функция   |                              |
|                         |                              | должна "ходить" в несколько мест (S3, DynamoDB и прочие API  |                              |
|                         |                              | AWS), то мы даем ей опасно большое количество разрешений.    |                              |
|                         |                              | Проблемы масштабируемости: нам нужно масштабировать   , но   |                              |
|                         |                              | вот  дорогой, и нам хотелось бы применить к нему throttling, |                              |
|                         |                              | что в условиях одной функции сделать невозможно. По уму      |                              |
|                         |                              | такой микросервис имплементируется с помощью не одной, а     |                              |
|                         |                              | нескольких Функций. Высокоуровневая архитектура выглядит     |                              |
|                         |                              | следующим образом: И каждая функция будет иметь свою         |                              |
|                         |                              | ограниченную область применения. Это порождает другую        |                              |
|                         |                              | проблему - как нам организовать управление повторяемым кодом |                              |
|                         |                              | и кодовую базу в принципе? 3. Организация кодовой базы       |                              |
|                         |                              | Подход выше открывает 2 проблемы: управление общим кодом     |                              |
|                         |                              | (что если 90% кода в Функциях одинаковые? Где моя  бритва    |                              |
|                         |                              | ?!) и организация репозитория. Раньше чтобы запаковать       |                              |
|                         |                              | Функцию с зависимостями, нужно было создавать специальный    |                              |
|                         |                              | deployment package и загружать его на S3. Что вручную, что с |                              |
|                         |                              | SAM это представляет собой следующее: И если с внешними      |                              |
|                         |                              | зависимостями еще можно как-то жить, то с внутренними        |                              |
|                         |                              | возникает вопрос. А в "многофункциональном" sls приложении   |                              |
|                         |                              | наверняка найдется одна или две библиотеки, которые делят    |                              |
|                         |                              | между собой все функции. Для компилируемых языков проблема   |                              |
|                         |                              | не такая неприятная, управление зависимостями пройдет на     |                              |
|                         |                              | стадии сборки. Для интерепретируемых языков, таких как       |                              |
|                         |                              | Python, JavaScript и Ruby, проблема решается с помощью слоев |                              |
|                         |                              | (Lambda Layers). Слои Функций работают по схожему принципу   |                              |
|                         |                              | со слоями контейнерных образов и предоставляют собой         |                              |
|                         |                              | отдельное хранилище, монтируемое к runtime'у Функции. Таким  |                              |
|                         |                              | образом, проект можно организовать следующим образом: В      |                              |
|                         |                              | шаблоне SAM можно указать директорию, чтобы создать нужный   |                              |
|                         |                              | слой: Ну и дальше дело техники - в ресурсе функции указать   |                              |
|                         |                              | версию слоя, ссылаясь на нее в самом же шаблоне с помощью  . |                              |
|                         |                              | Возникает вопрос: "А что делать, если в одном репозитории    |                              |
|                         |                              | мне нужны  разные  версии зависимостей?" С помощью Слоев эта |                              |
|                         |                              | проблема не решается. Самое правильное - собрать, упаковать  |                              |
|                         |                              | и положить зависимость в репозиторий. В случае с Python -    |                              |
|                         |                              | Pip server. 4. Развертывание С архитектурой и кодовой базой  |                              |
|                         |                              | разобрались, теперь надо понять как "катить". Я уверен, ни   |                              |
|                         |                              | для кого не станет сюрпризом, что катиться нужно с помощью   |                              |
|                         |                              | IaC инструментов (молодое поколение называет это GitOps).    |                              |
|                         |                              | Что CloudFormation, что Terraform обладают возможностью      |                              |
|                         |                              | объявлять ресурсы в облаке от Amazon, но объявление sls      |                              |
|                         |                              | ресурсов может стать очень муторным процессом в виду         |                              |
|                         |                              | гибкости и тонкой настройки. SAM хорош тем, что создает      |                              |
|                         |                              | абстракцию над CloudFormation для упрощенного объявления     |                              |
|                         |                              | ресурсов sls приложений. В свою очередь Антон Бабенко сделал |                              |
|                         |                              | похожий  инструмент  для TF. Выбирать между одним или вторым |                              |
|                         |                              | я не буду (в тусовке амазонщиков у меня уже есть репутация   |                              |
|                         |                              | "хейтера" Terraform), а разбор отличий заслуживает отдельной |                              |
|                         |                              | статьи. Все еще живой  Serverless framework  тоже управляет  |                              |
|                         |                              | жизненным циклом sls приложений (сам я с ним не работал, так |                              |
|                         |                              | что на ваш страх и риск). Ну и вишенка на торте и вершина    |                              |
|                         |                              | айсберга Хайпа - Cloud Development Kit или  CDK . В отличие  |                              |
|                         |                              | от выше описанных инструментов CDK объявляет инфраструктуру  |                              |
|                         |                              | с использованием высокоуровневых языков программирования     |                              |
|                         |                              | (TypeScript, JavaScript, Python, C#, Java), код которых      |                              |
|                         |                              | компилируется ("синтезируется") в шаблон CloudFormation.     |                              |
|                         |                              | Похожую историю имплементировали и ребята из HashiCorp,      |                              |
|                         |                              | назвав ее  cdktf . Архитектура CDK/cdktf сама по себе        |                              |
|                         |                              | сложная, но это не выступает барьером, который даже          |                              |
|                         |                              | неопытные инженеры-облачники не в состоянии предолодеть. В   |                              |
|                         |                              | сети полно материалов, как блогов, так и self-paced          |                              |
|                         |                              | workshop, лекций, CDK day - их море. Скрытое послание №2     |                              |
|                         |                              | Впрочем, если захотите узнать больше про CDK, маякните. На   |                              |
|                         |                              | английском материала и вправду море, но вот в русскоязычном  |                              |
|                         |                              | сегменте маловато. В остальном развертывание sls приложений  |                              |
|                         |                              | ничем не отличается от развертывания других приложений на    |                              |
|                         |                              | AWS - у вас имеется цепочка поставки (pipeline), которая     |                              |
|                         |                              | прогоняет тесты, пакует ресурсы и раскатывает их по          |                              |
|                         |                              | различным регионам и аккаунтам. Делаете вы это с помощью     |                              |
|                         |                              | или   - не так уж и важно. 5. Эксплуатация С внутренними     |                              |
|                         |                              | метриками и логами Функций проблем нет - они сами собой      |                              |
|                         |                              | складываются в CloudWatch (разумеется, если вы не забыли     |                              |
|                         |                              | прописать нужные политики в роли). Отладить простейшую CRUD- |                              |
|                         |                              | функцию тоже много ума не надо. Прилетел JSON в Функцию, с   |                              |
|                         |                              | ним что-то произошло, выхлоп лег куда-то. Если что-то в этом |                              |
|                         |                              | потоке пошло не так, достаточно локально отладить Функцию с  |                              |
|                         |                              | помощью того же SAM CLI, приложив к ней багообразующий       |                              |
|                         |                              | event. Другое дело, если Функций много и работают они в      |                              |
|                         |                              | каком-то долгом транзакционном процессе, наппример Step      |                              |
|                         |                              | Functions. Отлавливать логи по времени, как прилетел         |                              |
|                         |                              | злосчастный запрос, который не смог корректно обработать -   |                              |
|                         |                              | то еще приключение, и разработчик может потратить            |                              |
|                         |                              | неприемлемо много времени, чтобы найти баг. На помощь придет |                              |
|                         |                              | инструмент observability от AWS под названием X-Ray. X-Ray   |                              |
|                         |                              | является сервисом трассировки, он тесно интегрирован в sls   |                              |
|                         |                              | экосистему. Достаточно включить поддержку X-Ray в Функции, и |                              |
|                         |                              | каждому запросу начнет присваиваться нужный идентификатор.   |                              |
|                         |                              | После этого можно спокойно посмотреть, куда прилетел запрос, |                              |
|                         |                              | через какие Функции прошел, и что было внутри логов тех      |                              |
|                         |                              | Функций на момент принятия запроса. X-Ray стоит отдельных    |                              |
|                         |                              | денег, но его можно как включить, так и выключить - что      |                              |
|                         |                              | вполне себе удешевляет процесс отладки, предоставляя         |                              |
|                         |                              | возможность на лету переводить ваше приложение в production  |                              |
|                         |                              | в debug mode. 6. Безопасность С очевидными вещами            |                              |
|                         |                              | разбираться не будем. Всем известны такие базовые паттерны   |                              |
|                         |                              | безопасности, как шифрование (at-rest, in-transit) и         |                              |
|                         |                              | контроль сетевого периметра c помощью NACL и Security        |                              |
|                         |                              | Groups. У каждой Функции должна быть своя IAM роль. И по     |                              |
|                         |                              | лучшим практикам безопасности каждая роль должна следовать   |                              |
|                         |                              | least-privilege principle - то есть не даем больше прав, чем |                              |
|                         |                              | минимально нужно для работы приложения. Иными словами, если  |                              |
|                         |                              | наша Функция выполняет операцию  , как минимум странно       |                              |
|                         |                              | давать роли разрешение   (разрешаем все действия по          |                              |
|                         |                              | отношению к DynamoDB). Так же странно видеть  , в то время   |                              |
|                         |                              | как работа идет в отношении одной таблицы. Поэтому первое    |                              |
|                         |                              | правило безопасности в sls приложениях - минимум прав.       |                              |
|                         |                              | Потратье время и изучите как работает AWS IAM, и какие трюки |                              |
|                         |                              | там есть для тонкого управления доступом. Скрытое послание   |                              |
|                         |                              | №3 Для англоязычной аудитории я написал  повесть  в 5 томах  |                              |
|                         |                              | про IAM и буду рад, если кто-то переведет ее на русский      |                              |
|                         |                              | язык. Второе правило - не разрешаем Функциям слишком много   |                              |
|                         |                              | снова . Но на этот раз не только урезанием прав, но и        |                              |
|                         |                              | ограничением области применения Функции. Каждая Функция      |                              |
|                         |                              | выполняет одно атомарное и простое действие: регистрирует    |                              |
|                         |                              | пользователя, авторизует пользователя, выводит список        |                              |
|                         |                              | торговых пар на бирже, выводит цену пары, отправляет письмо  |                              |
|                         |                              | и так далее. Бояться тут надо не того, что кто-то взломает   |                              |
|                         |                              | Функцию и изнутри нее будет делать всякие глупости (такая    |                              |
|                         |                              | вероятность есть, но это тема другой статьи), но того, что   |                              |
|                         |                              | роль Функции кто-то может  assume , т.е. "принять на себя".  |                              |
|                         |                              | Именно таким образом взломали  Capital One : не взломали     |                              |
|                         |                              | сервер, а просто получили ARN роли, через которую получили   |                              |
|                         |                              | STS ключ, секрет и токен. Потому что кто-то ошибся в поле    |                              |
|                         |                              | Principal. Стыд! Вроде ничего не забыл? Я не ожидаю, что     |                              |
|                         |                              | после прочтения вы сразу побежите писать Lambda функции и    |                              |
|                         |                              | хвастаться стремительно сокращаюимся парком EC2 машин. Ниже  |                              |
|                         |                              | я прилагаю  ссылки, которые позволят вам двигаться дальше в  |                              |
|                         |                              | изучении Serverless и Lambda в частности:                    |                              |
|                         |                              | https://serverlessland.com/  - аггрегатор материалов по      |                              |
|                         |                              | Serverless https://cdkworkshop.com/  - обширная лаба по CDK  |                              |
|                         |                              | https://aws.amazon.com/serverless-workshops/  - лабы по sls  |                              |
|                         |                              | с "реальными бизнес сценариями" P.S. Я редко пишу на русском |                              |
|                         |                              | языке и еще реже чувствую страдания моей русскоязычной       |                              |
|                         |                              | амазонской братии. Если у вас есть что-то, что хочется       |                              |
|                         |                              | понять, но нет сил или навыка - пишите, я попробую разжевать |                              |
|                         |                              | это для вам в удобоваримом формате.                          |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |   OpenCV в Python. Часть 4   | Привет, Хабр! В этой статье я бы хотел рассказать как с      |            Opencv            |
|        t/547218/        |                              | помощью только OpenCV распознавать объекты, на примере       |            Python            |
|                         |                              | игральных карт:     Введение   Допустим, у нас имеется       |           туториал           |
|                         |                              | следующее изображение с картами:     А также у нас имеются   |    обработка изображений     |
|                         |                              | эталонные изображения каждой карты:     И теперь для того,   |                              |
|                         |                              | чтобы детектировать каждую карту, нам необходимо написать    |                              |
|                         |                              | три ключевые функции, которые:     находит контуры всех      |                              |
|                         |                              | карт;   находит координаты каждой отдельной карты;           |                              |
|                         |                              | распознаёт карту с помощью ключевых точек.      Нахождение   |                              |
|                         |                              | контуров карт     Первым аргументом в данную функцию мы      |                              |
|                         |                              | передаём изображение в оттенках серого, к которому применяем |                              |
|                         |                              | гауссово размытие, для того, чтобы было легче найти контуры  |                              |
|                         |                              | карт. После этого с помощью функции threshold() мы           |                              |
|                         |                              | преобразуем наше серое изображение в бинарное. Данная        |                              |
|                         |                              | функция принимает первым параметром изображение, вторым —    |                              |
|                         |                              | пороговое значение, третьим — это максимальное значение,     |                              |
|                         |                              | которое присваивается значениям пикселей, превышающим        |                              |
|                         |                              | пороговое значение. Из нашего примера следует, что любое     |                              |
|                         |                              | значение пикселя, превышающее 215, устанавливается равным    |                              |
|                         |                              | 255, а любое значение, которое меньше 215, устанавливается   |                              |
|                         |                              | равным нулю. И последним параметром передаём метод           |                              |
|                         |                              | порогового значения. Мы используем THRESH_BINARY(), который  |                              |
|                         |                              | указывает на то, что значения пикселей, которые больше 215   |                              |
|                         |                              | устанавливаются в максимальное значение, которое мы передали |                              |
|                         |                              | третьим параметром. Данная функция возвращает два значения,  |                              |
|                         |                              | где первое — это значение, которое мы передали в данную      |                              |
|                         |                              | функцию вторым аргументом, а второе — чёрно-белое            |                              |
|                         |                              | изображение, которое выглядит подобным образом:     Теперь   |                              |
|                         |                              | мы можем найти контуры наших карт, где контур — это кривая,  |                              |
|                         |                              | соединяющая все непрерывные точки, которые имеют одинаковый  |                              |
|                         |                              | цвет. Поиск контуров осуществляется с помощью метода         |                              |
|                         |                              | findContours(), где в качестве первого аргумента эта функция |                              |
|                         |                              | принимает изображение, вторым — это тип контуров, который мы |                              |
|                         |                              | хотим извлечь. Я использую cv2.RETR_EXTERNAL для извлечения  |                              |
|                         |                              | только внешних контуров. К примеру, для того, чтобы извлечь  |                              |
|                         |                              | все контуры используют cv2.RETR_LIST, а последний параметром |                              |
|                         |                              | мы указываем метод аппроксимации контура. Мы используем      |                              |
|                         |                              | cv2.CHAIN_APPROX_SIMPLE, указывая на то, что все лишние      |                              |
|                         |                              | точки будут удалены, тем самым экономя память. Например,     |                              |
|                         |                              | если вы нашли контур прямой линии, то разве вам нужны все    |                              |
|                         |                              | точки этой линии, чтобы представить эту линию? Нет, нам      |                              |
|                         |                              | нужны только две конечные точки этой линии. Это как раз то,  |                              |
|                         |                              | что и делает cv2.CHAIN_APPROX_SIMPLE.   Нахождение координат |                              |
|                         |                              | карт     Данная функция принимает контуры, которые мы нашли  |                              |
|                         |                              | в предыдущей функции, а также основное изображение в         |                              |
|                         |                              | оттенках серого. Первым делом мы создаём словарь, где в роли |                              |
|                         |                              | ключа будет выступать название карты, а в роли значения      |                              |
|                         |                              | координаты каждой карты. Далее мы проходимся в цикле по      |                              |
|                         |                              | нашим контурам, где с помощью функции boundingRect() находим |                              |
|                         |                              | ограничительные рамки каждого контура: начальные x и y       |                              |
|                         |                              | координаты, за которыми следуют ширина и высота рамки. Так   |                              |
|                         |                              | получилось, что функция, которая искала контура, нашла аж 31 |                              |
|                         |                              | контур, хотя карт всего 4. Это могут быть незначительные     |                              |
|                         |                              | контуры, которые мы дальше сортируем в условии, исходя из    |                              |
|                         |                              | размера контура.    Теперь, зная координаты контура, мы      |                              |
|                         |                              | можем вырезать по этим координатам каждую карту, что         |                              |
|                         |                              | собственно мы и делаем в следующей строчке кода. Далее       |                              |
|                         |                              | вырезанное изображение мы передаём в функцию                 |                              |
|                         |                              | find_features()(о ней мы поговорим ниже), которая опираясь   |                              |
|                         |                              | на ключевые точки, возвращает нам название вырезанной карты. |                              |
|                         |                              | После этого добавляем всё в словарь.   Распознавание карт    |                              |
|                         |                              | Как говорилось выше, распознавание карт будет осуществляться |                              |
|                         |                              | на основе ключевых точек. Ключевые точки — это интересные    |                              |
|                         |                              | области изображения. Интересными участками называются такие  |                              |
|                         |                              | участки, которые неоднородны. Например, это могут быть углы, |                              |
|                         |                              | так как там происходит резкое изменение интенсивности в двух |                              |
|                         |                              | разных направлениях. Если мы посмотрим на изображение ниже,  |                              |
|                         |                              | а потом закроем глаза и попытаемся визуализировать этот      |                              |
|                         |                              | образ, то мы вряд ли сможем увидеть что-то конкретное и      |                              |
|                         |                              | особенное на этом изображении. Причина этого в том, что      |                              |
|                         |                              | изображение не содержит никакой интересной информации:       |                              |
|                         |                              | Теперь закройте глаза и попытайтесь представить это          |                              |
|                         |                              | изображение:     И вы увидите, что помните много деталей об  |                              |
|                         |                              | этом образе. Причина этого в том, что на изображении много   |                              |
|                         |                              | интересных областей. Теперь переходим к практике:     Для    |                              |
|                         |                              | обнаружения ключевых точек я использую ORB, который мы       |                              |
|                         |                              | инициализируем с помощью вызова функции ORB_create(), после  |                              |
|                         |                              | чего мы находим ключевые точки и дискрипторы(которые         |                              |
|                         |                              | кодируют интересную информацию в ряд чисел) для эталонной    |                              |
|                         |                              | карты и для карты, которую мы вырезали из главного           |                              |
|                         |                              | изображения. Вот, к примеру, как выглядят ключевые точки для |                              |
|                         |                              | короля:     Затем нам необходимо сопоставить(вычислить       |                              |
|                         |                              | расстояние) дискрипторы первого изображения с дискрипторами  |                              |
|                         |                              | второго и взять ближайший. Для этого мы создаём BFMatcher    |                              |
|                         |                              | объект с помощью вызова метода BFMatcher(). Теперь мы можем  |                              |
|                         |                              | с помощью функции knnMatch() найти k лучших совпадений для   |                              |
|                         |                              | каждого дескриптора, где k в нашем случае равно 2. Далее нам |                              |
|                         |                              | необходимо выбрать только хорошие совпадения, основываясь на |                              |
|                         |                              | расстоянии. Поэтому мы проходимся в цикле по нашим           |                              |
|                         |                              | совпадениям и если оно удовлетворяет условию m.distance <    |                              |
|                         |                              | 0.75*n.distance, то мы засчитываем это совпадение как        |                              |
|                         |                              | хорошее и добавляем в список. Потом считаем количество       |                              |
|                         |                              | хороших совпадений(чем больше, тем лучше) и основываясь на   |                              |
|                         |                              | этом делаем вывод, что за карта. Вот какие совпадения были   |                              |
|                         |                              | найдены для каждой карты с королём:     И вслед за этим      |                              |
|                         |                              | рисуем прямоугольник вокруг карты с помощью функции          |                              |
|                         |                              | draw_rectangle_aroud_cards():     На этом всё. Надеюсь, было |                              |
|                         |                              | познавательно) Код и картинки можно найти на  github . До    |                              |
|                         |                              | новых встреч:)                                               |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Где работать в ИТ в 2021:   | Продолжаем рассказывать вам об интересных работодателях в    |      где работать в it       |
| pany/habr_career/blog/5 |          «Кавычки»           | нашей рубрике «Где работать в ИТ». В новом выпуске —         |  где работать тестировщику   |
|          47100/         |                              | «Кавычки» — компания с новосибирскими корнями и полностью    |           кавычки            |
|                         |                              | распределённой командой, которая занимается аутсорс-         |         хабр карьера         |
|                         |                              | тестированием ПО и обеспечением качества. О найме, условиях  |                              |
|                         |                              | работы и внутренних процессах в «Кавычках» мы расспросили    |                              |
|                         |                              | Елену Хасанову, руководителя IT-проектов и заместителя       |                              |
|                         |                              | директора. В 2020 году компания получила на Хабр Карьере     |                              |
|                         |                              | хорошую оценку — почти 4,5 из пяти. Дальше мы расскажем, за  |                              |
|                         |                              | какие качества сотрудники особенно благодарны компании.      |                              |
|                         |                              | Кстати, вы можете оценить своего работодателя и поделиться   |                              |
|                         |                              | мнением о нем с теми, кто сейчас ищет работу. Можно ругать,  |                              |
|                         |                              | можно хвалить, главное — оценивать честно! →  оценить        |                              |
|                         |                              | работодателя Навигация по статье О компании Об условиях      |                              |
|                         |                              | работы О найме в «Кавычки» О команде О технологиях О         |                              |
|                         |                              | компании «Кавычки» занимаются тестированием и обеспечением   |                              |
|                         |                              | качества для российских и зарубежных компаний. Это аутсорс-  |                              |
|                         |                              | агентство, команда тестирует проекты клиентов из разных      |                              |
|                         |                              | сфер: от небольших стартапов, до авиа, медицины, ритейла.    |                              |
|                         |                              | География распределенной команды «Кавычек» обширная — ребята |                              |
|                         |                              | работают из 15 городов России, 8 городов Украины, а ещё из   |                              |
|                         |                              | Беларуси, Казахстана и с Кипра. При подготовке этого выпуска |                              |
|                         |                              | даже выяснилось, что совместных фотографий у ребят почти     |                              |
|                         |                              | нет. Но дело спасли коллажи :) Судя по оценке на Хабр        |                              |
|                         |                              | Карьере, сотрудники ценят компанию за интересные задачи,     |                              |
|                         |                              | признание результатов труда и за то, что «Кавычки» помогают  |                              |
|                         |                              | сделать мир лучше. Вот здесь  подробная оценка  (почитайте   |                              |
|                         |                              | комменты, они интересные). Оценка компании «Кавычки» на Хабр |                              |
|                         |                              | Карьере в 2020 году Об условиях работы Какой в вашей         |                              |
|                         |                              | компании сложился рабочий график и какое отношение к         |                              |
|                         |                              | переработкам? Мы уже более одиннадцати лет работаем на       |                              |
|                         |                              | удаленке. У нас уникальная команда — наши ребята живут в 18  |                              |
|                         |                              | городах (в пяти странах). При этом мы работаем в разных      |                              |
|                         |                              | часовых поясах с большим количеством разноплановых проектов  |                              |
|                         |                              | от крупных российских до зарубежных, поэтому в компании      |                              |
|                         |                              | выстроены четкие процессы и регламенты работы. Мы работаем   |                              |
|                         |                              | по бизнес-времени Москвы с 9 до 18 или с 10 до 19 в          |                              |
|                         |                              | зависимости от проекта. Если нужно сместить часы работы — мы |                              |
|                         |                              | можем пойти навстречу, но при условии, что клиент, на        |                              |
|                         |                              | проекте которого работает тестировщик, не будет против. Мы   |                              |
|                         |                              | лояльно относимся к отгулам, если сотруднику необходимо уйти |                              |
|                         |                              | или задержаться. Но есть важное правило — нужно заранее      |                              |
|                         |                              | предупредить об этом свою команду. Ответственность — это     |                              |
|                         |                              | must have в командной работе. Мы стараемся не допускать      |                              |
|                         |                              | переработок. Work-life balance — наше все. Мы хотим, чтобы у |                              |
|                         |                              | ребят был интерес к проектам и желание развиваться и         |                              |
|                         |                              | учиться. А для этого нужно отдыхать и переключаться от       |                              |
|                         |                              | работы. Конечно, как и в любом рабочем процессе — бывают     |                              |
|                         |                              | исключения: иногда на каком-то проекте приходится            |                              |
|                         |                              | задержаться (поздний или ночной релиз). Ребята получают      |                              |
|                         |                              | отгулы и оплату за доп. часы. Бывают ситуации, когда клиенты |                              |
|                         |                              | просят выйти в выходной день — это возможно только по        |                              |
|                         |                              | согласию тестировщика, а его часы оплачиваются в двойном     |                              |
|                         |                              | размере. Какие бонусы, премии и компенсации предусмотрены в  |                              |
|                         |                              | компании? У нас есть небольшой, но уютный офис в             |                              |
|                         |                              | Новосибирске. По желанию в нем работают ребята, которые      |                              |
|                         |                              | живут рядом, но большая часть команды все-таки работает на   |                              |
|                         |                              | удаленке. Мы полностью «белая» компания и придерживаемся     |                              |
|                         |                              | всех условий ТК. Несмотря на то, что мы — удаленная команда, |                              |
|                         |                              | мы стараемся сделать так, чтобы у наших ребят были плюшки,   |                              |
|                         |                              | которые есть у людей, работающих в офисе — оплата            |                              |
|                         |                              | тренажерного зала / бассейна. До карантина мы оплачивали     |                              |
|                         |                              | курсы английского языка, но пришлось поставить на стоп эту   |                              |
|                         |                              | историю. Сейчас же мы решили возобновить английский, но уже  |                              |
|                         |                              | в виде штатного преподавателя. У нас также есть премии. А с  |                              |
|                         |                              | этого года мы ввели помощь с релокацией в Россию. Если кто-  |                              |
|                         |                              | то из ребят хочет переехать в Россию, мы оплачиваем билеты и |                              |
|                         |                              | квартиру в первые несколько месяцев.  Мы стараемся           |                              |
|                         |                              | придумывать новые бонусы для ребят, хотя иногда бывает не    |                              |
|                         |                              | очень просто реализовать их централизованно, так как в       |                              |
|                         |                              | разных странах и городах свои нюансы.  На удаленке очень     |                              |
|                         |                              | важно общение, это сильно влияет на эмоциональное состояние  |                              |
|                         |                              | сотрудника. Сейчас мы расширили  команду почти в два раза.   |                              |
|                         |                              | Поэтому начинаем развивать HR-направление, чтобы             |                              |
|                         |                              | разрабатывать внутренние мероприятия, помимо учебных курсов  |                              |
|                         |                              | и созвонов. У нас очень дружная команда, несмотря на разные  |                              |
|                         |                              | таймзоны, ребята встречаются в онлайне, общаются, играют в   |                              |
|                         |                              | мафию, онлайн игры и т.д. До пандемии я путешествовала по    |                              |
|                         |                              | городам и встречалась с ребятами лично, это тоже важно при   |                              |
|                         |                              | работе с удаленными командами. Какие есть перспективы для    |                              |
|                         |                              | образования и личного развития у сотрудников? Мы считаем,    |                              |
|                         |                              | что сотрудники должны развиваться в компании. Мы стараемся   |                              |
|                         |                              | создать такую атмосферу, чтобы ребятам хотелось расти внутри |                              |
|                         |                              | компании — тестировщики вырастали до лидов, пробовали что-то |                              |
|                         |                              | новое или переходили на более сложные проекты. Поэтому у нас |                              |
|                         |                              | большой акцент на внутреннем обучении. Есть своя библиотека  |                              |
|                         |                              | и база знаний. Еженедельно мы проводим лекции. Мы пробовали  |                              |
|                         |                              | разные форматы обучения, например, лекции для лидов и общие  |                              |
|                         |                              | лекции. Сейчас же пришли к тому, чтобы собирать группы по    |                              |
|                         |                              | разным направлениям. Например, у нас есть группа по обучению |                              |
|                         |                              | автотестированию, группа для лидов, группа для тех, кто      |                              |
|                         |                              | хочет сдать ISTQB, остались общие лекции по тестированию. В  |                              |
|                         |                              | библиотеке доступны все презентации и видеолекции по всем    |                              |
|                         |                              | группам. Если мы по каким-то причинам не можем провести      |                              |
|                         |                              | обучение (например, не хватает экспертизы), то мы оплачиваем |                              |
|                         |                              | внешние курсы. А также полностью оплачиваем сертификации,    |                              |
|                         |                              | например, ISTQB.  Про найм Во сколько этапов проходит найм и |                              |
|                         |                              | что на них ожидает соискателя? Как правило, у нас два этапа  |                              |
|                         |                              | — тестовое задание и собеседование. На собеседовании обычно  |                              |
|                         |                              | присутствуют лид или лиды, в чью команду набираем            |                              |
|                         |                              | тестировщиков, и я. Мы стараемся больше узнать о             |                              |
|                         |                              | тестировщике: какая у него база, смотрим на его soft skills, |                              |
|                         |                              | на его желание развиваться в тестировании. Мы работаем с     |                              |
|                         |                              | крупными российскими и западными компаниями, поэтому         |                              |
|                         |                              | формируем сильный штат тестировщиков. Нам важно, чтобы       |                              |
|                         |                              | ребята были готовы расти в своих знаниях и на проектах.      |                              |
|                         |                              | Бывает, что мы берем в штат людей с совсем небольшим опытом, |                              |
|                         |                              | потому что видим, что они обладают складом ума к solving     |                              |
|                         |                              | problems, и что есть стремление развиваться в тестировании и |                              |
|                         |                              | желание расти. Даете ли вы тестовое задание кандидатам? Как  |                              |
|                         |                              | оно устроено? Да, это первый этап, чтобы попасть к нам в     |                              |
|                         |                              | команду. У нас есть тестовое задание для мануальных          |                              |
|                         |                              | тестировщиков и для автотестировщиков. Оно несложное. Для    |                              |
|                         |                              | мануальных тестировщиков нужно найти и описать баги, а для   |                              |
|                         |                              | автотестировщиков — написать автотесты. Так мы смотрим на    |                              |
|                         |                              | уровень знаний тестировщика, на его внимательность, ход      |                              |
|                         |                              | мыслей и грамотность. Как отличается подход к найму в        |                              |
|                         |                              | зависимости от позиции и стека? В целом никак не отличается. |                              |
|                         |                              | Мы подбираем людей в команду для определенного проекта (в    |                              |
|                         |                              | дальнейшем тестировщик, конечно, может попробовать себя в    |                              |
|                         |                              | другом проекте и задачах), смотрим на его навыки, на его     |                              |
|                         |                              | soft skills, насколько быстро он сможет адаптироваться в     |                              |
|                         |                              | команде и какие задачи сможет на себя взять.  Какая фраза от |                              |
|                         |                              | кандидата на собеседовании точно заставит вас выкинуть его   |                              |
|                         |                              | резюме? Если человек скажет, что пришел «потому что          |                              |
|                         |                              | тестирование — это легкий вход в IT» или «потому что слышал, |                              |
|                         |                              | что в IT много платят». Такие вещи больно слышать на         |                              |
|                         |                              | собеседовании — мы приглашаем в команду людей, которым в     |                              |
|                         |                              | первую очередь интересно тестирование, есть задор расти и    |                              |
|                         |                              | развиваться на проектах федерального масштаба, быть          |                              |
|                         |                              | причастными к продуктам, которыми пользуются миллионы. Кого  |                              |
|                         |                              | последнего вы уволили и почему? Последний раз мы уволили     |                              |
|                         |                              | сотрудника, потому что было недовольство со стороны клиентов |                              |
|                         |                              | — некачественное тестирование и невыполненные в срок задачи. |                              |
|                         |                              | Складывалось ощущение, что он не работает полный день.       |                              |
|                         |                              | Конечно, были разговоры, оговаривались причины, требования.  |                              |
|                         |                              | Мы всегда стараемся обсудить проблемы и указать на то, что   |                              |
|                         |                              | нужно улучшить. К сожалению, он не исправился в оговоренный  |                              |
|                         |                              | срок, поэтому нам пришлось попрощаться. Как происходит       |                              |
|                         |                              | онбординг нового сотрудника? Мы понимаем, что влиться в      |                              |
|                         |                              | процессы работы на удаленке сложнее, чем в офисе. Поэтому    |                              |
|                         |                              | стараемся сделать адаптацию максимально комфортной и         |                              |
|                         |                              | поэтапной. В первый день новый сотрудник знакомится с        |                              |
|                         |                              | командой и компанией, ему дают все доступы к базе знаний, к  |                              |
|                         |                              | нашей CRM. У нас есть внутренние анкеты для всех сотрудников |                              |
|                         |                              | с фактами о себе, чтобы ребята могли лучше узнать друг друга |                              |
|                         |                              | (анкета заполняется по желанию). Лид курирует новичка на     |                              |
|                         |                              | каждом этапе, начинает погружать в процессы работы и         |                              |
|                         |                              | специфику проекта. Когда сотрудник адаптируется, его         |                              |
|                         |                              | знакомят с клиентом. Через неделю и через месяц мы еще раз   |                              |
|                         |                              | встречаемся с сотрудником, чтобы узнать трудности и радости, |                              |
|                         |                              | жалобы, пожелания, как происходит погружение в проект, в     |                              |
|                         |                              | компанию. А вообще, с новым сотрудником постоянно находятся  |                              |
|                         |                              | на связи и помогают, если вдруг он застопорился на задаче    |                              |
|                         |                              | или не может в чем-то разобраться. У нас очень отзывчивая    |                              |
|                         |                              | команда — это часть нашей культуры. Всегда можно задать      |                              |
|                         |                              | вопрос в общем чате, и ребята обязательно с ним помогут. Не  |                              |
|                         |                              | помню случая, чтобы кто-то задал вопрос, и он остался без    |                              |
|                         |                              | ответа. О команде Какая методология разработки у вас         |                              |
|                         |                              | используется и почему? Так как мы работаем с командами       |                              |
|                         |                              | клиента, мы —  гибкие и адаптируемся под методологии         |                              |
|                         |                              | клиента. Мы не заточены под одну методологию, мы можем       |                              |
|                         |                              | предложить клиенту внести какие-то изменения, поменять       |                              |
|                         |                              | принципы, если считаем, что это поможет качеству. Каковы     |                              |
|                         |                              | размеры и структуры команд? Размеры команд зависят от объема |                              |
|                         |                              | проекта и задач. На каком-то проекте может работать команда  |                              |
|                         |                              | из двух человек, а на каком-то — намного больше. Например,   |                              |
|                         |                              | для одного крупного проекта мы расширяем команду             |                              |
|                         |                              | тестировщиков с 8 до 28 человек. По каким критериям вы       |                              |
|                         |                              | разбиваете разработчиков на джунов, мидлов и сеньоров? У нас |                              |
|                         |                              | в компании  нет грейдирования  — есть тестировщики и лиды.   |                              |
|                         |                              | Мы пришли к тому, что грейды — необъективный показатель      |                              |
|                         |                              | знаний тестировщика. Философия компании: тестировщики не     |                              |
|                         |                              | должны сидеть и ждать, когда наберется стаж. Они должны быть |                              |
|                         |                              | инициативны, учиться, развиваться и брать новые, более       |                              |
|                         |                              | сложные задачи, повышая свой уровень. Если тестировщику      |                              |
|                         |                              | чему-то нужно научиться, чтобы перейти на новый уровень —    |                              |
|                         |                              | для этого в компании есть все возможности: открытое к        |                              |
|                         |                              | общению руководство, обучение, сертификация, разные проекты  |                              |
|                         |                              | и задачи. При этом мы понимаем, что такой подход             |                              |
|                         |                              | нестандартный, поэтому в начале года я созваниваюсь со всеми |                              |
|                         |                              | ребятами, и мы обсуждаем планы и то, к чему они хотят прийти |                              |
|                         |                              | за этот год. Кроме этого, сейчас мы разрабатываем внутренний |                              |
|                         |                              | регламент, это будет такой гид по росту тестировщика в       |                              |
|                         |                              | компании. Как часто люди меняют команды? Мы стараемся        |                              |
|                         |                              | периодически делать перестановку в командах. Каждый случай   |                              |
|                         |                              | разбирается индивидуально. Тестировщик может работать год и  |                              |
|                         |                              | более на одном проекте, если ему все нравится. Бывает        |                              |
|                         |                              | необходимость в экспертизе человека на другом проекте, и     |                              |
|                         |                              | тогда мы делаем перестановки. Тестировщик может сам захотеть |                              |
|                         |                              | сменить специализацию и попробовать что-то новое, и тогда мы |                              |
|                         |                              | будем переставлять его на другой проект или давать другие    |                              |
|                         |                              | задачи. Все зависит от проекта и желания тестировщика. Мы    |                              |
|                         |                              | максимально стараемся сделать так, чтобы ребятам было        |                              |
|                         |                              | интересно работать. Если по каким-то причинам мы не          |                              |
|                         |                              | заметили, что человек устал или не услышали его —  он может  |                              |
|                         |                              | выйти на разговор с лидом или со мной. В этом плане мы       |                              |
|                         |                              | открыты. Мы отказываем только в том случае, если это новый   |                              |
|                         |                              | сотрудник, который работает на проекте меньше трех месяцев.  |                              |
|                         |                              | Три месяца — это срок, когда тестировщик погружается в       |                              |
|                         |                              | проект. Если уже на этой стадии ему становится скучно —      |                              |
|                         |                              | тогда возникает вопрос, интересно ли ему вообще              |                              |
|                         |                              | тестирование. Что важнее, софт-скиллы или хард-скиллы? Одно  |                              |
|                         |                              | также важно как и другое. Мы смотрим не только на базу       |                              |
|                         |                              | тестировщика, а чтобы он мог влиться в команду, обладал      |                              |
|                         |                              | критическим и логическим мышлением, был любопытен. Он должен |                              |
|                         |                              | уметь доказать и отстоять свою точку зрения —  в             |                              |
|                         |                              | тестировании это важно. Мы считаем, что тестировщики это     |                              |
|                         |                              | одни их ключевых сотрудников на проекте, которые влияют на   |                              |
|                         |                              | качество продукта со всех сторон (не только с                |                              |
|                         |                              | функциональной), умеют доносить свою точку зрения до         |                              |
|                         |                              | разработки, вносят предложения по улучшению продукта, а не   |                              |
|                         |                              | просто заводят баги.  Как много собраний у вас проводится?   |                              |
|                         |                              | Есть ли особые подходы к ним? Раньше, когда в команде было   |                              |
|                         |                              | 20 человек, каждое утро мы устраивали общие созвоны по       |                              |
|                         |                              | задачам. Сейчас же нас — 40 человек, поэтому мы разделили    |                              |
|                         |                              | ребят по группам (по проектам) и созваниваемся по очереди с  |                              |
|                         |                              | каждой группой —  обсуждаем планы и вопросы. У нас остались  |                              |
|                         |                              | общие созвоны, которые проходят каждую пятницу, или когда    |                              |
|                         |                              | нужно сделать объявление. Политика компании — открытость. У  |                              |
|                         |                              | нас нет бюрократии и руководство открыто к разговорам и      |                              |
|                         |                              | предложениям. С вопросом всегда можно написать мне в личку   |                              |
|                         |                              | или созвониться. Помимо митингов мы начали проводить общие   |                              |
|                         |                              | собрания раз в несколько недель. Это специальные собрания,   |                              |
|                         |                              | на которых мы обсуждаем работу в компании. На нем можно      |                              |
|                         |                              | выйти с любым вопросом, внести предложения. У нас также есть |                              |
|                         |                              | общие чаты —  рабочий и с мемчиками для общения. Помимо      |                              |
|                         |                              | этого, у каждого сотрудника есть свои индивидуальные созвоны |                              |
|                         |                              | с командой проекта и чаты.  Как вы боретесь с выгоранием     |                              |
|                         |                              | сотрудников? Наш опыт показал, что выгорание сотрудников     |                              |
|                         |                              | нельзя допускать. Выгореть на удаленке — можно быстро.       |                              |
|                         |                              | Однако выйти из этого состояния очень сложно. Очень часто    |                              |
|                         |                              | люди просто теряют интерес и уходят.  Поэтому мы строго      |                              |
|                         |                              | контролируем, чтобы ребята обязательно ходили на обед и не   |                              |
|                         |                              | общались в рабочих чатах в нерабочее время. Иногда доходит   |                              |
|                         |                              | до того, что я созваниваюсь с теми, кто работает в нерабочее |                              |
|                         |                              | время, чтобы напомнить, что нужно отдыхать или сделать       |                              |
|                         |                              | перерыв.  О технологиях Какие языки, фреймворки и библиотеки |                              |
|                         |                              | используются на проекте? Так как у нас своя специфика, тут   |                              |
|                         |                              | можем больше рассказать про технику. Мы тестируем только на  |                              |
|                         |                              | реальных мобильных устройствах и в браузерах, которые        |                              |
|                         |                              | используют пользователи. Для этого мы собрали свою мобильную |                              |
|                         |                              | ферму и постоянно пополняем ее. Если тестировщику для        |                              |
|                         |                              | проекта необходимо устройство — мы его покупаем. Стараемся   |                              |
|                         |                              | придумывать небольшие, но полезные  вещи, чтобы закрывать    |                              |
|                         |                              | определенные боли. Например, у нас есть чат-бот для сбора ТЗ |                              |
|                         |                              | от нового клиента. Бот собирает всю информацию на оценку и   |                              |
|                         |                              | отправляет в нашу CRM, а задача автоматический уходит к      |                              |
|                         |                              | лиду. А ещё есть специальный бот для отправки скринов. Как   |                              |
|                         |                              | тестируется код? Мы проводим как ручное тестирование, так и  |                              |
|                         |                              | автотестирование. А также выполняем все виды тестирования:   |                              |
|                         |                              | функциональное, нагрузочное, юзабилити и т. д. Как устроен   |                              |
|                         |                              | процесс документации и ведения базы знаний на проектах? У    |                              |
|                         |                              | нас есть своя CRM, в которой выставляются задачи по          |                              |
|                         |                              | командам, какие-то внутренние проекты хранятся в гугл доке — |                              |
|                         |                              | это удобный формат для удаленной работы, где каждый в своей  |                              |
|                         |                              | команде может посмотреть, как движется процесс. На проектах  |                              |
|                         |                              | ребята работают в программах клиента, например, в Jira,      |                              |
|                         |                              | Битрикс24, Яндекс.Трекер и т. д. Оценивайте своих            |                              |
|                         |                              | работодателей на Хабр Карьере, а если понравилась компания   |                              |
|                         |                              | «Кавычки» и хочется узнать о ней еще что-то — задавайте      |                              |
|                         |                              | вопросы в комментариях, а мы позовем кого-нибудь из ребят    |                              |
|                         |                              | отвечать. →  оценить работодателя                            |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Визуализируйте многопоточные | Специально к старту нового потока  курса Fullstack-          |         skillfactory         |
| pany/skillfactory/blog/ |   программы Python с open    | разработчик на Python , представляем небольшой авторский     |            python            |
|         545530/         |    source инструментом –     | обзор кроссплатформенного инструмента визуализации           |       программирование       |
|                         |          VizTracer           | многопоточных программ – VizTracer. У VizTracer 57 форков и  |          opensourse          |
|                         |                              | 841 звезд на Github. Настраиваемые события, отчёты в HTML,   |         open source          |
|                         |                              | детальная информация о функциях с их исходным кодом,         |                              |
|                         |                              | простота применения, отсутствие зависимостей и малый оверхед |                              |
|                         |                              | превращают VizTracer в мастхэв Python-разработчика.          |                              |
|                         |                              | Конкурентность – важная часть современного программирования, |                              |
|                         |                              | когда у нас несколько ядер и много задач, которые должны     |                              |
|                         |                              | кооперироваться. Однако, когда многопоточные программы не    |                              |
|                         |                              | выполняются последовательно, понять их трудно. Инженерам не  |                              |
|                         |                              | так-то просто идентифицировать баги и проблемы               |                              |
|                         |                              | производительности в таких программах, как это делается в    |                              |
|                         |                              | однопоточных программах с одной задачей. В Python вариантов  |                              |
|                         |                              | конкурентности много. Самый распространённый, вероятно, –    |                              |
|                         |                              | многопоточность, которой добиваются с помощью модуля         |                              |
|                         |                              | threading и несколько процессов с помощью модулей            |                              |
|                         |                              | myltiprocessing и subprocess, а также недавно появившийся    |                              |
|                         |                              | способ – async из модуля asyncio. До появления VizTracer в   |                              |
|                         |                              | инструментах, использующих эти техники в целях анализа       |                              |
|                         |                              | программ, был пробел. VizTracer – инструмент отслеживания и  |                              |
|                         |                              | визуализации написанных на Python программ, который помогает |                              |
|                         |                              | логировать, отлаживать и профилировать код. Хотя он хорошо   |                              |
|                         |                              | работает в однопоточных программах с одной задачей, польза   |                              |
|                         |                              | от него в смысле конкурентных программ делает инструмент     |                              |
|                         |                              | уникальным. Попробуем с простой задачей Определим, являются  |                              |
|                         |                              | ли числа в массиве простыми, и вернём массив логических      |                              |
|                         |                              | значений. Вот простое решение: Выполним его нормально, в     |                              |
|                         |                              | один поток, и задействуем VizTracer. Выполняем команду:      |                              |
|                         |                              | Отчёт стека вызовов показывает, что выполнение кода заняло   |                              |
|                         |                              | 140 мс, а большую часть времени заняло выполнение  . Здесь   |                              |
|                         |                              | на каждом элементе массива выполняется функция  . Это        |                              |
|                         |                              | ожидаемо и не интересно, если VizTracer вам знаком. Теперь   |                              |
|                         |                              | попробуем многопоточную программу Сделаем то же самое в      |                              |
|                         |                              | программе с несколькими потоками: Чтобы соответствовать      |                              |
|                         |                              | рабочей нагрузке однопоточной программы, в коде прописан     |                              |
|                         |                              | массив в 2000 элементов на три потока и моделируется         |                              |
|                         |                              | ситуация, когда все эти потоки совместно работают над        |                              |
|                         |                              | задачей. Если вы знакомы с Python Global Lock (GIL), то      |                              |
|                         |                              | можете ожидать, что программа не станет быстрее: из-за       |                              |
|                         |                              | оверхеда она выполняется немного дольше 140 мс, однако можно |                              |
|                         |                              | наблюдать конкурентность множества потоков: Когда работал    |                              |
|                         |                              | один поток (и много раз выполнял функции is_prime), другой   |                              |
|                         |                              | поток был заморожен (одна функция is_prime). Позже они       |                              |
|                         |                              | поменялись. Это произошло из-за GIL, и причина в том, что в  |                              |
|                         |                              | Python нет настоящей многопоточности. Возможна               |                              |
|                         |                              | конкурентность, но не параллелизм. Попробуем поработать с    |                              |
|                         |                              | multiprocessing Чтобы достичь параллелизма, воспользуемся    |                              |
|                         |                              | библиотекой  . Вот новая версия кода с применением этой      |                              |
|                         |                              | библиотеки: Чтобы запустить его с помощью VizTracer,         |                              |
|                         |                              | понадобится дополнительный аргумент: Вся программа занимает  |                              |
|                         |                              | чуть больше 50 мс, задача завершается менее чем за те же 50  |                              |
|                         |                              | мс, то есть программа ускорилась приблизительно втрое. Чтобы |                              |
|                         |                              | сравнить производительность, напишем версию в несколько      |                              |
|                         |                              | процессов: Без GIL множество процессов достигают             |                              |
|                         |                              | параллелизма, то есть множество функций is_prime выполняются |                              |
|                         |                              | параллельно. Однако многопоточность в Python не бесполезна.  |                              |
|                         |                              | Например, для вычислительно-интенсивных программ и программ  |                              |
|                         |                              | с интенсивным вводом-выводом, при помощи sleep можно         |                              |
|                         |                              | имитировать задержку ввода-вывода: Попробуем в однопоточной  |                              |
|                         |                              | программе с одной задачей: . Вся программа занимает 30 мс;   |                              |
|                         |                              | ничего особенного. Теперь воспользуемся многопоточностью:    |                              |
|                         |                              | Выполнение занимает 10 мс: ясно, что все потоки работали     |                              |
|                         |                              | одновременно и повысили производительность. Теперь           |                              |
|                         |                              | поработаем с asyncio В Python попробовали ввести интересную  |                              |
|                         |                              | функциональность – асинхронное программирование. Нашу задачу |                              |
|                         |                              | можно написать асинхронно: Поскольку asyncio – буквально     |                              |
|                         |                              | однопоточный планировщик с задачами, вы можете использовать  |                              |
|                         |                              | VizTracer вместе с  Всё те же 10 мс, но большинство          |                              |
|                         |                              | отображаемых функций – нижележащая структура, которая,       |                              |
|                         |                              | вероятно, не интересует пользователей. Чтобы решить эту      |                              |
|                         |                              | проблему, можно использовать   – флаг разделит задачу на     |                              |
|                         |                              | части: Теперь задачи пользователя намного яснее. Большую     |                              |
|                         |                              | часть времени  выполняемых задач нет: единственное, что      |                              |
|                         |                              | делает программа, – спит. Вот интересная часть: На временной |                              |
|                         |                              | шкале показывается, когда задачи создавались и выполнялись.  |                              |
|                         |                              | Task-1 была сопрограммой  , которая создаёт другие задачи.   |                              |
|                         |                              | Задачи 2, 3 и 4 выполняли   и  , а потом ждали пробуждения.  |                              |
|                         |                              | Как показывает график, задачи не перекрывают друг друга,     |                              |
|                         |                              | поскольку программа однопоточная, и VizTracer визуализировал |                              |
|                         |                              | её так, чтобы она была понятной. Чтобы сделать код           |                              |
|                         |                              | интереснее, добавим вызов  , чтобы заблокировать асинхронный |                              |
|                         |                              | цикл: Программа заняла намного больше времени (40 мс) и      |                              |
|                         |                              | задачи заняли свои места в асинхронном планировщике. Это     |                              |
|                         |                              | поведение очень полезно для диагностики проблем поведения и  |                              |
|                         |                              | производительности в асинхронных программах. Смотрите на     |                              |
|                         |                              | происходящее с помощью VizTracer При помощи VizTracer вы     |                              |
|                         |                              | видите, что происходит с программой, на временной шкале, а   |                              |
|                         |                              | не читаете жалобы из логов. Это помогает лучше понимать вашу |                              |
|                         |                              | конкурентную программу. Исходный код VizTracer открыт под    |                              |
|                         |                              | лицензией Apache 2.0, поддерживаются все операционные        |                              |
|                         |                              | системы – Linux , MacOS, Windows. Вы можете узнать больше о  |                              |
|                         |                              | его функциях и увидеть исходный код в репозитории VizTracer  |                              |
|                         |                              | на  Github . А освоить разработку на Python и стать          |                              |
|                         |                              | Fullstack-разработчиком —  на нашем специализированном курсе |                              |
|                         |                              | . Узнайте , как прокачаться в других специальностях или      |                              |
|                         |                              | освоить их с нуля: Профессия Data Scientist Профессия Data   |                              |
|                         |                              | Analyst Курс по Data Engineering Другие профессии и курсы    |                              |
|                         |                              | ПРОФЕССИИ Профессия Fullstack-разработчик на Python          |                              |
|                         |                              | Профессия Java-разработчик Профессия QA-инженер на JAVA      |                              |
|                         |                              | Профессия Frontend-разработчик Профессия Этичный хакер       |                              |
|                         |                              | Профессия C++ разработчик Профессия Разработчик игр на Unity |                              |
|                         |                              | Профессия Веб-разработчик Профессия iOS-разработчик с нуля   |                              |
|                         |                              | Профессия Android-разработчик с нуля КУРСЫ Курс по Machine   |                              |
|                         |                              | Learning Курс "Machine Learning и Deep Learning" Курс        |                              |
|                         |                              | "Математика для Data Science" Курс "Математика и Machine     |                              |
|                         |                              | Learning для Data Science"  Курс "Python для веб-разработки" |                              |
|                         |                              | Курс "Алгоритмы и структуры данных" Курс по аналитике данных |                              |
|                         |                              | Курс по DevOps                                               |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |      Автоматизированное      | В преддверии старта курса  "Java QA Automation Engineer"     |  автоматизация тестирования  |
|  pany/otus/blog/547082/ |  тестирование баз данных в   | подготовили перевод полезного материала. Также приглашаем    |             java             |
|                         | Java с помощью JdbcTemplate  | поучаствовать в открытом вебинаре на тему  «HTTP. Postman,   |             jdbc             |
|                         |                              | Newman, Fiddler (Charles), curl, SOAP. SoapUI» . На этом     |           postman            |
|                         |                              | занятии участники вместе с экспертом разберут, какие бываю   |            newman            |
|                         |                              | API и каким способом можно проверить, что backend отдает     |           fiddler            |
|                         |                              | ожидаемые данные, а также познакомятся с основными           |           charles            |
|                         |                              | инструментами для тестирования.   Бывает, и достаточно       |             curl             |
|                         |                              | часто, что во время автоматизированного тестирования наши    |             soap             |
|                         |                              | тесты должны взаимодействовать с базами данных. Иногда нам   |                              |
|                         |                              | нужно установить какие-либо тестовые данные. В других        |                              |
|                         |                              | случаях нам нужно совершать запросы в базу данных, чтобы     |                              |
|                         |                              | получить те самые тестовые данные. И давайте не будем        |                              |
|                         |                              | забывать об очистке данных, которые мы использовали и        |                              |
|                         |                              | которые больше нам не нужны. В этой статье я покажу, как вы  |                              |
|                         |                              | можете использовать класс Spring  JdbcTemplate  для          |                              |
|                         |                              | упрощения работы с базой данных MySQL из ваших               |                              |
|                         |                              | автоматизированных тестов на Java. Вам также следует         |                              |
|                         |                              | взглянуть на это замечательное дополнение к  базе данных     |                              |
|                         |                              | MySQL,  созданное сообществом для  библиотеки дополнений     |                              |
|                         |                              | TestProject, позволяющее расширить возможности тестирования  |                              |
|                         |                              | с помощью предварительно созданных автоматизированных        |                              |
|                         |                              | экшенов, которые вы можете мгновенно внедрить в ваши         |                              |
|                         |                              | написанные и закодированные тесты. Требования Прежде чем мы  |                              |
|                         |                              | сможем начать наши взаимодействия с базой данных, нам нужно  |                              |
|                         |                              | кое-что настроить. А именно зависимости, которые нам нужно   |                              |
|                         |                              | добавить в наш проект. В моем случае, поскольку я использую  |                              |
|                         |                              | Maven, зависимости, которые мне нужно добавить в файл  ,     |                              |
|                         |                              | будут выглядеть следующим образом: Первая зависимость,       |                              |
|                         |                              | которую мы здесь видим, — это зависимость из пакета Spring.  |                              |
|                         |                              | Здесь мы можем найти класс  , который мы будем использовать  |                              |
|                         |                              | для коммуникации с базой данных. Этот класс содержит         |                              |
|                         |                              | полезные методы для обновления или получения данных из базы  |                              |
|                         |                              | данных. Вторая зависимость требуется для связи с инстансом   |                              |
|                         |                              | MySQL. Примечание: эти зависимости имеют последнюю доступную |                              |
|                         |                              | на момент написания статьи версию (какую вы можете увидеть в |                              |
|                         |                              | репозитории Maven). Версия mysql-connector-java должна быть  |                              |
|                         |                              | синхронизирована с версией инстанса MySQL, на котором        |                              |
|                         |                              | работает ваша база данных. В моем случае, мой сервер MySQL   |                              |
|                         |                              | имеет версию > 8, поэтому версия моего «mysql-connector-     |                              |
|                         |                              | java» также выше чем 8. Подключение к базе данных После того |                              |
|                         |                              | как мы разобрались с зависимостями, мы можем установить      |                              |
|                         |                              | связь с нашей базой данных. Мы могли бы написать код,        |                              |
|                         |                              | необходимый для этой операции, в нашем тесте. Однако нам     |                              |
|                         |                              | обязательно понадобится этот код и в других тестовых         |                              |
|                         |                              | классах. Следовательно, этот код может быть написан либо в   |                              |
|                         |                              | специальном классе для работы с базой данных, либо в базовом |                              |
|                         |                              | классе, расширяемом вашими тестами. Независимо от того,      |                              |
|                         |                              | какой вариант вы выберете, соединение может быть установлено |                              |
|                         |                              | с помощью подобного метода: Первое, на что нам нужно         |                              |
|                         |                              | обратить внимание, это то, что этот метод возвращает  . Это  |                              |
|                         |                              | необходимо для инициализации класса  , который мы будем      |                              |
|                         |                              | использовать в наших тестах, поскольку он хранит соединение  |                              |
|                         |                              | с базой данных. Затем в качестве имени класса драйвера в     |                              |
|                         |                              | этом примере я использовал значение « ». Опять же это        |                              |
|                         |                              | требуется для установки соединения, и в некоторых случаях в  |                              |
|                         |                              | более старых версиях зависимостей коннектора MySQL вместо    |                              |
|                         |                              | него следует использовать « ». Если вы используете           |                              |
|                         |                              | неправильное имя, вы получите соответствующее предупреждение |                              |
|                         |                              | при попытке подключения к базе данных. Вам нужно будет       |                              |
|                         |                              | указать расположение базы данных в методе  . Он состоит из   |                              |
|                         |                              | URL-адреса, порта и имени базы данных. И, конечно же, вам    |                              |
|                         |                              | необходимо указать имя пользователя и пароль для подключения |                              |
|                         |                              | к базе данных, с помощью методов   и  . Теперь, когда        |                              |
|                         |                              | соединение установлено, нам нужно инициализировать класс  .  |                              |
|                         |                              | Мы можем объявить переменную этого типа в нашем тестовом     |                              |
|                         |                              | классе: Затем в методе   мы можем инициализировать эту       |                              |
|                         |                              | переменную, предоставив соединение, которое мы установили с  |                              |
|                         |                              | базой данных: На этом настройка завершена, соединение        |                              |
|                         |                              | установлено, и мы можем начать обновление (updating) или     |                              |
|                         |                              | запрашивание (querying) базы данных. Update В классе   мы    |                              |
|                         |                              | можем найти много полезных методов. Один из них, ‘update’,   |                              |
|                         |                              | может быть использован для создания и обновления таблиц,     |                              |
|                         |                              | добавления в них данных или даже удаления данных. Существует |                              |
|                         |                              | несколько вариантов этого метода (с разными сигнатурами), но |                              |
|                         |                              | тот, который я приведу здесь в качестве примера, принимает   |                              |
|                         |                              | один параметр: SQL-запрос в виде String. Пример Создадим две |                              |
|                         |                              | новые таблицы: одну с именем ‘meal’ (блюдо) и ‘ingredient’   |                              |
|                         |                              | (ингредиент). В таблице ‘meal’ мы хотим хранить название     |                              |
|                         |                              | блюда, присвоенную ему категорию (представляющую, будь то    |                              |
|                         |                              | завтрак, обед или ужин) и автоматически сгенерированный   в  |                              |
|                         |                              | качестве первичного ключа (primary key). Для создания        |                              |
|                         |                              | таблицы напишем в тестовом методе следующий код: Когда мы    |                              |
|                         |                              | запустим тест, таблица будет создана. Для создания таблицы   |                              |
|                         |                              | больше ничего не требуется. Допустим, мы также хотим         |                              |
|                         |                              | добавить к этому столу два блюда: фахитас из курицы и        |                              |
|                         |                              | энчилада. Сделать это легко — просто передадим требуемый     |                              |
|                         |                              | SQL-запрос в метод   следующим образом: Как видите, у нас по |                              |
|                         |                              | одному вызову метода   на одну SQL-операцию. Теперь давайте  |                              |
|                         |                              | создадим таблицу под названием  . У нее не будет             |                              |
|                         |                              | автоматически сгенерированного первичного ключа. Однако у    |                              |
|                         |                              | нее будет внешний ключ (foreign key), соответствующий        |                              |
|                         |                              | значению   из таблицы  . Каждая запись в этой таблице        |                              |
|                         |                              | представляет собой ингредиент, соответствующий блюду из      |                              |
|                         |                              | таблицы  . Этот внешний ключ свяжет ингредиент с блюдом.     |                              |
|                         |                              | Кроме того, в таблице   есть столбцы для хранения названия   |                              |
|                         |                              | ингредиента ( ), количества ( ) и единицы измерения ( ) для  |                              |
|                         |                              | количества ингредиента. Для того чтобы создать эту таблицу,  |                              |
|                         |                              | а затем добавить к ней внешний ключ, мы снова будем          |                              |
|                         |                              | использовать метод  , которому мы передадим соответствующий  |                              |
|                         |                              | SQL-запрос: Чтобы иметь больше данных для наших следующих    |                              |
|                         |                              | примеров, я также добавлю некоторые данные в таблицу  :      |                              |
|                         |                              | Отлично, у нас есть 2 таблицы с данными, которые мы можем    |                              |
|                         |                              | запрашивать. Теперь же мы будем использовать разные методы   |                              |
|                         |                              | из класса   для получения результатов разных типов.          |                              |
|                         |                              | queryForObject — получить одно значение Если нам нужно       |                              |
|                         |                              | запросить из базы данных одно значение, мы можем             |                              |
|                         |                              | использовать метод  . У этого метода также есть несколько    |                              |
|                         |                              | вариантов использования, но здесь мы рассмотрим наиболее     |                              |
|                         |                              | простой: При вызове этого метода нам нужно указать, какой    |                              |
|                         |                              | тип возвращаемого значения должен иметь запрос ( ). Мы могли |                              |
|                         |                              | бы, например, получить значение   (указав  ) или целое число |                              |
|                         |                              | (указав  ). Пример Нам нужно запросить базу данных, чтобы    |                              |
|                         |                              | получить значение   из таблицы   для блюда ‘Chicken Fajita’. |                              |
|                         |                              | Нам нужно сохранить этот результат в переменной с типом  :   |                              |
|                         |                              | Здесь вы можете видеть, что тип возвращаемого значения       |                              |
|                         |                              | запроса указан как  , поэтому результат сохраняется в        |                              |
|                         |                              | переменной с типом  . Допустим, в тесте мы также хотим       |                              |
|                         |                              | вывести в консоль результат этого запроса: Результатом этого |                              |
|                         |                              | вывода будет: queryForMap — получить строку Теперь           |                              |
|                         |                              | предположим, что вы хотите получить целую строку из таблицы. |                              |
|                         |                              | Или части строки. Вы можете сделать это с помощью метода  ,  |                              |
|                         |                              | которому вы передаете необходимый SQL-запрос: Результат      |                              |
|                         |                              | этого запроса можно сохранить в переменной типа  . Ключи     |                              |
|                         |                              | будут соответствовать имени каждого столбца, которому        |                              |
|                         |                              | принадлежит элемент строки. Значение будет соответствовать   |                              |
|                         |                              | фактическому значению из строки, соответствующей этому       |                              |
|                         |                              | столбцу. Пример Мы хотим извлечь все данные о блюде с id     |                              |
|                         |                              | из таблицы ‘meal’, сохранить их в переменной и вывести       |                              |
|                         |                              | результат в консоль. Это легко можно сделать следующим       |                              |
|                         |                              | образом: Как видите, переменная   представляет  , ключи      |                              |
|                         |                              | которой —  , а значения —  . Это происходит потому, что      |                              |
|                         |                              | некоторые значения являются целыми числами, некоторые —      |                              |
|                         |                              | строками и, конечно же, все эти типы являются объектами в    |                              |
|                         |                              | Java. Вывод в консоль для приведенного выше кода:            |                              |
|                         |                              | queryForList — получить столбец Когда вам нужно получить     |                              |
|                         |                              | либо все значения, либо часть значений из конкретного        |                              |
|                         |                              | столбца, вы можете использовать метод  . В этом варианте     |                              |
|                         |                              | использования я покажу на примере, что для результирующих    |                              |
|                         |                              | элементов требуется SQL-запрос и тип возвращаемого значения. |                              |
|                         |                              | Речь идет о типе элементов, которые вы будете сохранять в    |                              |
|                         |                              | список (List) Java. Например, если все элементы, которые вы  |                              |
|                         |                              | извлекаете с помощью этого запроса, являются целыми числами, |                              |
|                         |                              | типом возврата будет  . Основной пример использования метода |                              |
|                         |                              | выглядит так: Пример Мы хотим сохранить в список Java все    |                              |
|                         |                              | названия ингредиентов, которые есть в таблице ‘ingredient’.  |                              |
|                         |                              | Мы также хотим вывести эти значения в консоль. Этого можно   |                              |
|                         |                              | добиться следующим образом: Поскольку все названия           |                              |
|                         |                              | ингредиентов имеют тип  , тип возвращаемого значения для     |                              |
|                         |                              | метода   —  . Вот что будет выведено на консоль:             |                              |
|                         |                              | queryForList — получение списка строк Другой вариант         |                              |
|                         |                              | использования метода   — получение сразу нескольких строк. В |                              |
|                         |                              | этом случае единственный параметр, требуемый при вызове      |                              |
|                         |                              | этого метода, — это SQL-запрос, который собирает данные.     |                              |
|                         |                              | Типом возврата будет список элементов типа  , где каждая     |                              |
|                         |                              | будет иметь ключ с типом   и соответствующее значение с      |                              |
|                         |                              | типом  . Этот метод выглядит так: Пример Выберите все        |                              |
|                         |                              | значения из таблицы ‘meal’, сохраните и выведите их в        |                              |
|                         |                              | консоль. Вывод здесь представляет собой список элементов     |                              |
|                         |                              | типа  : Передача параметров запросам В некоторых случаях     |                              |
|                         |                              | SQL-запросы нуждаются в передаче параметра для замены        |                              |
|                         |                              | захардкоженного значения из запроса. Например, вы можете     |                              |
|                         |                              | захотеть выполнить тот же запрос для поиска строки в базе    |                              |
|                         |                              | данных на основе ее  . Но вам может потребоваться передать   |                              |
|                         |                              | в тест через  . Следовательно, при каждом запуске метода для |                              |
|                         |                              | выполнения запроса у вас будет другое значение  . В этом     |                              |
|                         |                              | случае для любого запроса, который вы хотите выполнить,      |                              |
|                         |                              | вместо указания явного значения вы проставляете символ  .    |                              |
|                         |                              | Это нужно сделать внутри SQL-запроса. В тестовом методе нам  |                              |
|                         |                              | нужно выяснить, сколько строк существует в таблице   с       |                              |
|                         |                              | именем, которое предоставляется в виде параметра. Результат  |                              |
|                         |                              | этого запроса будет сохранен в переменной типа   и будет     |                              |
|                         |                              | выведен в консоль. Этого можно добиться следующим образом:   |                              |
|                         |                              | Второй параметр, переданный методу  , — это тип              |                              |
|                         |                              | возвращаемого значения для запроса, а третий параметр — это  |                              |
|                         |                              | имя параметра, который будет отправлен в запрос из  .        |                              |
|                         |                              | Например, если значение параметра   будет ‘chicken’, вывод в |                              |
|                         |                              | консоль будет следующим: Извлечение данных в объект Java     |                              |
|                         |                              | Помните мою статью об  использовании объектов Java для       |                              |
|                         |                              | моделирования данных, извлеченных из БД ? Вы можете легко    |                              |
|                         |                              | использовать   для запроса базы данных и извлечения          |                              |
|                         |                              | результата непосредственно в объект (Object). Все, что вам   |                              |
|                         |                              | нужно для выполнения этой задачи, — это объект Java для      |                              |
|                         |                              | моделирования данных; класс преобразователя строк ( ),       |                              |
|                         |                              | который сопоставляет столбец из базы данных со свойствами    |                              |
|                         |                              | объекта; запрос, который извлекает данные в объект с помощью |                              |
|                         |                              | преобразователя строк. Пример Допустим, нам нужно            |                              |
|                         |                              | смоделировать данные, соответствующие ингредиенту, название  |                              |
|                         |                              | которого содержит текст  ‘yellow’, в объект ингредиента ( ). |                              |
|                         |                              | Это означает, что мы хотим, чтобы объект имел те же          |                              |
|                         |                              | свойства, что и ингредиент в таблице. Мы хотим сопоставить   |                              |
|                         |                              | каждый столбец со свойством. Поэтому мы создадим объект Java |                              |
|                         |                              | под названием Ingredient. Его свойства будут следующими:     |                              |
|                         |                              | Рекомендуется синхронизировать имена свойств с именами       |                              |
|                         |                              | столбцов базы данных. Таким образом, вы можете легко         |                              |
|                         |                              | идентифицировать каждое свойство. Поскольку это объект, нам  |                              |
|                         |                              | потребуется создать методы  ,   и  . Пока я пропущу эту      |                              |
|                         |                              | часть. Вместо этого я покажу кое-что еще, что вам            |                              |
|                         |                              | понадобиться, а именно сеттеры для каждого свойства. Вы      |                              |
|                         |                              | можете легко автоматически сгенерировать их в IntelliJ,      |                              |
|                         |                              | используя в редакторе сочетание клавиш Alt+Insert. Они будут |                              |
|                         |                              | выглядеть следующим образом: Вы будете использовать их для   |                              |
|                         |                              | отображения данных БД в свойства объекта. И это произойдет   |                              |
|                         |                              | внутри класса преобразователя строк, который мы создадим     |                              |
|                         |                              | следующим. Тело этого класса выглядит следующим образом: Как |                              |
|                         |                              | видите, этот класс должен реализовать интерфейс под          |                              |
|                         |                              | названием  . Из-за этого нам потребуется реализовать метод   |                              |
|                         |                              | . И внутри этого метода вы будете сопоставлять каждое        |                              |
|                         |                              | свойство объекта со столбцом базы данных, используя сеттеры. |                              |
|                         |                              | Так, например, для свойства   метод   установит значение,    |                              |
|                         |                              | извлеченное из строки, имя соответствующего столбца которой  |                              |
|                         |                              | тоже  . Создав класс  , мы можем выполнить поставленную      |                              |
|                         |                              | задачу, используя   для извлечения данных, соответствующих   |                              |
|                         |                              | желтому (‘yellow’) ингредиенту: Результат этого запроса      |                              |
|                         |                              | будет отображаться как объект с соответствующими свойствами: |                              |
|                         |                              | Заключение Мы рассмотрели несколько способов работы с базами |                              |
|                         |                              | данных из наших  автоматизированных тестов : нужно ли нам    |                              |
|                         |                              | обновлять их или просто извлекать данные — в классе   есть   |                              |
|                         |                              | множество методов, которые могут нам помочь с этим. Вы       |                              |
|                         |                              | можете выбрать, какой из них использовать, в зависимости от  |                              |
|                         |                              | того, что должен возвращать ваш SQL-запрос. Узнать подробнее |                              |
|                         |                              | о курсе  "Java QA Automation Engineer" . Смотреть открытый   |                              |
|                         |                              | вебинар на тему  «HTTP. Postman, Newman, Fiddler (Charles),  |                              |
|                         |                              | curl, SOAP. SoapUI» .                                        |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |     Сочиняя ПО: Введение     | Эта статья - часть серии статей "Сочиняя ПО"  про            |          javascript          |
|        t/547104/        |                              | функциональное программирование и различные техники создания |    functional programming    |
|                         |                              | программ на JavaScript ES6+, начиная с азов. Оставайтесь на  |                              |
|                         |                              | связи, много нового впереди! Композиция: "Действие,          |                              |
|                         |                              | заключающееся в составлении единого целого из частей или     |                              |
|                         |                              | элементов."   В первом уроке программирования в старших      |                              |
|                         |                              | классах в школе мне сказали, что разработка ПО это           |                              |
|                         |                              | "разбиение сложных задач на составляющие их части, а затем   |                              |
|                         |                              | объединение простых решений в сложные для решения исходной   |                              |
|                         |                              | задачи".   Я больше всего в своей жизни сожалею о том, что   |                              |
|                         |                              | не понял всей важности этого урока в самом начале. Суть      |                              |
|                         |                              | разработки ПО стала мне понятна слишком поздно.   Я провел   |                              |
|                         |                              | сотни интервью с программистами, и это принесло мне          |                              |
|                         |                              | понимание того, что я не одинок. Очень мало кто из           |                              |
|                         |                              | программистов действительно ухватил суть процесса разработки |                              |
|                         |                              | ПО. Они не в курсе наиболее важных средств, находящихся в    |                              |
|                         |                              | нашем распоряжении, ну или просто не знают как их            |                              |
|                         |                              | использовать правильно. Абсолютно все имели сложности с      |                              |
|                         |                              | ответом на один или оба вопроса о наиболее важных вещах в    |                              |
|                         |                              | разработке:   Что такое функциональная композиция            |                              |
|                         |                              | (композиция функций)? Что такое объектная композиция         |                              |
|                         |                              | (композиция объектов)? Проблема в том, что вы не избежите    |                              |
|                         |                              | композиции просто потому, что вы о ней не знаете. Вы все     |                              |
|                         |                              | равно будете это делать - и делать плохо. Вы будете писать   |                              |
|                         |                              | код с огромным количеством ошибок, который, к тому же, будет |                              |
|                         |                              | сложно понять другим. Это очень серьезная проблема.          |                              |
|                         |                              | Последствия весьма дороги. Мы тратим больше времени на       |                              |
|                         |                              | поддержку существующих решений, чем на создание чего-то      |                              |
|                         |                              | нового, и наши ошибки влияют на миллиарды людей во всему     |                              |
|                         |                              | миру.   Весь мир сегодня зависит от программ. Каждый новый   |                              |
|                         |                              | автомобиль - это мини суперкомпьютер на колесах, и ошибки в  |                              |
|                         |                              | программном обеспечении могут привести к реальным авариям и  |                              |
|                         |                              | стоить жизни реальным людям. В 2013 юристы признали команду  |                              |
|                         |                              | разработки компании Toyota  виновной в "безрассудном         |                              |
|                         |                              | пренебрежении"  после того, как расследование аварии выявило |                              |
|                         |                              | т.н. "спагетти-код" с примерно 10000 глобальных переменных.  |                              |
|                         |                              | Хакеры и правительства, используя собранные заранее          |                              |
|                         |                              | уязвимости , шпионят за людьми, крадут данные кредитных      |                              |
|                         |                              | карт, используют вычислительные ресурсы для DDoS атак,       |                              |
|                         |                              | взламывания паролей и даже для  манипулирования выборами .   |                              |
|                         |                              | Мы обязаны делать свою работу лучше.   Вы используете        |                              |
|                         |                              | композицию каждый день Если вы программист, то вы            |                              |
|                         |                              | используете композицию функций и структур данных каждый      |                              |
|                         |                              | день, знаете ли вы об этом или нет. Вы можете делать это     |                              |
|                         |                              | осознанно (и, соответственно, лучше), или неосознанно,       |                              |
|                         |                              | уподобляясь тем, кто все чинит при помощи суперклея и        |                              |
|                         |                              | скотча.   Процесс разработки заключается в декомпозиции      |                              |
|                         |                              | задачи на составляющие части, разработке компонентов для     |                              |
|                         |                              | решения этих составных частей, сборке компонентов в единое   |                              |
|                         |                              | приложение.   Композиция функций Функциональная композиция   |                              |
|                         |                              | это процесс применения функции к результату вызова другой    |                              |
|                         |                              | функции. В алгебре это выглядит так: пусть даны две функции  |                              |
|                         |                              | и  , тогда их композиция это  . Символ   - это оператор      |                              |
|                         |                              | композиции. Вы всегда можете сказать, что "композиция        |                              |
|                         |                              | функций   и   равна   от   от  ". Можно также сказать, что   |                              |
|                         |                              | это внешняя функция, а   внутренняя, потому что              |                              |
|                         |                              | применяется к результату функции  .   Каждый раз, когда вы   |                              |
|                         |                              | пишете код подобный следующему, вы используете композицию    |                              |
|                         |                              | функций:   Каждый раз, когда вы используете цепочку  , вы    |                              |
|                         |                              | используете композицию функций:   Более того, каждый раз,    |                              |
|                         |                              | когда вы комбинируете в цепочку вызовы методов обработки     |                              |
|                         |                              | массивов ( ,  , etc), методов  , или   из  , вы используете  |                              |
|                         |                              | композицию функций. Создаете цепочки вызовов - значит        |                              |
|                         |                              | используете композицию. Если результат вызова функции        |                              |
|                         |                              | передается в другую функцию - это композиция. Если вы        |                              |
|                         |                              | создаете цепочку вызовов из двух методов - вы комбинируете   |                              |
|                         |                              | их используя   в качестве входящих данных.   Когда вы        |                              |
|                         |                              | используете композицию намеренно - вы делаете это лучше.     |                              |
|                         |                              | Используя композицию функций намеренно мы можем улучшить наш |                              |
|                         |                              | и превратить его в простую функцию из одной строки:   Для    |                              |
|                         |                              | начала, давайте создадим абстракцию для логгирования "after  |                              |
|                         |                              | g" и сделаем небольшую функцию  :   Теперь мы можем          |                              |
|                         |                              | переписать наш код:   Некоторые популярные библиотеки для    |                              |
|                         |                              | функционального программирования наподобие Lodash и Ramda    |                              |
|                         |                              | имеют в своем составе функции, позволяющие сделать           |                              |
|                         |                              | композицию проще. Вы можете переписать код выше вот так:     |                              |
|                         |                              | Если вы желаете попробовать сделать тоже самое но без        |                              |
|                         |                              | импорта библиотеки, то создайте функцию   вот так:   Не      |                              |
|                         |                              | переживайте, если вы пока не совсем понимаете, как это       |                              |
|                         |                              | работает. Позже мы исследуем функциональную композицию       |                              |
|                         |                              | детальнее. На самом деле, композиция настолько важна, что вы |                              |
|                         |                              | увидите подобные определения и их демонстрацию много раз в   |                              |
|                         |                              | этом тексте. Смысл в том, чтобы помочь вам настолько близко  |                              |
|                         |                              | познакомиться с идеей, чтобы ее определение и использование  |                              |
|                         |                              | стало автоматическим. Будьте единым целым с композицией.     |                              |
|                         |                              | создает цепочку вызовов, пайплайн если хотите, передавая     |                              |
|                         |                              | вывод одной функции на вход другой. Когда вы используете     |                              |
|                         |                              | (и ее близнеца  ) вам не нужны промежуточные переменные для  |                              |
|                         |                              | хранения результата вызова. Создание функций без описания    |                              |
|                         |                              | (идентификации) их аргументов называется молчаливым          |                              |
|                         |                              | программированием. Чтобы провернуть такой фокус, вы должны   |                              |
|                         |                              | вызвать функцию, которая возвращает новую функцию, вместо    |                              |
|                         |                              | того, чтобы описывать функцию явно. Это означает, что вам не |                              |
|                         |                              | нужно использовать   или   для создания функции (как в       |                              |
|                         |                              | примере выше сделано для функции doStuffBetter).             |                              |
|                         |                              | Молчаливое программирование может завести вас очень далеко,  |                              |
|                         |                              | но даже просто использование этого приема там и сям уже      |                              |
|                         |                              | хорошо, потому что все эти промежуточные переменные          |                              |
|                         |                              | добавляют сложности в ваш код.   Уменьшение сложности дает   |                              |
|                         |                              | некоторые преимущества:   Использование памяти . Мозг        |                              |
|                         |                              | человека может держать в памяти одновременно ограниченное    |                              |
|                         |                              | количество элементов, и каждая переменная потенциально       |                              |
|                         |                              | занимает один такой элемент. Чем больше переменных в коде,   |                              |
|                         |                              | тем сложнее вспомнить, для чего именно используется та или   |                              |
|                         |                              | иная переменная. Обычно мы можем держать в уме от 4 до 7     |                              |
|                         |                              | различных элементов одновременно. Если количество элементов  |                              |
|                         |                              | превышает число 7, то количество ошибок значительно          |                              |
|                         |                              | возрастает. Используя пайплайн, мы избавились от 3-х         |                              |
|                         |                              | переменных, а значит освободили как минимум половину места в |                              |
|                         |                              | нашей голове для других вещей. Это значительно уменьшает     |                              |
|                         |                              | умственную нагрузку. Конечно, программисты могут держать в   |                              |
|                         |                              | уме значительно больше, чем обычные люди, но, все же, не     |                              |
|                         |                              | настолько больше, чтобы игнорировать важность этого момента. |                              |
|                         |                              | Соотношение сигнал-шум . Краткий код улучшает такой параметр |                              |
|                         |                              | вашего кода, как "соотношение сигнал-шум". Это похоже на     |                              |
|                         |                              | радио, когда неточно настроенное радио выдает много шума и   |                              |
|                         |                              | это мешает слушать музыку. Стоит настроить станцию получше,  |                              |
|                         |                              | как шум пропадает и сигнал с музыкой становится сильнее. Так |                              |
|                         |                              | вот с кодом то же самое. Чем короче код, тем лучше           |                              |
|                         |                              | понимание, что он делает. Какой-то код дает нам полезную     |                              |
|                         |                              | информацию, а какой-то просто занимает место. Если есть      |                              |
|                         |                              | возможность уменьшить количество кода без изменения смысла,  |                              |
|                         |                              | то это делает код проще для понимания теми, кто его читает.  |                              |
|                         |                              | Пространство для ошибок . Сравните код до и после изменений. |                              |
|                         |                              | Такое впечатление, что наша функция села на диету и похудела |                              |
|                         |                              | на тонну. Это важно, потому, что чем больше кода, тем больше |                              |
|                         |                              | места для ошибок.   Композиция объектов "Используйте         |                              |
|                         |                              | композицию объектов вместо наследования классов" - Банда     |                              |
|                         |                              | Четырех, "Приёмы объектно-ориентированного проектирования.   |                              |
|                         |                              | Паттерны проектирования"   "В информатике составной тип      |                              |
|                         |                              | данных - это любой тип данных, который может быть            |                              |
|                         |                              | сконструирован с использованием примитивных типов данных     |                              |
|                         |                              | языка программирования и других составных типов. […] Процесс |                              |
|                         |                              | создания составного типа данных называется композицией." -   |                              |
|                         |                              | Wikipedia    Это представители примитивных типов:   А вот    |                              |
|                         |                              | это составной тип:   Таким образом такие структуры как  ,  , |                              |
|                         |                              | ,  ,   и многие другие являются составными. Каждый раз когда |                              |
|                         |                              | вы создаете новую структуру данных, вы используете что-то    |                              |
|                         |                              | вроде композиции объектов. Следует отметить, что "Банда      |                              |
|                         |                              | Четырех" описала шаблон проектирования, называемый           |                              |
|                         |                              | "Компоновщик" (Composite), который является специфическим    |                              |
|                         |                              | типом рекурсивной композиции объектов, позволяющей           |                              |
|                         |                              | использовать отдельные компоненты и их объединения           |                              |
|                         |                              | одинаковым образом. Некоторые разработчики попадают в        |                              |
|                         |                              | ловушку и считают, что шаблон "Компоновщик" это единственный |                              |
|                         |                              | путь использования композиции объектов. Это не так,          |                              |
|                         |                              | существует множество различных типов и способов композиции   |                              |
|                         |                              | объектов.   "Банда Четырех" продолжает: "Вы увидите что      |                              |
|                         |                              | композиция объектов применяется снова и снова в шаблонах     |                              |
|                         |                              | проектирования", а затем сводит все типы композиций к трем   |                              |
|                         |                              | видам отношений, включающих  делегирование  (используется,   |                              |
|                         |                              | например, в шаблонах "Состояние", "Стратегия",               |                              |
|                         |                              | "Посетитель"),  ассоциацию  (когда объект знает про другой   |                              |
|                         |                              | объект по ссылке, обычно передаваемой как параметр, это вид  |                              |
|                         |                              | отношения "использует", как, например, объект-обработчик     |                              |
|                         |                              | использует  логгер для записи в лог запроса) и  агрегацию    |                              |
|                         |                              | (когда дочерние объекты формируют родительский объект,       |                              |
|                         |                              | каждый свою часть, это вид отношения "имеет", как, например, |                              |
|                         |                              | элемент DOM-дерева  имеет  потомков).   Иерархия классов     |                              |
|                         |                              | может быть использована для построения композиции объектов,  |                              |
|                         |                              | но это ограниченный и хрупкий путь. Когда "Банда Четырех"    |                              |
|                         |                              | говорит "предпочтительно использовать композицию классов     |                              |
|                         |                              | вместо иерархии", они советуют использовать гибкий способ    |                              |
|                         |                              | "возведения здания" объекта вместо жесткого, использующего   |                              |
|                         |                              | тесные связи между компонентами, пути построения иерархии    |                              |
|                         |                              | классов.   Мы будем использовать более общее определение     |                              |
|                         |                              | композиции объектов, данное, например, в работе  "Методы     |                              |
|                         |                              | теории категорий в программировании: аспекты топологии"      |                              |
|                         |                              | (1989) :   Составные объекты формируются путем объединения   |                              |
|                         |                              | объектов таким образом, что каждый из последующих является   |                              |
|                         |                              | "частью" предыдущего.   Другой хороший источник это работа   |                              |
|                         |                              | Гленфорда Майерса  "К надежному ПО через композицию" (1975)  |                              |
|                         |                              | . Обе книги давно уже разошлись, но их все еще можно найти   |                              |
|                         |                              | на Amazon или Ebay, если вы желаете погрузиться глубже в     |                              |
|                         |                              | тему составных объектов.   Иерархия классов это просто один  |                              |
|                         |                              | из способов конструирования составных объектов. Объект       |                              |
|                         |                              | любого класса является составным объектом, но не любой       |                              |
|                         |                              | составной объект может быть получен используя классы или     |                              |
|                         |                              | иерархию классов. Фраза "предпочтительно использовать        |                              |
|                         |                              | композицию классов вместо иерархии" означает, что следует    |                              |
|                         |                              | получать композицию из небольших частей компонентов, вместо  |                              |
|                         |                              | того, чтобы наследовать все свойства родителя. Использование |                              |
|                         |                              | наследования приводит к хорошо известным проблемам в         |                              |
|                         |                              | объектно-ориентированном программировании:   Сильная         |                              |
|                         |                              | связанность : так как потомки зависят от реализации          |                              |
|                         |                              | родителя, то иерархия классов приводит к самой сильной       |                              |
|                         |                              | связанности из вообще возможных в ООП Хрупкий базовый класс  |                              |
|                         |                              | : из-за наличия сильной связанности изменения в базовом      |                              |
|                         |                              | классе потенциально могут сломать множество унаследованных   |                              |
|                         |                              | классов, в том числе и в коде сторонних проектов. Автор      |                              |
|                         |                              | базового класса, внося в него изменения, может сломать код о |                              |
|                         |                              | котором он даже не подозревает Негибкая иерархия : иерархия  |                              |
|                         |                              | классов, допускающая только одного предка, с течением        |                              |
|                         |                              | времени и вносимыми изменениями перестает точно              |                              |
|                         |                              | удовлетворять всем вариантам использования Дублирование по   |                              |
|                         |                              | необходимости : в результате использования негибких          |                              |
|                         |                              | иерархий, новые варианты использования часто реализуются     |                              |
|                         |                              | дублированием кода вместо расширения функциональности,       |                              |
|                         |                              | приводя к проблеме различного поведения похожих классов. Как |                              |
|                         |                              | только дублирование появляется в коде, становится сложно     |                              |
|                         |                              | определить от какого класса стоит наследовать новый и        |                              |
|                         |                              | почему. Проблема банана и гориллы : "Проблема объектно-      |                              |
|                         |                              | ориентированных языков программирования в том, что у них     |                              |
|                         |                              | есть неявные зависимости, которые они тянут за собой. Вам    |                              |
|                         |                              | необходим банан, но вместо этого вы получаете гориллу,       |                              |
|                         |                              | держащую банан и все джунгли" - Джо Армстронг,               |                              |
|                         |                              | "Программисты за работой" . Наиболее часто встречающаяся     |                              |
|                         |                              | форма составных объектов в JavaScript известна как           |                              |
|                         |                              | объединение объектов (смешанная композиция). Это работает    |                              |
|                         |                              | так, как будто вы собираете мороженое. Вы начинаете с        |                              |
|                         |                              | объекта (мороженое), а затем добавляете к нему различные     |                              |
|                         |                              | добавки. Добавьте орехи, карамель, шоколадный завиток и вы   |                              |
|                         |                              | получите карамельно-ореховое мороженное с шоколадом.   Вот   |                              |
|                         |                              | так выглядит создание составных объектов с использованием    |                              |
|                         |                              | классов:   А вот так выглядит создание составных объектов с  |                              |
|                         |                              | использованием смешения объектов:   Мы рассмотрим другие     |                              |
|                         |                              | стили композиции объектов в деталях позже. На данный момент, |                              |
|                         |                              | вы должны усвоить, что:  Существует более одного способа     |                              |
|                         |                              | создавать составные объекты Некоторые пути лучше других Вы   |                              |
|                         |                              | выбираете самый простой, наиболее гибкий способ решения      |                              |
|                         |                              | поставленной задачи. Заключение Эта статья не о том, что     |                              |
|                         |                              | лучше, функциональное программирование (ФП) или объектно-    |                              |
|                         |                              | ориентированное программирование (ООП) и не о том, какой     |                              |
|                         |                              | язык программирования лучше. Компоненты могут представлять   |                              |
|                         |                              | собой функции, структуры данных, класс, и т.д. Различные     |                              |
|                         |                              | языки программирования располагают к использованию различных |                              |
|                         |                              | базовых элементов для компонентов. Java предполагает         |                              |
|                         |                              | использование классов, Haskell - функций, и т.д. Неважно,    |                              |
|                         |                              | какой язык и какую парадигму вы предпочитаете, вам не уйти   |                              |
|                         |                              | от функциональной композиции и структур данных. В конце      |                              |
|                         |                              | концов именно к этому все и сводится.   Мы еще много         |                              |
|                         |                              | поговорим о функциональном программировании, потому что      |                              |
|                         |                              | функции это самая простая вещь в JavaScipt для композиции, и |                              |
|                         |                              | функциональное комьюнити инвестировало огромное количество   |                              |
|                         |                              | времени и усилий для формализации различных техник           |                              |
|                         |                              | функциональной композиции.   Что мы не будем говорить, так   |                              |
|                         |                              | это то, что функциональное программирование лучше чем ООП,   |                              |
|                         |                              | или что вы должны выбрать либо одно, либо другое. ООП против |                              |
|                         |                              | ФП - это неправильное сравнение. Практически любое           |                              |
|                         |                              | JavaScript приложение, что я видел за последние годы,        |                              |
|                         |                              | активно использует микс из ФП и ООП.   Мы будем использовать |                              |
|                         |                              | объектную композицию для новых типов данных для              |                              |
|                         |                              | функционального программирования, и мы будем использовать ФП |                              |
|                         |                              | для создания объектов для ООП.   Не важно, как вы пишете     |                              |
|                         |                              | код, вы должны делать это хорошо.    Программист, который не |                              |
|                         |                              | понимает, что такое композиция, похож на строителя, который  |                              |
|                         |                              | не знает о гвоздях или болтах. Разработка ПО без внимания к  |                              |
|                         |                              | композиции подобна постройке дома при помощи суперклея и     |                              |
|                         |                              | скотча.   Настало время упрощения, и самый лучший путь к     |                              |
|                         |                              | этому - это понимание сути. Однако проблема в том, что       |                              |
|                         |                              | практически никто в индустрии не разбирается в основах. Мы,  |                              |
|                         |                              | индустрия, подвели тебя, разработчика. Это наша              |                              |
|                         |                              | ответственность как индустрии воспитывать программистов      |                              |
|                         |                              | лучше. Мы должны исправиться. Мы должны взять больше         |                              |
|                         |                              | ответственности. Все вокруг сегодня зависит от ПО, от        |                              |
|                         |                              | экономики до медицинского оборудования. В человеческой жизни |                              |
|                         |                              | буквально не осталось мест, на которые бы не влияло качество |                              |
|                         |                              | ПО. Мы должны знать, что мы делаем.   Настало время узнать   |                              |
|                         |                              | как разрабатывать ПО.                                        |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  7 вопросов про замыкания в  | Привет, Хабр. Для будущих студентов курса  "JavaScript       |          javascript          |
|  pany/otus/blog/547070/ |          JavaScript          | Developer. Professional"  подготовили перевод интересного    |           closure            |
|                         |                              | материала.  В рамках набора студентов на курс приглашаем     |          interview           |
|                         |                              | принять участие в  открытом карьерном вебинаре , где         |                              |
|                         |                              | преподаватель расскажет о себе, своём профессиональном опыте |                              |
|                         |                              | и ответит на вопросы касательно карьеры в этой области. 7    |                              |
|                         |                              | Вопросов из интервью по замыканиям (closures) в JavaScript.  |                              |
|                         |                              | Можете ли вы ответить на них? Каждый разработчик JavaScript  |                              |
|                         |                              | должен знать, что такое замыкание (closure). Во время        |                              |
|                         |                              | собеседования по кодированию JavaScript есть большая         |                              |
|                         |                              | вероятность, что вас спросят о концепции замыкания. Я        |                              |
|                         |                              | составил список из 7 интересных и наиболее сложных вопросов  |                              |
|                         |                              | по замыканиям в JavaScript. Возьмите карандаш, лист бумаги и |                              |
|                         |                              | постарайтесь ответить на вопросы, не глядя на ответы и не    |                              |
|                         |                              | запуская код. По моим подсчетам, вам понадобится около 30    |                              |
|                         |                              | минут. Развлекайтесь! Если вам нужно освежить свои знания о  |                              |
|                         |                              | замыкании, я рекомендую ознакомится с публикацией  A Simple  |                              |
|                         |                              | Explanation of JavaScript Closures  (Простое объяснение      |                              |
|                         |                              | замыканиям в JavaScript). Содержание Вопрос 1: Замыкания     |                              |
|                         |                              | развязывают твои руки  Вопрос 2: Утерянные параметры Вопрос  |                              |
|                         |                              | 3: Кто есть кто Вопрос 4: Хитроумное замыкание Вопрос 5:     |                              |
|                         |                              | Правильное или неправильное сообщение Вопрос 6:              |                              |
|                         |                              | Восстановление инкапсуляции (Restore encapsulation) Вопрос   |                              |
|                         |                              | 7: Умное перемножение Резюме Вопрос 1: Замыкания развязывают |                              |
|                         |                              | твои руки  Рассмотрим следующие функции:  ,  , и  : Какие из |                              |
|                         |                              | этих 3 функций получают доступ к переменным внешней области  |                              |
|                         |                              | видимости (outer scope)? Расширенный ответ    обращается  к  |                              |
|                         |                              | переменной   из внешней области видимости.   не обращается   |                              |
|                         |                              | ни к каким переменным из внешней области видимости.          |                              |
|                         |                              | обращается  к глобальной переменной    из глобальной области |                              |
|                         |                              | видимости (так же известной как крайняя область видимости    |                              |
|                         |                              | (outermost scope)). Вопрос 2: Утерянные параметры Что будет  |                              |
|                         |                              | записано в консоль для следующего фрагмента кода (code       |                              |
|                         |                              | snippet): Расширенный ответ:  записывается на консоль.       |                              |
|                         |                              | Посмотрите демо .  вызывается с аргументом  , таким образом, |                              |
|                         |                              | параметр равен  . Функция  , будучи вложенной в функцию  ,   |                              |
|                         |                              | является замыканием, которое захватывает переменную a из     |                              |
|                         |                              | внешней области видимости  , где   равно  . Таким образом,   |                              |
|                         |                              | записывает в журнал  . Вопросы 3: Кто есть кто Что будет     |                              |
|                         |                              | записано в консоль для следующего фрагмента кода (code       |                              |
|                         |                              | snippet): Расширенный ответ:  и   записываются в консоль.    |                              |
|                         |                              | Посмотрите демо . Первое утверждение   объявляет переменную  |                              |
|                         |                              | .  — это замыкание, которое захватывает переменную count из  |                              |
|                         |                              | внешней области видимости. Внутри области видимости функции  |                              |
|                         |                              | равна  . Однако внутри этого условия другая команда          |                              |
|                         |                              | объявляет   локальной переменной, которая перезаписывает     |                              |
|                         |                              | count из внешней области видимости. Первая    записывает  .  |                              |
|                         |                              | Вторая   записывает  , так как здесь переменная count        |                              |
|                         |                              | доступна из внешней области видимости. Вопрос 4: Хитроумное  |                              |
|                         |                              | замыкание Что будет записано в консоль в следующем фрагменте |                              |
|                         |                              | кода (code snippet): Расширенный ответ: ,  ,   записано на   |                              |
|                         |                              | консоль.  Посмотрите демо . Фрагмент кода выполняется в 2    |                              |
|                         |                              | этапа. Фаза 1  выполняет итерацию 3 раза. Во время каждой    |                              |
|                         |                              | итерации создается новая функция  , которая захватывает      |                              |
|                         |                              | переменную  .   планирует исполнение   через 1000мс. Когда   |                              |
|                         |                              | цикл   завершается, переменная   имеет значение 3. Фаза 2    |                              |
|                         |                              | Вторая фаза происходит после 1000 мс:  выполняет             |                              |
|                         |                              | запланированные функции  .   считывает  текущее значение     |                              |
|                         |                              | переменной  , которое равно 3, и записывает в консоль 3.     |                              |
|                         |                              | Поэтому  ,  ,   записывается в консоль. Дополнительная       |                              |
|                         |                              | задача: как бы вы изменили в этом примере сообщение для      |                              |
|                         |                              | консоли со значениями  0 ,  1 ,  2  ? Запишите ваше решение  |                              |
|                         |                              | в комментариях ниже! Вопрос 5: Правильное или неправильное   |                              |
|                         |                              | сообщение Что будет записано в консоль в следующем фрагменте |                              |
|                         |                              | кода (code snippet): Расширенный ответ:  записывается в      |                              |
|                         |                              | консоль.  Посмотрите демо . Функция   вызывалась 3 раза, в   |                              |
|                         |                              | итоге увеличивая   до значения 3. Переменная   существует в  |                              |
|                         |                              | рамках функции  .  Ее начальное значение  . Однако, даже     |                              |
|                         |                              | если переменная   была увеличена несколько раз, переменная   |                              |
|                         |                              | всегда имеет значение  .  — это закрытие, которое            |                              |
|                         |                              | захватывает переменную message из области видимости  .       |                              |
|                         |                              | записывает   в консоль. Дополнительная задача: как бы вы     |                              |
|                         |                              | исправили функцию  log() , чтобы она возвращала сообщение,   |                              |
|                         |                              | имеющее фактическое значение  count ? Запишите ваше решение  |                              |
|                         |                              | в комментариях ниже! Вопрос 6: Восстановление инкапсуляции   |                              |
|                         |                              | (Restore encapsulation) Следующая функция   создает элементы |                              |
|                         |                              | структуры стековых данных: Стек работает, как и ожидалось,   |                              |
|                         |                              | но с одной маленькой проблемой. Любой может изменить массив  |                              |
|                         |                              | элементов напрямую, потому что свойство   открыто. Это       |                              |
|                         |                              | неприятная деталь, так как она нарушает инкапсуляцию стека:  |                              |
|                         |                              | только методы   и   должны быть публичными, а   или любые    |                              |
|                         |                              | другие элементы не должны быть доступны. Рефакторизуйте      |                              |
|                         |                              | описанную выше реализацию стека, используя концепцию         |                              |
|                         |                              | замыкания, так, чтобы не было возможности доступа к массиву  |                              |
|                         |                              | вне области видимости функции  : Расширенный ответ: Вот      |                              |
|                         |                              | возможный рефакторинг (refactoring) функции  : →  Посмотрите |                              |
|                         |                              | демо  был перемещен в переменную внутри области видимости  . |                              |
|                         |                              | Благодаря этому изменению, за пределами области видимости  , |                              |
|                         |                              | теперь нет способа получить доступ к массиву   или изменить  |                              |
|                         |                              | его. Элементы сейчас являются приватной переменной, а стек   |                              |
|                         |                              | инкапсулирован: только методы   и   являются публичными.     |                              |
|                         |                              | Методы   и  , будучи замкнутыми, захватывают переменную   из |                              |
|                         |                              | области видимости функции  . Вопрос 7: Умное перемножение    |                              |
|                         |                              | Напишите функцию  , которая умножает 2 числа: Если   будет   |                              |
|                         |                              | вызвана с 2 аргументами, то она должна вернуть умножение 2   |                              |
|                         |                              | аргументов. Но в том случае, если вызывается 1 аргумент  ,   |                              |
|                         |                              | то функция должна возвращать другую функцию. Возвращаемая    |                              |
|                         |                              | функция при вызове   выполняет умножение  . Расширенный      |                              |
|                         |                              | ответ: Вот возможная имплементация функции  : →  Посмотрите  |                              |
|                         |                              | демо Если параметр   не является  , то функция просто        |                              |
|                         |                              | возвращает  . Но если   является  , то это означает, что     |                              |
|                         |                              | функция   была вызвана с одним аргументом.  В таком случае   |                              |
|                         |                              | вернем функцию  , которая при последующем вызове выполняет   |                              |
|                         |                              | фактическое умножение.  является замыкающей, поскольку она   |                              |
|                         |                              | захватывает переменную   из области видимости функции  .     |                              |
|                         |                              | Резюме Сравните ваши ответы с ответами в статье: Если вы     |                              |
|                         |                              | правильно ответили на 5 или более вопросов, у вас есть       |                              |
|                         |                              | хорошее представление о замыканиях. Если вы правильно        |                              |
|                         |                              | ответили менее чем на 5 вопросов, вам нужно хорошенько       |                              |
|                         |                              | освежить тему замыкания,. Я рекомендую изучить мой пост  A   |                              |
|                         |                              | Simple Explanation of JavaScript Closures  (Простое          |                              |
|                         |                              | объяснение замыкания в JavaScript). Готовы к новому          |                              |
|                         |                              | испытанию? Попробуйте ответить на  7 вопросов в интервью по  |                              |
|                         |                              | ключевому слову "this" в JavaScript . Узнать подробнее о     |                              |
|                         |                              | курсе  "JavaScript Developer. Professional" Смотреть         |                              |
|                         |                              | открытый карьерный вебинар                                   |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos | Как написать простое Android | Предисловие Я не являюсь профессиональным разработчиком с    |             java             |
|        t/547200/        |   ToDo-приложение на Java    | огромным стажем в данной области (и это даже не хобби, а     |           android            |
|                         |                              | лишь нужда в разработке конкретного приложения), потому      |        android studio        |
|                         |                              | данная статья, полагаю, будет полезна новичкам, таким же,    |            google            |
|                         |                              | как и я был в начале разработке своего приложения. Возможно, |         google play          |
|                         |                              | кто-то найдет что-то полезное из данной статьи, какие-то     |          разработка          |
|                         |                              | кусочки окажутся частью ваших будущих разработок. Я расскажу |       программирование       |
|                         |                              | вам как написать простенькое ToDo-приложение на Android с    |    разработка приложений     |
|                         |                              | тремя активностями (рабочими экранами). Ссылка на проект на  |           андроид            |
|                         |                              | Github будет в конце данной статьи. Установка и первичная    |    андроид для начинающий    |
|                         |                              | настройка Для разработки приложения я рассмотрю              |                              |
|                         |                              | использование бесплатной IDE Intellij от разработчиков       |                              |
|                         |                              | JetBrains - Android Studio, у меня версия 4.1.1. После       |                              |
|                         |                              | успешной установки IDE и запуска нажимаем на самую первую    |                              |
|                         |                              | кнопку  Start a new Android Studio Project .  Далее появится |                              |
|                         |                              | мастер первичной подготовки проекта: выберем подходящий      |                              |
|                         |                              | шаблон, в моем случае это Empty Activity - он самый простой  |                              |
|                         |                              | для новичков, так как при первом запуске будет всего 1 XML   |                              |
|                         |                              | файл с версткой и один java файл MainActivity. На следующем  |                              |
|                         |                              | экране придумываем имя приложению; помните, что package      |                              |
|                         |                              | name, после публикации на Google Play изменить нельзя (иначе |                              |
|                         |                              | Google Play посчитает это другим приложением (поправьте      |                              |
|                         |                              | меня, если я ошибаюсь). Выбираем язык Java, так как по нему  |                              |
|                         |                              | данная статья, а также, по нему больше информации в          |                              |
|                         |                              | Интернете, чем по Kotlin. Минимальный SDK выбираем под       |                              |
|                         |                              | Android 5.0, так как данного API будет предостаточно для     |                              |
|                         |                              | наших задач, заодно мы получим большой охват, в том числе    |                              |
|                         |                              | старых устройств: планшеты, смартфоны, встроенные системы.   |                              |
|                         |                              | Скриншоты: установка и первичная настройка Далее раскрываем  |                              |
|                         |                              | вкладку Project и находим в каталоге  Java> <Ваш_Проект>     |                              |
|                         |                              | файл  , в котором мы будем описывать все происходящее на     |                              |
|                         |                              | главном экране. Подготовка макетов (layouts) - внешний облик |                              |
|                         |                              | приложения После рассмотрим файл  , для этого нам нужно      |                              |
|                         |                              | найти каталог  res>layout> . Откроем   для создания облика   |                              |
|                         |                              | первой - главной страницы и перетягивая с панели Palette     |                              |
|                         |                              | необходимые нам типы объектов. Советую вам размещать объекты |                              |
|                         |                              | под ConstraintLayout, так объекты можно будет привязывать    |                              |
|                         |                              | узелками к родительскому ConstraintLayout, который по        |                              |
|                         |                              | умолчанию занимает всю пространство, а после привязки        |                              |
|                         |                              | узелков, мы можем размещать объекты на нужном нам            |                              |
|                         |                              | вертикальном и горизонтальном выравнивании.  Кстати, вместо  |                              |
|                         |                              | px, тут используется другая величина -  dp , позволяющая на  |                              |
|                         |                              | разных экранах видеть одинаковый и желаемый результат.       |                              |
|                         |                              | Кстати, также, советую названия Текст полей переназначать в  |                              |
|                         |                              | String значения, чтобы в дальнейшем было проще делать        |                              |
|                         |                              | перевод интерфейса - подобный функционал уже встроен в       |                              |
|                         |                              | Android Studio. Для этого нажимаем на объект, далее в меню   |                              |
|                         |                              | Свойств объекта находим поле text и нажимаем на маленькую    |                              |
|                         |                              | плашку-кнопку справа от текста. В открывшимся окне, нажимаем |                              |
|                         |                              | на плюсик слева сверху и создаем название String-переменной  |                              |
|                         |                              | и ее значение по умолчанию:                                  |                              |
|                         |                              | Создание String-переменной Для перевода интерфейса,          |                              |
|                         |                              | необходимо сохранить изменения и над нашим конструктором     |                              |
|                         |                              | Layout нажать на кнопку Default (en-us) и выбрать Edit       |                              |
|                         |                              | Translations, далее найти слева сверху значок глобуса и      |                              |
|                         |                              | нажать на него для добавления нового языка:                  |                              |
|                         |                              | Переводы для интерфейсов Таким образом создадим              |                              |
|                         |                              | дополнительные макеты (layouts) для оставшихся двух окон:    |                              |
|                         |                              | Скриншоты: еще два макета Макет Activity_Settings.xml        |                              |
|                         |                              | Макет Activity_Advanced.xml Программируем на Java под        |                              |
|                         |                              | Android Еще раз повторюсь, что это Tutorial больше для       |                              |
|                         |                              | новичков; дальше я буду комментировать практически каждую    |                              |
|                         |                              | строчку. Ссылка на проект на Github будет в конце данной     |                              |
|                         |                              | статьи. Открываем файл Main_Activity.java, который будет     |                              |
|                         |                              | отвечать за логику наших переключателей и главного экрана в  |                              |
|                         |                              | целом, а она такова: В самом верху должен отображаться       |                              |
|                         |                              | пользовательский заголовок , если он настроен. На            |                              |
|                         |                              | переключателях должен отображаться тот текст, который        |                              |
|                         |                              | пользователь настраивает из окна с макетом                   |                              |
|                         |                              | Activity_Settings.xml Количество переключателей должно       |                              |
|                         |                              | соответствовать заданному числу из окна макета               |                              |
|                         |                              | Activity_Advanced.xml После выхода из приложения и           |                              |
|                         |                              | повторного запуска все переключатели должны оставаться в том |                              |
|                         |                              | же положении, в котором пользователь их оставил Сброс        |                              |
|                         |                              | переключателей возможен только, если переключатель           |                              |
|                         |                              | Уверен/-а?  включен. А также, должны работать оставшиеся     |                              |
|                         |                              | кнопки меню. Пишем следующее: Код под спойлером: 156 строчек |                              |
|                         |                              | Следующим этапом будет написание кода для корректной работы  |                              |
|                         |                              | макета Activity_Settings.XML, а логика его такова: Введенные |                              |
|                         |                              | пользователь записи сохраняются даже после перезапуска       |                              |
|                         |                              | приложения Количество полей соответствуют числу, заданному в |                              |
|                         |                              | настройках из макета Activity_Advanced.xml А также, должны   |                              |
|                         |                              | работать оставшиеся кнопки меню. Код по спойлером: 124       |                              |
|                         |                              | строчки И наконец опишем логику работы последнего окна в     |                              |
|                         |                              | приложении - с Дополнительными настройками: Количество полей |                              |
|                         |                              | для отображения - в данном случае выбор с помощью            |                              |
|                         |                              | радиокнопок - 6, 7 или 8 полей. Текстовый заголовок, который |                              |
|                         |                              | пользователь может ввести и который будет отображаться на    |                              |
|                         |                              | главной странице/активности. Также, текстовый заголовок и    |                              |
|                         |                              | выбранное количество полей с помощью радиокнопок должны      |                              |
|                         |                              | сохранять свое состояние даже после перезапуска приложения.  |                              |
|                         |                              | И наконец должны работать оставшиеся кнопки меню. Код под    |                              |
|                         |                              | спойлером: 134 строчки Подготовка приложения к публикации    |                              |
|                         |                              | Для отладки и проверки работоспособности приложения советую  |                              |
|                         |                              | вам использовать настоящее устройство на Android, так вы     |                              |
|                         |                              | сразу сможете отследить наличие, как минимум проблем с       |                              |
|                         |                              | оформлением. Здесь я приложил видео-инструкцию, как          |                              |
|                         |                              | подключить свой смартфон к Android studio для отладки вашего |                              |
|                         |                              | приложения. На видео вы можете заметить первую версию        |                              |
|                         |                              | данного приложения с очень плохим кодом: Регистрация в       |                              |
|                         |                              | Google Play Для публикации приложения нам следует создать    |                              |
|                         |                              | специальный аккаунт разработчика,  вот прямая ссылка. Далее  |                              |
|                         |                              | вам предстоит оплатить пошлину в $35 за возможность          |                              |
|                         |                              | публиковать приложения, это почти в 3 раза дешевле, чем в    |                              |
|                         |                              | Steam, при том, что Steam просит $100 за каждое публикуемое  |                              |
|                         |                              | приложение/игру, даже бесплатное, а с аккаунтом разработка,  |                              |
|                         |                              | в Google Play вы можете публиковать несчётное множество      |                              |
|                         |                              | приложений. После оплаты и успешной авторизации в консоли    |                              |
|                         |                              | разработчика, необходимо нажать на синюю кнопку " Создать    |                              |
|                         |                              | приложение ", далее заполнить все необходимые поля: После    |                              |
|                         |                              | создания приложения в консоли разработчика Google Play,      |                              |
|                         |                              | необходимо перейти в раздел  Рабочая версия  и нажать на     |                              |
|                         |                              | кнопку  Создать новый выпуск . Вам предложат получить        |                              |
|                         |                              | электронную подпись для вашего приложения с расширением      |                              |
|                         |                              | *.jks, с помощью которой вам предстоит подписать свое первое |                              |
|                         |                              | приложение, а также, все дальнейшие выпуски с обновлениями.  |                              |
|                         |                              | Возвращаемся в Android Studio и необходимо заполнить немного |                              |
|                         |                              | информации о нашем приложении, для этого нажимаем            |                              |
|                         |                              | File>Project Structure и заполняем поля Version Code и       |                              |
|                         |                              | Version Name - без них Google Play Google Play не допустит   |                              |
|                         |                              | ваше приложение до публикации:  Наконец, переходим в         |                              |
|                         |                              | следующий раздел: пункт меню  Build>Generate Signed Bundle / |                              |
|                         |                              | APK В открывшимся окне выбираем  APK . В подразделе  Key     |                              |
|                         |                              | Store Path  выбираем Create new, далее заполняем все поля (  |                              |
|                         |                              | прямая ссылка на официальную инструкцию ), далее данный ключ |                              |
|                         |                              | потребуется загрузить в консоль Google Play. Затем вернемся  |                              |
|                         |                              | в Android Studio и после ввода всех необходимых данных,      |                              |
|                         |                              | нажимаем  Next В следующем окне отмечаем все чекбоксы,       |                              |
|                         |                              | выбираем  release  и нажимаем Finish - Android Studio        |                              |
|                         |                              | скомпилирует подписанное приложение, которое можно           |                              |
|                         |                              | опубликовать в Google Play. Итог После загрузки файла        |                              |
|                         |                              | приложения APK потребуется заполнить множество форм и        |                              |
|                         |                              | подготовить множество материалов: описание на разных языках  |                              |
|                         |                              | (если необходимо), изображения на разных языках (надписи на  |                              |
|                         |                              | изображениях я имею в виду), логотипы, иконки разных         |                              |
|                         |                              | размеров, скриншоты со смартфона и планшета. Наконец         |                              |
|                         |                              | отправляем приложение в публикацию. Сотрудники Google Play   |                              |
|                         |                              | будут проверять ваше приложение в течении 2 недель, судя по  |                              |
|                         |                              | официальным данным. Данное приложение рассматривали в        |                              |
|                         |                              | течении 5 суток. Также, стоит учесть, что каждое обновление, |                              |
|                         |                              | также, будут проверять, но на обновления уходит не более 2-3 |                              |
|                         |                              | суток. Ссылка на GitHub, как обещано .  Ссылка на приложение |                              |
|                         |                              | в Google Play .                                              |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Второй “Великий поход-7А”   | Запуск CZ-7A. Источник: xinhuanet.com 12 марта 2021 г. в     |         космонавтика         |
| pany/itsoft/blog/547156 |   Китая оказался успешным    | 01:51:28 по пекинскому времени (11 марта в 17:51:28 UTC)     |            ракеты            |
|            /            |                              | состоялся успешный пуск китайского ракета-носителя           |       ракеты-носители        |
|                         |                              | “Чанчжэн-7А”(CZ-7A) с экспериментальным спутником “Шиянь 9”  |            китай             |
|                         |                              | на борту. Старт состоялся на космодроме Вэньчан.   Создание  |           спутники           |
|                         |                              | “Чанчжэн-7” и развитие в “Чанчжэн-7А” Проект по созданию     |        запуски ракет         |
|                         |                              | “семерки” анонсировали еще в 2001 году, но плотные работы по |                              |
|                         |                              | разработке начались только в 2007. Изначально планировали    |                              |
|                         |                              | создать семейство модульных ракет по названием “Чанчжэн-5”,  |                              |
|                         |                              | которые могли бы выводить на НОО грузы от 1,5 до 25 т. Чуть  |                              |
|                         |                              | позже каждая серия РН получила свое название: “Чанчжэн-5” -  |                              |
|                         |                              | тяжелый класс, “Чанчжэн-7” - средний класс и “Чанчжэн-6” -   |                              |
|                         |                              | легкий. Помимо взятого курса на создание экономически        |                              |
|                         |                              | выгодных и безопасных ракет, в Китайской аэрокосмической     |                              |
|                         |                              | научно-технической корпорации (CAST) решили перейти на       |                              |
|                         |                              | экологически чистые виды топлива - керосин и жидкие водород  |                              |
|                         |                              | и кислород. Они стали альтернативой дорогим и токсичным      |                              |
|                         |                              | гидразину и тетраоксиду диазота. Оригинал CZ-7 - это         |                              |
|                         |                              | двухступенчатая ракета, длиной 53,1м и шириной 3,35 м. При   |                              |
|                         |                              | стартовой массе 595 т, РН может вывести на низкую опорную    |                              |
|                         |                              | орбиту до 13,5 т, на солнечно-синхронную до 5,5 т. В         |                              |
|                         |                              | качестве горючего и окислителя выступают керосин и жидкий    |                              |
|                         |                              | кислород соответственно.   Первый пуск “Чанчжэн-7” состоялся |                              |
|                         |                              | 25 июня 2016, второй в 2017 году 20 апреля. В первый раз     |                              |
|                         |                              | запустили копию возвращаемого модуля, которая успешно        |                              |
|                         |                              | совершила посадку после 13 витков вокруг Земли. В 2017       |                              |
|                         |                              | полезным грузом стал беспилотный корабль серии “ Тяньчжоу ”. |                              |
|                         |                              | 22 апреля он состыковался с “ Тяньгун-2 ” - вторым по счету  |                              |
|                         |                              | китайским посещаемым пилотируемым аппаратом. Модификация     |                              |
|                         |                              | CZ-7A отличается от оригинала укороченной второй ступенью и  |                              |
|                         |                              | добавлением поверх неё третьей, кислородно-водородной,       |                              |
|                         |                              | которая унаследована от РН “Чанчжэн-3В”. При длине 60,13 м и |                              |
|                         |                              | стартовой массе 573 т, новая ракета позволяет выводить на    |                              |
|                         |                              | геопереходную орбиту до 7 т полезного груза.   Сравнение     |                              |
|                         |                              | модификаций CZ-7A и CZ-7 Запуски и спутники Гибрид РН CZ-7 и |                              |
|                         |                              | третьей ступени от CZ-3В не должен был вызвать проблем. Все- |                              |
|                         |                              | таки первую уже опробовали два раза, а вторую                |                              |
|                         |                              | эксплуатировали с 1996 года, причем из более чем 50 пусков   |                              |
|                         |                              | лишь один закончился полным провалом, он же и был первым. Но |                              |
|                         |                              | первый старт модифицированной “Чанчжэн-7А” 16 марта 2020     |                              |
|                         |                              | закончился неудачей. Сразу после пуска никаких официальных   |                              |
|                         |                              | комментариев от китайских властей не поступило. Позже в      |                              |
|                         |                              | некоторых источниках появилась информация, что причиной      |                              |
|                         |                              | провала стал производственный брак, вследствие чего один из  |                              |
|                         |                              | двигателей выключился. Ракета стала быстро “уходить” с       |                              |
|                         |                              | траектории и в итоге взорвалась.  На борту первой            |                              |
|                         |                              | модернизированной “семерки” находился спутник XJY-6, о       |                              |
|                         |                              | котором было представлено немного информации. Его            |                              |
|                         |                              | официальная миссия - проверка новых технологий и мониторинг  |                              |
|                         |                              | космической среды. После выяснения причины провала первой    |                              |
|                         |                              | миссии CZ-7A, в CAST принимают решение о создании еще одной  |                              |
|                         |                              | такой ракеты. К 30 декабря 2020 РН уже был готов, пуск       |                              |
|                         |                              | запланирован на 12 марта 2021 года. Новый “Великий поход”    |                              |
|                         |                              | предназначался для вывода на орбиту экспериментального       |                              |
|                         |                              | спутника “Шиянь-9”, который по  официальным данным  также    |                              |
|                         |                              | будет использоваться “в основном для испытания на орбите     |                              |
|                         |                              | новых технологий и мониторинга космической среды”. В CAST    |                              |
|                         |                              | сообщали, что “Шиянь-9” изготовлен за рекордные 8 месяцев -  |                              |
|                         |                              | это срок от создания проекта до отправки на космодром.       |                              |
|                         |                              | Учитывая, что в качестве РН при его запуске будет            |                              |
|                         |                              | использоваться CZ-7A, высказывалось предположение, что эта   |                              |
|                         |                              | миссия должна закрыть прошлый провал, а новый спутник ничто  |                              |
|                         |                              | иное, как XJY-6 №2. Ко всему прочему, некоторые источники    |                              |
|                         |                              | высказывали предположение, что спутник XJY-6 - это телескоп, |                              |
|                         |                              | оснащенный оптическими полимерными мембранами, которые могут |                              |
|                         |                              | прийти на смену классическим линзам. Схожий проект           |                              |
|                         |                              | разрабатывается в Американском Агентство по перспективным    |                              |
|                         |                              | оборонным научно-исследовательским разработкам США в рамках  |                              |
|                         |                              | программы MOIRE. С помощью такой технологии можно            |                              |
|                         |                              | значительно уменьшить вес выводимых на орбиту телескопов.    |                              |
|                         |                              | Проект имеет как научно-гражданский, так и большой военный   |                              |
|                         |                              | потенциал. Но гипотеза о спутнике XJY-6№2 с оптическими      |                              |
|                         |                              | мембранами, который на орбиту вывел РН “Чанчжэн-7А”, пока    |                              |
|                         |                              | остается только гипотезой. В любом случае, успешный пуск     |                              |
|                         |                              | CZ-7A состоялся. В ближайшем будущем этому РН отводится одна |                              |
|                         |                              | из ключевых ролей в обслуживании Китайской модульной         |                              |
|                         |                              | космической станции, которая станет третьей по счету         |                              |
|                         |                              | пилотируемой орбитальной станцией после “Мира” и МКС.        |                              |
|                         |                              | “Великий поход” Китая продолжается.                          |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Ваш звонок очень важен для  | Как часто вы разочаровывались в контакт-центрах? Как это     |            abbyy             |
| pany/abbyy/blog/547030/ |      нас: как перестать      | бывает, позвонили узнать о минимальном платеже по кредитке   |     process intelligence     |
|                         | разочаровываться в контакт-  | или выяснить, как разблокировать доступ в интернет-банк. Но  |        abbyy timeline        |
|                         |    центрах и начать жить     | сразу решить вопрос не удалось. Запутались в дебрях          |   анализ бизнес-процессов    |
|                         |                              | голосового меню. Поняли, что любая кнопка все равно приведет |            банки             |
|                         |                              | в никуда  к замученному неправильным скриптом оператору.     |        контакт-центры        |
|                         |                              | Ждали на линии «первого освободившегося сотрудника». Затем 8 |                              |
|                         |                              | раз слушали «Blue Da Ba Dee», когда он ставил звонок на      |                              |
|                         |                              | удержание. В результате бросили трубку и запланировали       |                              |
|                         |                              | поездку в офис банка.     Вы никогда не задумывались о том,  |                              |
|                         |                              | почему в век мессенджеров люди пользуются голосовой связью?  |                              |
|                         |                              | По  данным  Национальной ассоциации контактных центров       |                              |
|                         |                              | (НАКЦ), в России за время пандемии 25% контакт-центров не    |                              |
|                         |                              | зафиксировали уменьшения количества звонков, а 27% —         |                              |
|                         |                              | отметили рост объема обращений на 25%. Понятно, из-за        |                              |
|                         |                              | COVID-19 у всех появилось больше поводов для беспокойства:   |                              |
|                         |                              | «Когда доставят мой заказ?», «Что с моими ваучерами?»,       |                              |
|                         |                              | «Вернут ли мне деньги?». Компании вкладывают сотни тысяч     |                              |
|                         |                              | рублей в автоматизацию контакт-центров и обучение            |                              |
|                         |                              | сотрудников, но что-то идет не так.     Возможно, проблема в |                              |
|                         |                              | подходе. Решения об автоматизации принимаются интуитивно, на |                              |
|                         |                              | основе наблюдений или «методом научного тыка». Между тем в   |                              |
|                         |                              | работе контакт-центра много неочевидных закономерностей, за  |                              |
|                         |                              | которыми полезно наблюдать не в ручном режиме, а с           |                              |
|                         |                              | применением  технологий интеллектуального анализа бизнес-    |                              |
|                         |                              | процессов  (Process Intelligence). В информационных системах |                              |
|                         |                              | контакт-центров собирается много полезных данных –           |                              |
|                         |                              | «блуждания» клиентов по IVR (Interactive Voice Response),    |                              |
|                         |                              | логи телефонных разговоров (время и длительность, с какого   |                              |
|                         |                              | номера звонили) и др.     Сегодня мы разберем на примере     |                              |
|                         |                              | контакт-центра банка, как с помощью платформы для анализа    |                              |
|                         |                              | бизнес-процессов  ABBYY Timeline  обратить данные на пользу  |                              |
|                         |                              | и способствовать тому, чтобы люди не висели на линии,        |                              |
|                         |                              | интеллектуальный ассистент помогал, а не вредил, а операторы |                              |
|                         |                              | быстро решали проблемы пользователей и получали за это       |                              |
|                         |                              | премии.      Немного статистики  По  данным НАКЦ , сильнее   |                              |
|                         |                              | всего на эффективность общения сотрудников контакт-центров с |                              |
|                         |                              | клиентами в условиях пандемии влияют:       базы знаний,     |                              |
|                         |                              | которые устаревают или сложны в использовании,    нехватка   |                              |
|                         |                              | операторов для обслуживания всех поступающих звонков,        |                              |
|                         |                              | недостаточное обучение сотрудников.    Как говорится в       |                              |
|                         |                              | исследовании аналитического агентства iKS-Consulting ,       |                              |
|                         |                              | клиенты до сих пор предпочитают общаться с компанией по      |                              |
|                         |                              | телефону. Правда, количество звонков в контакт-центры не     |                              |
|                         |                              | растет. А вот сообщений по электронной почте, через чаты и   |                              |
|                         |                              | мессенджеры становится больше на 2% ежегодно: их доля от     |                              |
|                         |                              | общего количества обращений – 20%. Роботы помогают клиентам  |                              |
|                         |                              | не висеть долго на линии, а сотрудникам – избежать           |                              |
|                         |                              | монотонной обработки простых запросов. Но, несмотря на       |                              |
|                         |                              | внедрение технологий искусственного интеллекта и             |                              |
|                         |                              | роботизацию, пока в основном в контакт-центрах работают      |                              |
|                         |                              | люди. Только они могут помочь клиентам решить сложный вопрос |                              |
|                         |                              | или разобраться в нетипичной ситуации. Более того, в век     |                              |
|                         |                              | развития искусственного интеллекта (а также необходимости    |                              |
|                         |                              | оставаться дома) эмпатия и живое общение становятся еще      |                              |
|                         |                              | более ценными.     Например, до пандемии в «Сбербанк»        |                              |
|                         |                              | поступало  около 17 млн звонков в месяц и примерно 3 млн     |                              |
|                         |                              | чатов. Половина клиентов получали помощь от ботов —          |                              |
|                         |                              | голосового на номере «900» и текстового — в чатах. С апреля  |                              |
|                         |                              | 2020 года каждый месяц банк получает до 23 млн звонков       |                              |
|                         |                              | (+30%), а уже 60% всех вопросов решается в IVR.     Но так   |                              |
|                         |                              | ли все прекрасно в работе контакт-центров в банках? По       |                              |
|                         |                              | данным аналитического центра Национального агентства         |                              |
|                         |                              | финансовых исследований (НАФИ) , лояльность россиян к банкам |                              |
|                         |                              | снижается пятый год подряд. Своим банком, согласно           |                              |
|                         |                              | последнему опросу, не удовлетворены 35,4% жителей страны.    |                              |
|                         |                              | Они не порекомендуют его знакомым и, возможно, скоро найдут  |                              |
|                         |                              | альтернативу.     Индекс NPS в динамике (2016-2020 гг.).     |                              |
|                         |                              | Данные НАФИ    По оценке НАФИ, клиенты обращают больше всего |                              |
|                         |                              | внимания на стоимость счетов, депозитов, кредитов и качество |                              |
|                         |                              | обслуживания. Им важно быстро получать услуги и ощущать, что |                              |
|                         |                              | о них заботятся. Как полагают в НАФИ, в сознании клиентов    |                              |
|                         |                              | банки все больше становятся обезличенными ИТ-сервисами и     |                              |
|                         |                              | приложениями. А любой сервис сегодня должен быть быстрым,    |                              |
|                         |                              | понятным и приятным в использовании.    Как добиться этого?  |                              |
|                         |                              | Работу и людей, и технологий необходимо контролировать. В    |                              |
|                         |                              | частности, собирать и анализировать данные об успехах и      |                              |
|                         |                              | неудачах, чтобы с их помощью затем быстрее отвечать на       |                              |
|                         |                              | вопросы о кредитах и быть для клиента палочкой-выручалочкой  |                              |
|                         |                              | в любых нестандартных ситуациях.      Порочный круг IVR      |                              |
|                         |                              | IVR (Interactive Voice Response), или интерактивное          |                              |
|                         |                              | голосовое меню, решает вроде бы благородные задачи:          |                              |
|                         |                              | по максимуму переводит клиентов на самообслуживание, чтобы   |                              |
|                         |                              | снизить нагрузку на контакт-центр,    распределяет вызовы по |                              |
|                         |                              | нужным операторам.     Но почему клиенты часто недовольны    |                              |
|                         |                              | голосовым меню? Приведем в пример несложный кейс с IVR:      |                              |
|                         |                              | Клиент звонит в банк выяснить, почему ему приходят           |                              |
|                         |                              | подозрительные SMS-ки о попытке провести операции по его     |                              |
|                         |                              | дебетовой карте. Блокировать ее он не хочет, ему важно       |                              |
|                         |                              | сначала разобраться в ситуации. На звонок заранее записанным |                              |
|                         |                              | голосом отвечает IVR и предлагает прослушать голосовое меню: |                              |
|                         |                              | «Добро пожаловать в Демьянкредитбанк. Для получения          |                              |
|                         |                              | информации по адресам отделений и банкоматов нажмите 1. Для  |                              |
|                         |                              | экстренной блокировки карты нажмите 2. Для получения пин-    |                              |
|                         |                              | кода нажмите 0». Далее следует перечисление еще нескольких   |                              |
|                         |                              | цифр, а затем – тишина. В главном меню нет нужной ему цифры  |                              |
|                         |                              | и пункта «связаться с оператором». Он волнуется: прослушал   |                              |
|                         |                              | меню, зашел в тупик, так и не решил вопрос. Чтобы связаться  |                              |
|                         |                              | с оператором, нужно зайти в одну из веток, потом прослушать  |                              |
|                         |                              | «Оставайтесь на линии и дождитесь, когда вам ответит первый  |                              |
|                         |                              | освободившийся сотрудник». А клиент-то уже на нервяке: у     |                              |
|                         |                              | него с карты кто-то хочет списать деньги, а ему тут квест    |                              |
|                         |                              | устраивают.     По  данным  IT-дистрибутора ICE Partners,    |                              |
|                         |                              | людей больше всего раздражают длинные и сложные голосовые    |                              |
|                         |                              | меню. Возможно, банку структура IVR кажется удобной и        |                              |
|                         |                              | тщательно продуманной, но клиент может считать иначе.     На |                              |
|                         |                              | практике многим приходится бросать трубку, перезванивать в   |                              |
|                         |                              | контакт-центр и снова прослушивать одну и ту же информацию.  |                              |
|                         |                              | И даже тогда клиент не всегда может понять, что ему делать   |                              |
|                         |                              | дальше.  Психолог Джордж Миллер, работавший на Bell          |                              |
|                         |                              | Laboratories, в 1956 году  установил , что человек способен  |                              |
|                         |                              | удержать в кратковременной памяти от 5 до 9 элементов.       |                              |
|                         |                              | Современные психологи  снизили  оценку объема                |                              |
|                         |                              | кратковременной памяти до 4.  Кстати, все это лишний трафик  |                              |
|                         |                              | 8-800, а в объемах крупной компании – десятки тысяч долларов |                              |
|                         |                              | убытков в месяц. Кроме того, если после длинного и сложного  |                              |
|                         |                              | IVR клиент не попадёт на нужного специалиста, то, скорее     |                              |
|                         |                              | всего, он положит трубку и больше не вернется к этому банку. |                              |
|                         |                              | Поэтому лучше заранее проанализировать эффективность IVR,    |                              |
|                         |                              | чтобы не раздражать людей. Как это сделать?        Один из   |                              |
|                         |                              | самых простых вариантов – позвонить в свою компанию. Это     |                              |
|                         |                              | может быть познавательно. Так,  можно прослушать  IVR много  |                              |
|                         |                              | раз, в частности, проверить, есть ли в конце выход на живого |                              |
|                         |                              | оператора. Затем удалить все лишнее, убрать зацикливания и   |                              |
|                         |                              | тупиковые ветки меню.    Можно провести опрос своих          |                              |
|                         |                              | сотрудников: насколько у них выросла или снизилась нагрузка  |                              |
|                         |                              | с точки зрения ответов на самые простые вопросы, сколько раз |                              |
|                         |                              | за день им звонил один и тот же клиент, сколько вызовов они  |                              |
|                         |                              | переводили на других специалистов и т.п.    Устроить опрос   |                              |
|                         |                              | клиентов. Обычно после разговора с оператором включается     |                              |
|                         |                              | система IVR (post-call опрос), в которой абоненту задаются   |                              |
|                         |                              | 5-10 вопросов. Предлагается в баллах оценить качество        |                              |
|                         |                              | обслуживания, уточнить, была ли решена проблема, посоветует  |                              |
|                         |                              | ли он компанию своим близким и друзьям и т.п.      К         |                              |
|                         |                              | сожалению, любой из путей займет много времени. И не каждый  |                              |
|                         |                              | клиент готов отвечать на вопросы о нагрузке или качестве     |                              |
|                         |                              | обслуживания. Во всех этих случаях менеджер рискует не       |                              |
|                         |                              | увидеть полной картины процесса, например, количества        |                              |
|                         |                              | абонентов, которые получили исчерпывающие ответы на свои     |                              |
|                         |                              | вопросы в системе IVR; процента клиентов, которые вышли из   |                              |
|                         |                              | меню, не дойдя до информационных блоков или переходов на     |                              |
|                         |                              | оператора и т.д. Чтобы узнать эти и другие подробности об    |                              |
|                         |                              | эффективности работы IVR, можно воспользоваться еще одним    |                              |
|                         |                              | путем – инструментами для всестороннего анализа бизнес-      |                              |
|                         |                              | процессов.     Так, в  ABBYY Timeline  можно загрузить логи  |                              |
|                         |                              | систем, с которыми за определенный период работали           |                              |
|                         |                              | сотрудники контакт-центра, например, логи систем IVR,        |                              |
|                         |                              | коллтрекинга, базы знаний, CRM, а затем проанализировать     |                              |
|                         |                              | разные показатели бизнес-процессов.  Логи – это файлы,       |                              |
|                         |                              | которые содержат все действия пользователя, совершенные в    |                              |
|                         |                              | системе. На основании этих логов система может как           |                              |
|                         |                              | автоматически построить верхнеуровневую схему процесса,      |                              |
|                         |                              | так и показать детали по каждому конкретному случаю:         |                              |
|                         |                              | Допустим, это может быть путь клиента по веткам голосового   |                              |
|                         |                              | меню, а также записи разговора с оператором и информация о   |                              |
|                         |                              | том, какой вопрос пытались решить.     ABBYY Timeline        |                              |
|                         |                              | помогает объединять данные логов, полученные из нескольких   |                              |
|                         |                              | систем, и анализировать все составляющие процесса в едином   |                              |
|                         |                              | пространстве. Все события, которые произошли в различных IT- |                              |
|                         |                              | системах, но относились к одному конкретному звонку,         |                              |
|                         |                              | платформа объединяет в цепочку, которая называется           |                              |
|                         |                              | маршрутом .     Каждый маршрут может быть уникальным, но     |                              |
|                         |                              | ABBYY Timeline может легко находить в них закономерности или |                              |
|                         |                              | проверять различные гипотезы. Например, можно посмотреть,    |                              |
|                         |                              | сколько времени у клиента занимает решение его вопроса в     |                              |
|                         |                              | IVR. Сначала воспользуемся инструментом  «Запрос» , чтобы    |                              |
|                         |                              | отобрать те звонки, в которых клиент дошел до узла           |                              |
|                         |                              | голосового меню, который не является промежуточным, а затем  |                              |
|                         |                              | звонок был окончен.  Промежуточные узлы IVR — это те, на     |                              |
|                         |                              | которых от клиента ожидается некоторый выбор, и они не       |                              |
|                         |                              | являются «целевыми» для клиента.      А теперь посмотрим     |                              |
|                         |                              | статистику  «Длительность маршрута»  для отобранных звонков: |                              |
|                         |                              | Самый долгий разговор занял 9 минут, а подавляющая часть     |                              |
|                         |                              | звонков укладывалась в 3 минуты.    Этот показатель поможет  |                              |
|                         |                              | определить, насколько проста и удобна навигация в меню для   |                              |
|                         |                              | клиента. Если задача решается через IVR за 10 минут, а через |                              |
|                         |                              | оператора – за минуту, то лучше переключать такой звонок на  |                              |
|                         |                              | оператора. Автоматизированный информационный сервис не       |                              |
|                         |                              | должен  занимать  у клиента больше 6 минут.    Можно         |                              |
|                         |                              | выяснить, сколько времени клиенты проводят в ожидании ответа |                              |
|                         |                              | оператора. Допустим, человек не должен висеть в очереди      |                              |
|                         |                              | дольше минуты, но это правило часто нарушается. Создадим     |                              |
|                         |                              | новый  регламент процесса . Можно создавать регламенты,      |                              |
|                         |                              | учитывающие множество параметров, но мы ограничимся лишь     |                              |
|                         |                              | предельным промежутком между двумя событиями: звонок попал в |                              |
|                         |                              | очередь и оператор принял его:        Теперь посмотрим       |                              |
|                         |                              | нарушения этого регламента:          Можно не только         |                              |
|                         |                              | отобрать звонки, которые нарушают время исполнения           |                              |
|                         |                              | регламента, но и настроить автоматические уведомления по     |                              |
|                         |                              | таким нарушениям. При появлении новых звонков, не            |                              |
|                         |                              | укладывающихся в сроки обработки, ABBYY Timeline будет       |                              |
|                         |                              | присылать email с прямыми ссылками на маршруты таких         |                              |
|                         |                              | звонков.    Можно найти наиболее часто используемые ветки    |                              |
|                         |                              | голосового меню, чтобы затем вынести их вперед:        Мы    |                              |
|                         |                              | отобрали все звонки, которые закончились попаданием в        |                              |
|                         |                              | целевой (не промежуточный) узел меню IVR и отобразили        |                              |
|                         |                              | распределение звонков по имени узла IVR.     ABBYY Timeline  |                              |
|                         |                              | позволяет измерить статистику брошенных трубок: на каких     |                              |
|                         |                              | ветках IVR и сколько клиентов бросили трубку, не дойдя до    |                              |
|                         |                              | конца. Это один из важных индикаторов проблем с IVR:         |                              |
|                         |                              | Запросом легко отобрать звонки, где между событием           |                              |
|                         |                              | промежуточного пункта меню IVR и событием брошенной трубки   |                              |
|                         |                              | не произошло ни одного события.        Теперь мы видим       |                              |
|                         |                              | пункты меню IVR, на которых клиенты чаще всего решали        |                              |
|                         |                              | повесить трубку, а не углубляться дальше.    Контакт-центр   |                              |
|                         |                              | может работать не только с историческими данными, но и       |                              |
|                         |                              | проверять гипотезы. Инструменты прогнозирования в ABBYY      |                              |
|                         |                              | Timeline позволяют смоделировать ситуацию, когда будущий     |                              |
|                         |                              | клиент звонит вам и идет по лабиринту IVR. Если «прогнать»   |                              |
|                         |                              | все возможные варианты действий, то вы обнаружите, где будет |                              |
|                         |                              | основной «затык», и придумаете, как это исправить.     «Вас  |                              |
|                         |                              | много, а я одна»    Правильно распределить нагрузку на       |                              |
|                         |                              | сотрудников еще одна «головная боль» банка. Бывают           |                              |
|                         |                              | специалисты-универсалы, которые ответят на вопросы хоть по   |                              |
|                         |                              | кредитам, хоть по дебетовым картам, а еще и просто выслушают |                              |
|                         |                              | вас и даже в полночь подскажут адрес ближайшего банкомата,   |                              |
|                         |                              | поликлиники или цветочного магазина.     Некоторые банки     |                              |
|                         |                              | разделяют сотрудников по тематическим направлениям. Но       |                              |
|                         |                              | бывает, рассчитать нагрузку на линию сложно, потому что      |                              |
|                         |                              | вчера все хотели оформить депозит, а сегодня всем срочно     |                              |
|                         |                              | понадобились инвестиционные счета. Что делать, если          |                              |
|                         |                              | банковских специалистов по реструктуризации не хватает, а на |                              |
|                         |                              | линии висят одновременно 5 человек со срочными вопросами?    |                              |
|                         |                              | Или может произойти так, что у клиента сразу кредит для ИП,  |                              |
|                         |                              | карта рассрочки, накопительный счет и скользкий вопрос про   |                              |
|                         |                              | страхование недвижимости. И он хочет получить информацию по  |                              |
|                         |                              | всему сразу. На скольких операторов придется его             |                              |
|                         |                              | переключать?    Задача специалистов, которые планируют       |                              |
|                         |                              | количество сотрудников на линии, — сделать так, чтобы клиент |                              |
|                         |                              | не ждал, а операторы не сидели без дела. Как добиться        |                              |
|                         |                              | идеальных пропорций?     Можно составлять привычные          |                              |
|                         |                              | хронологические или сводные отчеты в виде таблиц. Например,  |                              |
|                         |                              | смотреть, как каждый день меняются средняя скорость ответа,  |                              |
|                         |                              | время разговора, постановки абонента на удержание и          |                              |
|                         |                              | постобработки вызова. А дальше – делать выводы о             |                              |
|                         |                              | распределении нагрузки на сотрудников.     Еще один вариант  |                              |
|                         |                              | – проанализировать, как изменяется нагрузка на контакт-центр |                              |
|                         |                              | в режиме реального времени и какие узкие места есть в этом   |                              |
|                         |                              | процессе. Например, можно воспользоваться инструментом       |                              |
|                         |                              | «Очереди»  в ABBYY Timeline и посмотреть, что по факту       |                              |
|                         |                              | сейчас происходит с нагрузкой на линию:        ABBYY         |                              |
|                         |                              | Timeline дает возможность отследить распределение заданий    |                              |
|                         |                              | между командами обработки запросов в реальном времени.       |                              |
|                         |                              | Картинка кликабельна    Этот инструмент также может          |                              |
|                         |                              | показать, как меняется ситуация с нагрузкой на контакт-      |                              |
|                         |                              | центр, если банк, допустим, переходит с системы сотрудников- |                              |
|                         |                              | универсалов на разделение специалистов по нескольким         |                              |
|                         |                              | направлениям. Можно оценить нехватку операторов, которые     |                              |
|                         |                              | разбираются в узкой теме, допустим, в инвестиционных счетах. |                              |
|                         |                              | Либо увидеть, в каких очередях клиенты ожидают ответа        |                              |
|                         |                              | дольше:       ABBYY Timeline вычисляет статистику простоев   |                              |
|                         |                              | запросов в очередях. Картинка кликабельна       Пропускная   |                              |
|                         |                              | способность очередей позволяет оценить, какие команды        |                              |
|                         |                              | справляются с наибольшим объемом запросов в пределах         |                              |
|                         |                              | выбранного периода. Картинка кликабельна    Есть показатели, |                              |
|                         |                              | которые говорят именно о качестве обслуживания. Например,    |                              |
|                         |                              | клиента не должны переключать больше 5 раз на другого        |                              |
|                         |                              | менеджера банка. Абонента гоняют туда-обратно и оставляют    |                              |
|                         |                              | без ответа? Такую ситуацию можно отследить:      Инструмент  |                              |
|                         |                              | «Запрос»  использован для поиска маршрутов с множественными  |                              |
|                         |                              | переадресациями.    Далее интересно посмотреть распределение |                              |
|                         |                              | таких звонков по конкретным сотрудникам, чтобы побеседовать  |                              |
|                         |                              | с ними и, возможно, узнать что-то новое о вашем бизнес-      |                              |
|                         |                              | процессе:       Картинка кликабельна     База, база,         |                              |
|                         |                              | ответьте!   Банковский контакт-центр может поддержать беседу |                              |
|                         |                              | по множеству тем: денежные переводы, кредиты, защита         |                              |
|                         |                              | персональных данных, кэшбеки, карты для детей, страхование,  |                              |
|                         |                              | овердрафты, проблемы с оплатой покупок в интернете. И это не |                              |
|                         |                              | считая различных форс-мажоров и ситуаций, где сотруднику     |                              |
|                         |                              | нужно проявить смекалку и иногда действовать не по скрипту.  |                              |
|                         |                              | С каждым звонком оператор может «перепрыгивать» на новую     |                              |
|                         |                              | тему. Реагировать нужно быстро, отвечать четко и             |                              |
|                         |                              | информативно, диалог вести вежливо.     Кроме того,          |                              |
|                         |                              | информация о банковских продуктах и услугах часто            |                              |
|                         |                              | обновляется. Возникают новые кредиты, карты, счета, а        |                              |
|                         |                              | времени на освоение нового немного. На помощь специалистам   |                              |
|                         |                              | приходят базы знаний – огромные интрасайты для сбора,        |                              |
|                         |                              | структурирования, хранения и быстрого поиска необходимой     |                              |
|                         |                              | информации. Но путь к ней может быть тернист. Особенно,      |                              |
|                         |                              | когда материалы в базе переложили на новое место. Или когда  |                              |
|                         |                              | нужных сведений просто еще не появилось. Кстати, вы знали,   |                              |
|                         |                              | что в контакт-центре нельзя отвечать клиенту «Не знаю»?      |                              |
|                         |                              | Что происходит? Самый большой поток звонков в контакт-центр  |                              |
|                         |                              | как раз бывает в тот момент, когда происходят массовые       |                              |
|                         |                              | обновления, сбои, или, например, когда президент объявляет о |                              |
|                         |                              | кредитных каникулах для малого бизнеса. И банк накрывает     |                              |
|                         |                              | валом звонков на эту тему, а в базе знаний – дырка от        |                              |
|                         |                              | бублика!     Что делает оператор? Ставит звонок на удержание |                              |
|                         |                              | и ищет ответы на вопросы. Спросит коллегу за соседним        |                              |
|                         |                              | столом, старшего консультанта, напишет команде в чат. Тем    |                              |
|                         |                              | временем количество и среднее время удержания обычно         |                              |
|                         |                              | отслеживаются и не должны превышать, например,  2 минуты и 2 |                              |
|                         |                              | удержания  за вызов. Иначе – санкции и плакала премия. Хотя  |                              |
|                         |                              | в данном случае не хватает просто Q&A по теме.     Ситуация  |                              |
|                         |                              | может быть проще. Сотрудник ищет какую-то очевидную          |                              |
|                         |                              | информацию в корпоративной базе данных, но не находит,       |                              |
|                         |                              | потому что она лежит на новом месте или появилась новая      |                              |
|                         |                              | формулировка. Парадоксальная ситуация: база знаний придумана |                              |
|                         |                              | для того, чтобы клиент не висел на проводе. Но она           |                              |
|                         |                              | обновляется таким образом, что клиент вынужден проводить     |                              |
|                         |                              | время «в подвешенном состоянии». Чем чаще такое повторяется, |                              |
|                         |                              | тем больше жалоб в соцсетях. А «контрольным выстрелом» может |                              |
|                         |                              | стать фраза: «К сожалению, мы не можем решить вашу проблему, |                              |
|                         |                              | пожалуйста, свяжитесь с государственной организацией Х». Все |                              |
|                         |                              | это влияет на отношение клиентов к банку, а также на         |                              |
|                         |                              | мотивацию, вовлеченность и производительность операторов.    |                              |
|                         |                              | Как быть?      Многие контакт-центры предлагают самим        |                              |
|                         |                              | клиентам доступ к своей базе знаний, и таким образом         |                              |
|                         |                              | переводят часть абонентов на самообслуживание. Но есть       |                              |
|                         |                              | нюансы: это не отменяет регулярного обновления базы и сбора  |                              |
|                         |                              | недостающей информации по самым актуальным вопросам, по      |                              |
|                         |                              | которым обращаются в контакт-центр.    Еще один вариант –    |                              |
|                         |                              | собирать данные о тематике самых долгих звонков, вводить     |                              |
|                         |                              | информацию в Microsoft Excel и постепенно пополнять базу     |                              |
|                         |                              | данных новыми темами.    Можно сделать удобнее:              |                              |
|                         |                              | анализировать и повышать эффективность базы знаний с помощью |                              |
|                         |                              | современных/цифровых технологий или технологий анализа       |                              |
|                         |                              | бизнес-процессов. Например, проанализировать, как обновление |                              |
|                         |                              | базы отражается на времени ожидания клиента.     Давайте     |                              |
|                         |                              | посмотрим на список всех поисковых запросов, которые вводил  |                              |
|                         |                              | сотрудник при работе с каким-то сложным и долгим звонком.    |                              |
|                         |                              | Отберем самые длительные звонки:      Среди этих звонков     |                              |
|                         |                              | найдем те, которые содержали более 3-х поисков по базе       |                              |
|                         |                              | знаний:        Во время звонков по какому-то типу продуктов  |                              |
|                         |                              | или от какого-то типа клиентов оператор после перевода       |                              |
|                         |                              | вызова на удержание ищет в базе знаний информацию по         |                              |
|                         |                              | определенным тегам или темам. В дальнейшем можно             |                              |
|                         |                              | дорабатывать именно те статьи базы знаний, в которых не      |                              |
|                         |                              | хватает актуальной информации:        Можно отследить        |                              |
|                         |                              | звонки, во время которых оператор заметно больше обращался к |                              |
|                         |                              | базе знаний, чем в других ситуациях, а также сравнить        |                              |
|                         |                              | показатели у разных звонков. Видно, что звонки с большим     |                              |
|                         |                              | количеством запросов в базу знаний в среднем более           |                              |
|                         |                              | длительные:     Сравнение двух запросов. В одном из них      |                              |
|                         |                              | больше обращений к базе знаний.    Далее можно               |                              |
|                         |                              | анализировать: по каким темам звонили люди, когда приходится |                              |
|                         |                              | долго искать ответ, чего не хватает сотрудникам (обучения    |                              |
|                         |                              | или информации) и так далее.     Вместо заключения           |                              |
|                         |                              | Конкурентное преимущество любого контакт-центра – качество   |                              |
|                         |                              | обслуживания. А когда бизнес-процессы в компании налажены и  |                              |
|                         |                              | совершенствуются в реальном времени, то ничто не мешает      |                              |
|                         |                              | оператору четко и понятно отвечать клиенту, проявлять        |                              |
|                         |                              | участие и заботу. А когда клиент доволен отношением к себе,  |                              |
|                         |                              | он точно вернется к вам. И не так важно, что ему помогло в   |                              |
|                         |                              | итоге: он быстро все нашел через IVR, оператор ответил на    |                              |
|                         |                              | вопрос или клиент спросил голосового помощника. Важно то,    |                              |
|                         |                              | что и сотрудник, и компания отнеслись к человеку и его       |                              |
|                         |                              | ситуации неравнодушно.                                       |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |  Методология, фреймворк или  | В продолжение  статьи о классическом PRINCE2  по запросу из  |           prince2            |
|        t/547140/        |     стандарт проектного      | комментариев попробовала сравнить ключевые методики          |            pmbok             |
|                         |          управления          | управления проектами. Надеюсь, что получилось что-то         |           iso21500           |
|                         |                              | полезное и при выборе подхода управления у читающих часть    |     управление проектами     |
|                         |                              | вопросов будут снята. Краткие вводные: PRINCE2  (Projects in |      project management      |
|                         |                              | a Controlled Environment) – структурированный  метод         |                              |
|                         |                              | управления проектами, разработанный в 1989 году Central      |                              |
|                         |                              | Computer and Telecommunications Agency (CCTA) в              |                              |
|                         |                              | Великобритании. PMBoK  –  фреймворк (свод знаний)  по        |                              |
|                         |                              | управлению проектами, разработанный в 1996 году Project      |                              |
|                         |                              | Management Institute (PMI) в США. ISO 21500:2012 «Guidance   |                              |
|                         |                              | on project management»  - международный  стандарт ,          |                              |
|                         |                              | разработанный проектным комитетом ISO/PC 236 «Управление     |                              |
|                         |                              | проектами». Как можно заметить, первое главное отличие –     |                              |
|                         |                              | собственное позиционирование в проектном управлении.         |                              |
|                         |                              | Остальные основные отличия с некоторыми субъективными        |                              |
|                         |                              | выводами приведены в таблице.   PRINCE2 PMBoK (6 издание,    |                              |
|                         |                              | 2017г.) ISO 21500:20112 Определение проекта Временная        |                              |
|                         |                              | организация, которая создается с целью   предоставления      |                              |
|                         |                              | одного или нескольких бизнес-продуктов в соответствии с      |                              |
|                         |                              | утвержденным   экономическим обоснованием проекта .          |                              |
|                         |                              | Временное предприятие, направленное на создание              |                              |
|                         |                              | уникального продукта, услуги или результата. Уникальная      |                              |
|                         |                              | совокупность процессов, состоящая из   контролируемых и      |                              |
|                         |                              | управляемых видов деятельностей с датами начала и            |                              |
|                         |                              | завершения, предназначенная для достижения определенных      |                              |
|                         |                              | целей. Процессы 7 процессов : Начало проекта, руководство    |                              |
|                         |                              | проектом, инициация проекта, контроль стадии, управление     |                              |
|                         |                              | границами стадии,   управление созданием продукта, закрытие  |                              |
|                         |                              | проекта. 49 процессов, объединенных в  5 групп  процессов :  |                              |
|                         |                              | инициация, планирование, исполнение, мониторинг и контроль,  |                              |
|                         |                              | закрытие. 39 процессов, объединенных в  5 групп  процессов : |                              |
|                         |                              | инициация, планирование, исполнение, управление, завершение. |                              |
|                         |                              | Предметные темы / группы  (курсивом отмечены различающиеся   |                              |
|                         |                              | темы) 7 тем: 1. Экономическое обоснование, 2. Организация,   |                              |
|                         |                              | 3. Управление качеством, 4. Планы работ, 5. Анализ и         |                              |
|                         |                              | управление рисками, 6. Управление изменениями содержания, 7. |                              |
|                         |                              | Принятие решений. 10 областей знаний: 1. Управление          |                              |
|                         |                              | интеграцией проекта, 2. Управление содержанием, 3.           |                              |
|                         |                              | Управление сроками, 4. Управление стоимостью, 5. Управление  |                              |
|                         |                              | качеством, 6.  Управление человеческими ресурсами, 7.        |                              |
|                         |                              | Управление коммуникациями, 8. Управления рисками, 9.         |                              |
|                         |                              | Управление закупками, 10. Управление   заинтересованными     |                              |
|                         |                              | сторонами. 10 предметных групп: 1. Интеграция, 2.            |                              |
|                         |                              | Заинтересованные стороны, 3. Содержание, 4.  Ресурсы , 5.    |                              |
|                         |                              | Сроки, 6. Стоимость, 7. Риски, 8. Качество, 9.  Закупки, 10. |                              |
|                         |                              | Коммуникации. Жизненный цикл проекта Структура стадий        |                              |
|                         |                              | проекта: 1. Стадия инициации, 2. Последующие стадии          |                              |
|                         |                              | (создание продуктов,   соответствующих требованием), 3.      |                              |
|                         |                              | Финальная стадия (приемка результатов,   подведение итогов   |                              |
|                         |                              | проекта). Минимальное количество стадий в проекте – 2        |                              |
|                         |                              | (инициация и   финальная). Все проекты могут иметь следующую |                              |
|                         |                              | структуру жизненного   цикла: 1. начало проекта; 2.          |                              |
|                         |                              | организация и подготовка; 3. выполнение работ проекта; 4.    |                              |
|                         |                              | завершение проекта. В стандарте  отсутствуют  четкие         |                              |
|                         |                              | требования/пояснения по стадиям проекта, стандарт            |                              |
|                         |                              | определяет, что проект   должен подразделяться на фазы,      |                              |
|                         |                              | состав и содержание которых должно   определяться            |                              |
|                         |                              | потребностями управления и контроля. Принципы 7 принципов    |                              |
|                         |                              | (универсальны и не требуют обоснования):    1. Постоянная    |                              |
|                         |                              | оценка целесообразности, 2. Учет предыдущего опыта, 3.       |                              |
|                         |                              | Определенные роли и обязанности, 4. Управление по стадиям,   |                              |
|                         |                              | 5. Управление по исключениям, 6. Фокус на продукте, 7.       |                              |
|                         |                              | Адаптация к внешним условиям. Шестое издание PMBoK основано  |                              |
|                         |                              | на процессной   составляющей  с четкими входами, выходами и  |                              |
|                         |                              | инструментарием. Ожидается, что новое седьмое издание будет  |                              |
|                         |                              | ориентировано   на принципы. ISO 21500 по аналогии с PMBoK   |                              |
|                         |                              | основан на процессной составляющей.  Ответственность за      |                              |
|                         |                              | результат проекта Ответственный руководитель                 |                              |
|                         |                              | (куратор/спонсор проекта)   полностью отвечает за успех      |                              |
|                         |                              | проекта. Менеджер проекта управляет проектом на ежедневной   |                              |
|                         |                              | основе в   рамках полномочий, делегированных Управляющим     |                              |
|                         |                              | советом. Руководитель проекта = единый ответственный за      |                              |
|                         |                              | результат. Руководитель проекта обеспечивает общее           |                              |
|                         |                              | руководство и   управление работами проекта и отвечает за    |                              |
|                         |                              | получение результатов проекта. Инструменты управления В      |                              |
|                         |                              | методологии  отсутствуют  примеры   инструментов, данная     |                              |
|                         |                              | область отдается на откуп Руководителю проектов.             |                              |
|                         |                              | Предоставляет  расширенный список   инструментов и методов   |                              |
|                         |                              | по каждому процессу управления проектом. Стандарт  не        |                              |
|                         |                              | описывает  конкретных   инструментов для реализации          |                              |
|                         |                              | процессов управления. Возможность гибкого применения         |                              |
|                         |                              | Допускает использование минимального количества документов   |                              |
|                         |                              | с минимальным требуемым содержанием, гибкое использование    |                              |
|                         |                              | метода с   соблюдением всех 7 принципов позволяет            |                              |
|                         |                              | подготавливать упрощенную отчетность и   минимизировать      |                              |
|                         |                              | процессы управления (с учетом целей и задач, которые         |                              |
|                         |                              | соответствуют процессам PRINCE2). Так как PMBoK является не  |                              |
|                         |                              | методологией или стандартом, а фреймворком, его   создатели  |                              |
|                         |                              | рекомендуют использовать PMBoK для создания собственной      |                              |
|                         |                              | методологии управления проектами   в компании. При этом      |                              |
|                         |                              | созданная методология должна учитывать особенности   каждого |                              |
|                         |                              | отдельного проекта и позволять руководителю проектов         |                              |
|                         |                              | изменять процессы   управления в определенных пределах.      |                              |
|                         |                              | Описанные в стандарте процессы не должны применяться без     |                              |
|                         |                              | изменений ко всем проектам или фазам жизненного цикла        |                              |
|                         |                              | проекта. Руководитель проекта   должен корректировать состав |                              |
|                         |                              | процессов управления конкретным проектом или фазой,          |                              |
|                         |                              | отбирая подходящие процессы и условия их реализации. Такая   |                              |
|                         |                              | адаптация должна   выполняться в соответствии с              |                              |
|                         |                              | существующими политиками организации. Возможность            |                              |
|                         |                              | использования в программе проектов Да Да Да Возможность      |                              |
|                         |                              | использования в портфеле проектов Да Да Да Использование в   |                              |
|                         |                              | Agile Последняя версия метода имеет возможность интеграции с |                              |
|                         |                              | Agile. Последняя версия фреймворка отражает коррекцию        |                              |
|                         |                              | процессов в   сторону итеративных методик. Нет упоминаний (в |                              |
|                         |                              | силу давности публикации стандарта). Преимущества 1.         |                              |
|                         |                              | Применим для проектов любой предметной   области, размера,   |                              |
|                         |                              | организации; 2. Может быть адаптирован под особенности       |                              |
|                         |                              | организации и масштабирован для проектов различного размера  |                              |
|                         |                              | и сложности; 3. Может применяться вместе с отраслевыми       |                              |
|                         |                              | методологиями; 4. Повторное использование накопленного       |                              |
|                         |                              | опыта; 5. Полноценная структура процессов и документов. 1.   |                              |
|                         |                              | Комплексный подход к процессам управления проектами   с      |                              |
|                         |                              | четкими входами, выходами и инструментами; 2. Применим для   |                              |
|                         |                              | проектов любой предметной области; 3. Полноценная структура  |                              |
|                         |                              | процессов и документов; 4. Описаны верхнеуровневые           |                              |
|                         |                              | требования к   Руководителю проектов, его компетенциям и     |                              |
|                         |                              | навыкам. 1. Очень сжатый пересказ, доступный для понимания   |                              |
|                         |                              | начинающим РП; 2. Описаны верхнеуровневые требования к       |                              |
|                         |                              | Руководителю проектов, его компетенциям и навыкам. 3.        |                              |
|                         |                              | Идеологически полностью повторяет PMBoK, лаконичен за счет   |                              |
|                         |                              | сжатого   описания. Недостатки 1. Отсутствуют примеры        |                              |
|                         |                              | конкретных инструментов; 2. Отсутствует описание лидерских   |                              |
|                         |                              | компетенций и   управления коммуникациями. 1. Избыточность   |                              |
|                         |                              | процессов для небольших проектов; 2. Не учитывает отраслевые |                              |
|                         |                              | особенности; 3. Не учитывает отсутствие необходимости в      |                              |
|                         |                              | некоторых процессах в рамках конкретных проектов. 1.         |                              |
|                         |                              | Отсутствует полноценная структура процессов и   документов;  |                              |
|                         |                              | 2. Отсутствуют примеры конкретных инструментов; 3.           |                              |
|                         |                              | Отсутствует четкое описание жизненного цикла   проектов; 4.  |                              |
|                         |                              | Отсутствует описание возможности интеграции с   гибкими      |                              |
|                         |                              | методологиями. Заметки на полях (вместо заключения)          |                              |
|                         |                              | Основываясь на выбранных показателях для сравнения, замечу,  |                              |
|                         |                              | что PRINCE2 является довольно гибкой методологией для        |                              |
|                         |                              | использования в проектах любого масштаба и отрасли. ISO      |                              |
|                         |                              | 21500, в свою очередь, является переработанной и сокращенной |                              |
|                         |                              | выжимкой PMBoK, в которой были упущены многие важные моменты |                              |
|                         |                              | для управления. При всей своей тяжеловесности PMBoK является |                              |
|                         |                              | той самой «основой основ» больших проектов (особенно         |                              |
|                         |                              | выполняющихся по классической схеме). Но окончательный выбор |                              |
|                         |                              | всегда остается за Руководителем проектов на основе его      |                              |
|                         |                              | знаний, практики и ограничений внешней среды.                |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Основы JavaScript: почему вы | Для будущих учащихся на курсе  "JavaScript Developer. Basic" |          javascript          |
|  pany/otus/blog/547098/ |  должны знать, как работает  | подготовили перевод полезного материала.  Приглашаем также   |         полиморфизм          |
|                         |          JS-движок           | на открытый вебинар по теме  «Какими задачами проверяют ваше |   разработка на javascript   |
|                         |                              | знание JavaScript» : возьмем тестовые вопросы из разных      |                              |
|                         |                              | систем и посмотрим, о чем эти вопросы, что они проверяют и   |                              |
|                         |                              | что нужно знать, чтобы на них правильно ответить.   В этой   |                              |
|                         |                              | статье я хочу объяснить, что разработчик программного        |                              |
|                         |                              | обеспечения, использующий JavaScript для написания           |                              |
|                         |                              | приложений, должен разбираться в движках, чтобы написанный   |                              |
|                         |                              | код работал правильно. Ниже вы увидите однострочную функцию, |                              |
|                         |                              | которая возвращает свойство   переданного аргумента. Просто  |                              |
|                         |                              | добавив одно свойство к каждому объекту, мы получим падение  |                              |
|                         |                              | производительности более чем на 700%! Объясню подробнее      |                              |
|                         |                              | почему так происходит. Отсутствие статической типизации в    |                              |
|                         |                              | JavaScript приводит к такому поведению. Если рассматривать   |                              |
|                         |                              | это как преимущество перед другими языками, такими как C#    |                              |
|                         |                              | или Java, то в данном случае получается скорее "Faustian     |                              |
|                         |                              | bargain" ("Фаустовская сделка". Жертвование духовных         |                              |
|                         |                              | ценностей ради материальных выгод; происхождение выражения   |                              |
|                         |                              | связано с именем Дж. Фауста). Торможение на полной скорости  |                              |
|                         |                              | Обычно нам не нужно знать внутреннюю часть движка, который   |                              |
|                         |                              | работает с нашим кодом. Производители браузеров вкладывают   |                              |
|                         |                              | значительные средства в то, чтобы сделать так, чтобы движки  |                              |
|                         |                              | запускали код очень быстро. Здорово! Пусть другие делают     |                              |
|                         |                              | тяжелую работу. Зачем беспокоиться о том, как работают       |                              |
|                         |                              | движки? В нашем примере кода ниже, у нас есть пять объектов, |                              |
|                         |                              | в которых хранятся имена и фамилии персонажей из Star Wars   |                              |
|                         |                              | (Звездных Войн). Функция getName возвращает значение         |                              |
|                         |                              | фамилии. Измерим общее время выполнения этой функции: пример |                              |
|                         |                              | однострочного кода На Intel i7 4510U время выполнения        |                              |
|                         |                              | составляет около 1.2 секунд. Пока всё хорошо. Теперь мы      |                              |
|                         |                              | добавим еще одно свойство к каждому объекту и выполним его   |                              |
|                         |                              | снова. Наше время исполнения теперь составляет 8.5 секунд,   |                              |
|                         |                              | что примерно в 7 раз медленнее, чем в нашей первой версии.   |                              |
|                         |                              | Это похоже на торможение на полной скорости. Как такое могло |                              |
|                         |                              | случиться? Пора присмотреться к работе движка                |                              |
|                         |                              | повнимательнее. Объединенные Силы: Интерпретатор и           |                              |
|                         |                              | Компилятор Движок — это та часть (компонент) программы,      |                              |
|                         |                              | которая читает и выполняет исходный код. У каждого крупного  |                              |
|                         |                              | производителя браузера есть свой движок. Mozilla Firefox     |                              |
|                         |                              | имеет Spidermonkey, Microsoft Edge — это Chakra/ChakraCore,  |                              |
|                         |                              | а Apple Safari называет свой движок JavaScriptCore. Google   |                              |
|                         |                              | Chrome использует V8, который также является движком для     |                              |
|                         |                              | Node. js. Выпуск V8 в 2008 году ознаменовал поворотный       |                              |
|                         |                              | момент в истории движков. V8 заменил браузеру относительно   |                              |
|                         |                              | медленный интерпретатор JavaScript. Причина этого            |                              |
|                         |                              | существенного улучшения заключается, главным образом, в      |                              |
|                         |                              | сочетании интерпретатора и компилятора. На сегодняшний день  |                              |
|                         |                              | все четыре движка используют эту технику. Интерпретатор      |                              |
|                         |                              | выполняет исходный код практически сразу. Компилятор         |                              |
|                         |                              | генерирует машинный код, который затем система пользователя  |                              |
|                         |                              | выполняет самостоятельно. Так как компилятор работает над    |                              |
|                         |                              | генерацией машинного кода, он использует оптимизацию.        |                              |
|                         |                              | Компиляция и оптимизация вместе приводят к более быстрому    |                              |
|                         |                              | выполнению кода, несмотря на дополнительное время,           |                              |
|                         |                              | необходимое для компилирования. Основная идея современных    |                              |
|                         |                              | движков — объединить лучшее из обоих миров: Быстрый запуск   |                              |
|                         |                              | интерпретатора. Быстрое выполнение компилятора. Современный  |                              |
|                         |                              | движок использует интерпретатор и компилятор. Источник:      |                              |
|                         |                              | imgflip Осуществление обеих целей начинается с               |                              |
|                         |                              | интерпретации. Параллельно движок помечает часто выполняемые |                              |
|                         |                              | части кода как "Hot Path" ("Горячий Путь") и передает их     |                              |
|                         |                              | компилятору вместе с контекстной информацией, собранной во   |                              |
|                         |                              | время выполнения. Этот процесс позволяет компилятору         |                              |
|                         |                              | адаптировать и оптимизировать код под текущий контекст.      |                              |
|                         |                              | Поведение компилятора мы называем "Just in Time" или просто  |                              |
|                         |                              | JIT (Just-in-time compilation, компиляция «на лету»). При    |                              |
|                         |                              | хорошей работе движка возможны некоторые сценарии, в которых |                              |
|                         |                              | JavaScript даже превосходит C++. Неудивительно, что большая  |                              |
|                         |                              | часть его усилий идет на “contextual optimisation”           |                              |
|                         |                              | ("контекстную оптимизацию"). Взаимодействие между            |                              |
|                         |                              | Интерпретатором и Компилятором Static Types (Статическая     |                              |
|                         |                              | типизация) во время Runtime (Время выполнения): Inline       |                              |
|                         |                              | Caching (Встроенное Кэширование) Inline-кэширование, или IC, |                              |
|                         |                              | является основным методом оптимизации в движках JavaScript.  |                              |
|                         |                              | Интерпретатор должен осуществить поиск, прежде чем он сможет |                              |
|                         |                              | получить доступ к свойствам объекта. Это свойство может быть |                              |
|                         |                              | частью прототипа объекта, оно должно иметь возможность       |                              |
|                         |                              | доступа к нему с помощью метода Геттера ( ) или даже через   |                              |
|                         |                              | прокси-сервер. Поиск свойства достаточно затратный процесс с |                              |
|                         |                              | точки зрения скорости исполнения. Движок присваивает каждому |                              |
|                         |                              | объекту “тип” ("type"), который он генерирует во время       |                              |
|                         |                              | выполнения. V8 называет эти "типы" ("types"), которые не     |                              |
|                         |                              | входят в стандарт ECMAScript, скрытые классы или формы       |                              |
|                         |                              | объектов. Для того чтобы два объекта имели одну и ту же      |                              |
|                         |                              | форму объекта, они должны обладать точно одинаковыми         |                              |
|                         |                              | свойствами в одном и том же порядке. Таким образом, объект   |                              |
|                         |                              | будет присвоен к другому классу, нежели  . С помощью формы   |                              |
|                         |                              | объекта, движок определяет локализацию памяти каждого        |                              |
|                         |                              | свойства. Движок  жестко кодирует (hard-codes) эти места в   |                              |
|                         |                              | функцию, которая получает доступ к свойству. Что делает      |                              |
|                         |                              | Inline Caching, так это исключает операции поиска.           |                              |
|                         |                              | Неудивительно, что это приводит к значительному повышению    |                              |
|                         |                              | производительности. Возвращаясь к нашему предыдущему         |                              |
|                         |                              | примеру: Все объекты в первом запуске имели только два       |                              |
|                         |                              | свойства,   и  , в одном и том же порядке. Допустим,         |                              |
|                         |                              | внутреннее имя этой формы объекта —  . Когда компилятор      |                              |
|                         |                              | применяет IC, он предполагает, что функция только передает   |                              |
|                         |                              | форму объекта p1 и сразу же возвращает значение  . Inline    |                              |
|                         |                              | Caching в действии (Мономорфное) Однако во втором прогоне мы |                              |
|                         |                              | имели дело с 5 различными формами объектов. Каждый объект    |                              |
|                         |                              | имел дополнительное свойство, и в   отсутствовало  . Что     |                              |
|                         |                              | происходит, когда мы имеем дело с несколькими фигурами       |                              |
|                         |                              | объектов? Вмешательство Ducks или различная типизация        |                              |
|                         |                              | (Intervening Ducks or Multiple Types) Функциональное         |                              |
|                         |                              | программирование использует хорошо известную концепцию “duck |                              |
|                         |                              | typing” ( "утиной типизации"), при котором хороший код (good |                              |
|                         |                              | code) вызывает функции, способные работать с несколькими     |                              |
|                         |                              | типами. В нашем случае, пока переданный объект имеет         |                              |
|                         |                              | свойство "lastname", все в порядке. Внутреннее кэширование   |                              |
|                         |                              | исключает затратный поиск ячейки памяти свойства. Это        |                              |
|                         |                              | работает лучше всего, когда при каждом доступе к свойству    |                              |
|                         |                              | объект имеет одинаковую форму. Это называется мономорфным    |                              |
|                         |                              | IC. Если у нас есть до четырех различных форм объекта, то мы |                              |
|                         |                              | находимся в полиморфном состоянии IC. Как и в мономорфном    |                              |
|                         |                              | состоянии, оптимизированный машинный код "знает" уже все     |                              |
|                         |                              | четыре местоположения. Но он должен проверить, к какой из    |                              |
|                         |                              | четырех возможных форм объекта относится переданный          |                              |
|                         |                              | аргумент. Это приводит к снижению производительности. Как    |                              |
|                         |                              | только мы выходим за порог четырех, это резко снижает        |                              |
|                         |                              | производительность. Теперь мы находимся в так называемой     |                              |
|                         |                              | мегаморфной IC. В этом состоянии больше не происходит        |                              |
|                         |                              | локального кэширования ячеек памяти. Вместо этого, их нужно  |                              |
|                         |                              | просматривать из глобальной кэш-памяти. Это приводит к       |                              |
|                         |                              | экстремальному падению производительности, которое мы видели |                              |
|                         |                              | выше. Полиморфизм и Мегаморфизм в действии Ниже мы видим     |                              |
|                         |                              | полиморфный Inline Cache с 2 различными формами объектов.    |                              |
|                         |                              | Полиморфный Inline Cache И мегаморфный IC из нашего примера  |                              |
|                         |                              | кода с 5-ю разными формами объектов: Мегаморфный Inline      |                              |
|                         |                              | Cache Класс JavaScript в помощь Итак, у нас было 5 форм      |                              |
|                         |                              | объектов и мы столкнулись с мегаморфной IC. Как мы можем это |                              |
|                         |                              | исправить? Мы должны убедиться, что движок отмечает все 5    |                              |
|                         |                              | наших объектов и их формы как одинаковые. Это означает, что  |                              |
|                         |                              | все создаваемые нами объекты должны будут наделяться всеми   |                              |
|                         |                              | возможными свойствами. Мы могли бы использовать объектные    |                              |
|                         |                              | литералы (object literals), но я нахожу JavaScript-классы    |                              |
|                         |                              | лучшим решением. Для свойств, которые не определены, мы      |                              |
|                         |                              | просто передадим   или пропустим. Конструктор убеждается в   |                              |
|                         |                              | том, чтобы эти поля инициализировались значением: Когда мы   |                              |
|                         |                              | снова выполняем эту функцию, то видим, что время ее          |                              |
|                         |                              | выполнения возвращается к 1.2 секундам. Задача выполнена!    |                              |
|                         |                              | Резюме Современные JavaScript-движки сочетают в себе         |                              |
|                         |                              | преимущества интерпретатора и компилятора: Быстрый запуск    |                              |
|                         |                              | приложений и быстрое выполнение кода. Inline Caching — это   |                              |
|                         |                              | мощный метод оптимизации. Лучше всего он работает, когда в   |                              |
|                         |                              | оптимизированную функцию передается только одна форма        |                              |
|                         |                              | объекта. Мой пример показал эффективность Inline кэширования |                              |
|                         |                              | различных типов и проблемы при работе с мегаморфными кэшами. |                              |
|                         |                              | Использование классов JavaScript является хорошей практикой. |                              |
|                         |                              | Статически типизированные транспайлеры (Static typed         |                              |
|                         |                              | transpilers), такие как TypeScript, делают мономорфное IC    |                              |
|                         |                              | более привлекательным для использования. Узнать подробнее о  |                              |
|                         |                              | курсе  "JavaScript Developer. Basic" Смотреть открытый       |                              |
|                         |                              | вебинар по теме:  «Какими задачами проверяют ваше знание     |                              |
|                         |                              | JavaScript»                                                  |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |    Пожалуйста, прекратите    | Для будущих учащихся на курсе  "MS SQL Server Developer"     |          sql server          |
|  pany/otus/blog/547094/ |   использовать антипаттерн   | подготовили перевод статьи. Также приглашаем посмотреть      |             sql              |
|                         |     UPSERT (SQL Server)      | открытый вебинар на тему  «Графовые базы данных в SQL        |            upsert            |
|                         |                              | Server» . На занятии участники вместе с экспертом            |            t-sql             |
|                         |                              | рассмотрят, что такое графовые базы данных и какие есть      |       sql server 2016        |
|                         |                              | варианты работы с графами и иерархиями в SQL Server.   Я     |     графовые базы данных     |
|                         |                              | думаю, что все уже знают  мое мнение о MERGE  и почему я     |                              |
|                         |                              | держусь от него подальше. Но вот еще один антипаттерн,       |                              |
|                         |                              | который я постоянно встречаю, когда требуется выполнить      |                              |
|                         |                              | UPSERT (UPdate inSERT — обновить строку, если она            |                              |
|                         |                              | существует, и вставить, если ее нет): Это выглядит довольно  |                              |
|                         |                              | логично и соответствует тому, как мы об этом думаем:         |                              |
|                         |                              | Существует ли строка для данного ключа (key)? ДА : Обновляем |                              |
|                         |                              | эту строку. НЕТ : Тогда добавляем ее. Но это расточительно   |                              |
|                         |                              | Искать строку только для того, чтобы проверить, что она      |                              |
|                         |                              | существует, а потом искать ее повторно для обновления — это  |                              |
|                         |                              | двойная пустая работа. И даже в том случае, если ключ        |                              |
|                         |                              | проиндексирован (что, я надеюсь, всегда так). Данную логику  |                              |
|                         |                              | можно изобразить в виде блок-схемы, где для каждого шага     |                              |
|                         |                              | показать операцию, которая происходит в базе данных:         |                              |
|                         |                              | Обратите внимание, что в каждой ветке будут выполняться две  |                              |
|                         |                              | операции с индексами. Более того, если строка не существует, |                              |
|                         |                              | не используются явные транзакции и не учитывается уровень    |                              |
|                         |                              | изоляции, то многое может пойти не так (помимо               |                              |
|                         |                              | производительности): Если ключ существует и две сессии будут |                              |
|                         |                              | выполнять UPDATE одновременно, то они обе выполнятся успешно |                              |
|                         |                              | (одна "выиграет", а "проигравшая" получит "потерянное        |                              |
|                         |                              | обновление"). Само по себе это не проблема, системы с        |                              |
|                         |                              | параллелизмом так и работают.  Здесь  Пол Уайт (Paul White)  |                              |
|                         |                              | рассказывает более подробно о внутренней механике, а  здесь  |                              |
|                         |                              | Мартин Смит (Martin Smith) о некоторых других нюансах. Если  |                              |
|                         |                              | ключ не существует и обе сессии пройдут этап проверки        |                              |
|                         |                              | существования ключа одинаково, то при попытке выполнить      |                              |
|                         |                              | INSERT может произойти все что угодно: взаимная блокировка   |                              |
|                         |                              | (deadlock)  из-за несовместимых блокировок; нарушение ключа  |                              |
|                         |                              | (key violation) , которого не должно быть; вставка           |                              |
|                         |                              | повторяющихся значений  ключа, если для столбца нет          |                              |
|                         |                              | корректных ограничений. Последний вариант — самый плохой,    |                              |
|                         |                              | так как данные  могут быть испорчены . С взаимоблокировками  |                              |
|                         |                              | и исключениями можно легко работать с помощью обработки      |                              |
|                         |                              | ошибок, XACT_ABORT или повторных попыток, — в зависимости от |                              |
|                         |                              | того, как часто вы ожидаете коллизии. Но если вы думаете,    |                              |
|                         |                              | что при проверке IF EXISTS вы в безопасности и защищены от   |                              |
|                         |                              | дубликатов (или ошибок ключей), то здесь вас ждет сюрприз.   |                              |
|                         |                              | Если вы ожидаете, что столбец будет ключевым, то сделайте    |                              |
|                         |                              | его официально таким и добавьте ограничения. «Многие люди    |                              |
|                         |                              | говорят...» Ден Гузман (Dan Guzman) говорил о состоянии      |                              |
|                         |                              | гонки более десяти лет назад в  Conditional INSERT/UPDATE    |                              |
|                         |                              | Race Condition , а затем в  "UPSERT" Race Condition With     |                              |
|                         |                              | MERGE . Майкл Сварт (Michael Swart) также затронул эту тему  |                              |
|                         |                              | несколько лет назад в  Mythbusting: Concurrent Update/Insert |                              |
|                         |                              | Solutions , включая тот факт, что сохраняя исходную логику и |                              |
|                         |                              | только повышая уровень изоляции, нарушения ограничения ключа |                              |
|                         |                              | меняются на взаимные блокировки. Позже он написал про MERGE  |                              |
|                         |                              | в статье  Be Careful with the Merge Statement . Обязательно  |                              |
|                         |                              | прочитайте все комментарии к обоим постам. Решение За свою   |                              |
|                         |                              | карьеру я исправил множество взаимных блокировок, используя  |                              |
|                         |                              | следующий паттерн (убираем избыточную проверку, оборачиваем  |                              |
|                         |                              | все в транзакцию и защищаем доступ к первой таблице          |                              |
|                         |                              | соответствующей блокировкой): Зачем нужны два хинта? Разве   |                              |
|                         |                              | UPDLOCK не достаточно? UPDLOCK используется для защиты от    |                              |
|                         |                              | взаимоблокировок на уровне  выражения  (пусть другая сессия  |                              |
|                         |                              | ждет вместо того, чтобы провоцировать жертву повторить       |                              |
|                         |                              | попытку).  SERIALIZABLE используется для защиты от изменений |                              |
|                         |                              | исходных данных на протяжении всей  транзакции  (для         |                              |
|                         |                              | уверенности, что отсутствующая строка продолжает             |                              |
|                         |                              | отсутствовать).  Здесь немного больше кода, но он на 1000%   |                              |
|                         |                              | безопаснее. И даже в худшем случае (когда строка еще не      |                              |
|                         |                              | существует) он будет работать не хуже рассматриваемого       |                              |
|                         |                              | антипаттерна. А в лучшем случае, если вы обновляете уже      |                              |
|                         |                              | существующую строку, эффективнее, так как поиск строки       |                              |
|                         |                              | выполняется только один раз. Давайте опять изобразим         |                              |
|                         |                              | операции, которые происходят в базе данных: В этом случае    |                              |
|                         |                              | есть ветка, в которой выполняется только одна операция       |                              |
|                         |                              | поиска по индексу. Получается следующее: Если ключ           |                              |
|                         |                              | существует и две сессии пытаются одновременно его обновить,  |                              |
|                         |                              | то  они обе по очереди обновят строку успешно , как и        |                              |
|                         |                              | раньше.  Если ключ не существует, то  одна из сессий         |                              |
|                         |                              | «выиграет» и вставит строку . Другая сессия  будет вынуждена |                              |
|                         |                              | ждать  (даже для проверки строки на существование), пока не  |                              |
|                         |                              | будут сняты блокировки и выполнит UPDATE.  В обоих случаях   |                              |
|                         |                              | сессия, выигравшая гонку, теряет свои данные из-за того, что |                              |
|                         |                              | «проигравшая» обновит их после. Обратите внимание, что общая |                              |
|                         |                              | пропускная способность в системе с высокой степенью          |                              |
|                         |                              | параллелизма может пострадать. Но это компромисс, на который |                              |
|                         |                              | вы должны быть готовы пойти. Ряд разработчиков хотели бы,    |                              |
|                         |                              | чтобы блокировок никогда не было, но некоторые из них        |                              |
|                         |                              | абсолютно необходимы для обеспечения целостности данных. Но  |                              |
|                         |                              | что, если UPDATE менее вероятен? Очевидно, что приведенное   |                              |
|                         |                              | выше решение оптимизировано для UPDATE и предполагает        |                              |
|                         |                              | присутствие ключа в таблице как минимум с той же             |                              |
|                         |                              | вероятностью как и отсутствие. Если вам, наоборот, нужно     |                              |
|                         |                              | оптимизировать INSERT, когда INSERT более вероятен, чем      |                              |
|                         |                              | UPDATE, то вы можете перевернуть логику и все еще сохранить  |                              |
|                         |                              | безопасность UPSERT: Здесь также есть подход «просто сделай  |                              |
|                         |                              | это», если вы вслепую выполните INSERT и позволите коллизиям |                              |
|                         |                              | вызвать исключения: Стоимость подобных исключений часто      |                              |
|                         |                              | превышает стоимость проверки. Важно знать приблизительную    |                              |
|                         |                              | частоту попаданий / промахов. Я писал об этом  здесь  и      |                              |
|                         |                              | здесь . А как насчет обработки нескольких строк? Все         |                              |
|                         |                              | вышесказанное относится к одиночным INSERT / UPDATE, но      |                              |
|                         |                              | Джастин Пилинг (Justin Pealing) спросил , как быть с         |                              |
|                         |                              | несколькими строками, когда неизвестно, какие из них уже     |                              |
|                         |                              | существуют? Если вы передаете список строк через что-то      |                              |
|                         |                              | вроде табличного параметра (TVP, Table-Valued Parameters),   |                              |
|                         |                              | то сделайте UPDATE с JOIN, а затем INSERT, используя NOT     |                              |
|                         |                              | EXISTS. Подход в целом здесь остается таким же, как описано  |                              |
|                         |                              | выше: Если вы получаете список строк каким-то другим         |                              |
|                         |                              | способом, отличным от TVP (XML, список с разделителями-      |                              |
|                         |                              | запятыми и т.п.), то сначала преобразуйте их в таблицу и     |                              |
|                         |                              | потом сделайте JOIN к нужным данным. Будьте осторожны при    |                              |
|                         |                              | оптимизации этого кода под первоначальный INSERT —           |                              |
|                         |                              | потенциально можно выполнить UPDATE для некоторых строк      |                              |
|                         |                              | дважды. Выводы Рассмотренные UPSERT-паттерны лучше того, с   |                              |
|                         |                              | чем мне часто приходится сталкиваться, и, я надеюсь, что вы  |                              |
|                         |                              | начнете их использовать. Я буду давать ссылку на этот пост   |                              |
|                         |                              | всякий раз, когда буду видеть паттерн IF EXIST. И еще хочу   |                              |
|                         |                              | передать привет Полу Уайту (Paul White,  sql.kiwi  |         |                              |
|                         |                              | @SQK_Kiwi ) — он так хорошо умеет объяснять сложные          |                              |
|                         |                              | концепции простыми словами. Для использования MERGE у вас    |                              |
|                         |                              | должна быть либо веская причина (возможно, вам нужна какая-  |                              |
|                         |                              | то маловразумительная MERGE-функциональность), либо вы не    |                              |
|                         |                              | восприняли вышеприведенные ссылки всерьез. Узнать подробнее  |                              |
|                         |                              | о курсе  "MS SQL Server Developer" . Смотреть открытый       |                              |
|                         |                              | вебинар на тему  «Графовые базы данных в SQL Server» .       |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |    История жизни и смерти    |    Как правило, хакеры стараются вести скрытный образ жизни  |            ruvds             |
| pany/ruvds/blog/547026/ | хакера, взломавшего пентагон | и соблюдать анонимность. Многим это удается, но некоторые из |            хакер             |
|                         |       и NASA в 15 лет        | них обретают популярность вопреки собственной воле. Так      |            фрикер            |
|                         |                              | случилось, например, с Кевином Митником или Робертом         |          биография           |
|                         |                              | Моррисом. Но есть и другие компьютерные гении, о судьбе      |       Джонатан Джеймс        |
|                         |                              | которых известно гораздо меньше, чем об их подвигах. Одного  |                              |
|                         |                              | из таких парней, оставивших заметный след в истории мирового |                              |
|                         |                              | хакерства, звали Джонатан Джеймс. Это человек с яркой, но    |                              |
|                         |                              | трагичной историей жизни, завершившейся ранней и             |                              |
|                         |                              | таинственной смертью.      Как только не называли Джонатана  |                              |
|                         |                              | Джеймса журналисты в своих многочисленных публикациях: и     |                              |
|                         |                              | самым юным, но при этом самым талантливым хакером Америки,   |                              |
|                         |                              | которому удалось проникнуть на серверы НАСА, взломать        |                              |
|                         |                              | Пентагон, похитить программное обеспечение, управляющее МКС, |                              |
|                         |                              | и установить бекдор на серверах одного из американских       |                              |
|                         |                              | военных ведомств. И все это — в пятнадцатилетнем возрасте. В |                              |
|                         |                              | качестве дальнейшего развития своей уникальной карьеры       |                              |
|                         |                              | Джонатан Джеймс стал первым несовершеннолетним в США,        |                              |
|                         |                              | отправившимся за решетку именно по обвинению в хакерстве.    |                              |
|                         |                              | Вместе с тем, известно о нем широкой публике крайне немного: |                              |
|                         |                              | в англоязычной Википедии Джеймсу посвящена скромная          |                              |
|                         |                              | страничка на полтора экрана, в русскоязычной — и того        |                              |
|                         |                              | меньше. Но история этого парня, вне всяких сомнений,         |                              |
|                         |                              | заслуживает гораздо более подробного рассказа.     Детство   |                              |
|                         |                              | Джонатан Джозеф Джеймс (Jonathan Joseph James) родился 12    |                              |
|                         |                              | декабря 1983 года в небольшом, как бы у нас сказали,         |                              |
|                         |                              | «поселке городского типа» Пайнкрест, расположенном в округе  |                              |
|                         |                              | Майами-Дейд, штат Флорида. Население городка насчитывает     |                              |
|                         |                              | всего 18 с небольшим тысяч жителей, но, несмотря на это,     |                              |
|                         |                              | здесь дважды в месяц выходит собственная газета «Пайнкрест   |                              |
|                         |                              | Трибьюн». Еще в местечке Пайнкрест располагается известный   |                              |
|                         |                              | на весь штат ландшафтный «парк культуры и искусств Южной     |                              |
|                         |                              | Флориды». Больше эта деревня, занимающая скромную площадь в  |                              |
|                         |                              | семь с половиной квадратных миль, пожалуй, ничем не          |                              |
|                         |                              | отметилась в богатой на события истории Соединенных Штатов.  |                              |
|                         |                              | Ну, кроме того, что она стала родиной одного из самых        |                              |
|                         |                              | талантливых хакеров Северной Америки.        Джонатан рос в  |                              |
|                         |                              | самой обычной по американским меркам семье: его отец, Роберт |                              |
|                         |                              | Джеймс, был программистом, мать — домохозяйкой. Еще в        |                              |
|                         |                              | шестилетнем возрасте он начал проявлять интерес к            |                              |
|                         |                              | компьютерам и регулярно сидел за клавиатурой домашней машины |                              |
|                         |                              | своего отца, играя в игры. В интервью, опубликованных уже    |                              |
|                         |                              | после смерти сына, Роберт Джеймс вспоминал, что неоднократно |                              |
|                         |                              | устанавливал на ПК различные средства родительского          |                              |
|                         |                              | контроля, потому что Джонатан торчал за экраном ночи         |                              |
|                         |                              | напролет, что отрицательно сказывалось на его учебе в школе. |                              |
|                         |                              | Но тот неизменно отыскивал хитрые способы обойти введенные   |                              |
|                         |                              | родителями ограничения. Видимо, это и стало самым первым     |                              |
|                         |                              | хакерским опытом юного Джонатана Джеймса. С возрастом        |                              |
|                         |                              | интересы мальчугана понемногу менялись: наигравшись в игры,  |                              |
|                         |                              | тот начал понемногу изучать язык Си. Однажды Джонатан и      |                              |
|                         |                              | вовсе удивил собственного отца: вернувшись с работы, тот     |                              |
|                         |                              | обнаружил, что отпрыск снес с его персоналки Windows вместе  |                              |
|                         |                              | со всем софтом, после чего установил туда Linux, чтобы       |                              |
|                         |                              | протестировать незнакомую операционку и понять, как она      |                              |
|                         |                              | работает.     Когда Джонатану исполнилось 13 лет, его        |                              |
|                         |                              | увлечение высокими технологиями показалось родителям         |                              |
|                         |                              | чересчур болезненным и опасным для здоровья. На семейном     |                              |
|                         |                              | совете было решено отобрать у подростка компьютер, за        |                              |
|                         |                              | которым тот проводил большую часть свободного времени днем и |                              |
|                         |                              | почти все ночи. В ответ Джонатан сбежал из дома, и           |                              |
|                         |                              | категорически отказывался возвращаться, пока ему не вернут   |                              |
|                         |                              | доступ к персоналке. В качестве аргумента юноша упирал на    |                              |
|                         |                              | то, что занятия программированием и видеоигры никак не       |                              |
|                         |                              | отражаются на его учебе в школе, где он неизменно получает   |                              |
|                         |                              | высокие оценки. Что, впрочем, неудивительно: чуть позже      |                              |
|                         |                              | выяснилось, что Джонатан успешно взломал компьютерную сеть   |                              |
|                         |                              | образовательных учреждений округа Майами-Дейд и периодически |                              |
|                         |                              | подправлял собственные баллы в табелях успеваемости.         |                              |
|                         |                              | Примерно в то же время Джонатан Джеймс придумал для себя ник |                              |
|                         |                              | C0mrade, под которым общался с другими хакерами на форумах и |                              |
|                         |                              | в личной переписке.     Через тернии к звездам  Баловство с  |                              |
|                         |                              | электронными журналами успеваемости быстро наскучило         |                              |
|                         |                              | Джонатану, и он решил выбрать для себя цель покрупнее.       |                              |
|                         |                              | Первой серьезной жертвой пятнадцатилетнего хакера C0mrade    |                              |
|                         |                              | стало подразделение AT&T под названием BellSouth, — это одна |                              |
|                         |                              | из крупнейших телекоммуникационных компаний в США со штаб-   |                              |
|                         |                              | квартирой в Атланте, Джорджия. О деталях этого взлома        |                              |
|                         |                              | известно немного, и более того, в самой BellSouth узнали,    |                              |
|                         |                              | что серверы компании подверглись атаке C0mrade, только когда |                              |
|                         |                              | хакер сам признался в этом эпизоде после ареста. «Нас        |                              |
|                         |                              | регулярно пытаются взломать», — сообщил изданию Tampa Bay    |                              |
|                         |                              | Times представитель компании BellSouth Сперо Кантон — «и     |                              |
|                         |                              | примерно в то время, о котором говорит Джонатан,             |                              |
|                         |                              | действительно имел место один инцидент». Судя по всему, этот |                              |
|                         |                              | взлом не нанес BellSouth какого-либо ущерба, поскольку       |                              |
|                         |                              | основной целью C0mrade была не нажива, а развлечение и       |                              |
|                         |                              | проверка собственных знаний. Позже он говорил журналистам:   |                              |
|                         |                              | «Я знаю UNIX и Cи как свои пять пальцев, потому что я        |                              |
|                         |                              | прочитал уйму книг и постоянно зависал за компом. Самое      |                              |
|                         |                              | сложное — не проникновение в систему, а обучение и получение |                              |
|                         |                              | знаний, чтобы потом понимать, что с этим можно сделать».     |                              |
|                         |                              | Вдохновленный успехом, Джонатан решил не останавливаться на  |                              |
|                         |                              | достигнутом. Просиживая ночами в своей комнате за            |                              |
|                         |                              | клавиатурой Pentium-266, он искал уязвимые серверы, к        |                              |
|                         |                              | которым можно было бы подключиться в обход установленной     |                              |
|                         |                              | админами системы защиты. 29 июня 1999 года один такой сервер |                              |
|                         |                              | обнаружился в городе Хантсвилл, штат Алабама. Установив на   |                              |
|                         |                              | него вредоносную программу, юный хакер сумел повысить        |                              |
|                         |                              | собственные привилегии в системе и получить доступ к 13      |                              |
|                         |                              | другим компьютерам во взломанной сети. Как оказалось, сервер |                              |
|                         |                              | и сеть, куда проник C0mrade, принадлежат подразделению НАСА  |                              |
|                         |                              | под названием Центр космических полетов имени Джорджа        |                              |
|                         |                              | Маршалла (Marshall Space Flight Center). Эта                 |                              |
|                         |                              | правительственная научно-исследовательская организация       |                              |
|                         |                              | занимается разработкой и испытанием перспективных ракетных   |                              |
|                         |                              | двигателей, а также созданием систем коммуникаций и          |                              |
|                         |                              | программного обеспечения для Международной космической       |                              |
|                         |                              | станции.        Среди прочей любопытной информации, к        |                              |
|                         |                              | которой получил доступ Джонатан Джеймс, стали исходники      |                              |
|                         |                              | программы, служащей для контроля над критическими элементами |                              |
|                         |                              | жизнеобеспечения Международной космической станции. По       |                              |
|                         |                              | утверждениям специалистов НАСА, этот софт был предназначен   |                              |
|                         |                              | для поддержания физической среды в жилых отсеках МКС,        |                              |
|                         |                              | включая контроль над температурой и влажностью. Эксперты     |                              |
|                         |                              | оценили стоимость этого софта в 1,7 млн. долларов, хотя сам  |                              |
|                         |                              | Джеймс позже утверждал, что «эти исходники оказались полным  |                              |
|                         |                              | барахлом, и не тянут на такую сумму». К слову, после этого   |                              |
|                         |                              | замечания часть исходного кода для МКС, к которой он получил |                              |
|                         |                              | доступ, была переписана начисто.     После обнаружения       |                              |
|                         |                              | вторжения сотрудники Центра Маршалла на 21 день отключили    |                              |
|                         |                              | скомпрометированный сервер и компьютеры от сети, чтобы       |                              |
|                         |                              | проанализировать причины и хронологию взлома. Это нанесло    |                              |
|                         |                              | НАСА прямой ущерб на сумму 41000 долларов. Примерно тогда же |                              |
|                         |                              | служба безопасности НАСА передала информацию об атаке в ФБР, |                              |
|                         |                              | и федеральные агенты начали кропотливый поиск таинственного  |                              |
|                         |                              | могущественного хакера, покусившегося на национальную        |                              |
|                         |                              | космическую программу США. Который днем вместе с другими     |                              |
|                         |                              | школьниками посещал занятия в общественном колледже Майами-  |                              |
|                         |                              | Дейд, а ночами бродил по сети в поисках уязвимых серверов,   |                              |
|                         |                              | на которые он мог бы проникнуть из чистого любопытства.      |                              |
|                         |                              | Преступление и наказание  Сентябрьским вечером 1999 года     |                              |
|                         |                              | Джонатан Джеймс во время сканирования сети обнаружил, что на |                              |
|                         |                              | один из серверов в Даллесе, штат Вирджиния, какой-то         |                              |
|                         |                              | неизвестный доброжелатель установил бекдор. Троян позволял   |                              |
|                         |                              | подключаться к серверу из интернета фактически кому угодно,  |                              |
|                         |                              | что C0mrade незамедлительно и сделал. Тогда юный хакер еще   |                              |
|                         |                              | не знал, что скомпрометированный сервер принадлежит Defense  |                              |
|                         |                              | Threat Reduction Agency (DTRA) — одному из подразделений     |                              |
|                         |                              | Министерства обороны США, которое занимается анализом        |                              |
|                         |                              | внешних угроз национальной безопасности страны. Недолго      |                              |
|                         |                              | думая, Джеймс установил на сервер снифер и принялся          |                              |
|                         |                              | анализировать проходящий через него трафик в поисках         |                              |
|                         |                              | логинов, паролей и прочей интересной информации.    Улов     |                              |
|                         |                              | оказался богатым. В период с сентября по октябрь 1999 года   |                              |
|                         |                              | он сумел перехватить учетные данные пользователей DTRA,      |                              |
|                         |                              | которые открыли ему доступ к 10 компьютерам Министерства     |                              |
|                         |                              | обороны, и позволили скачать более 3300 писем из почтовых    |                              |
|                         |                              | ящиков сотрудников Пентагона. Джонатан с интересом изучал их |                              |
|                         |                              | содержимое и исследовал обнаруженные на взломанных           |                              |
|                         |                              | компьютерах файлы, при этом не уделяя должного внимания      |                              |
|                         |                              | вопросам анонимности. Естественно, успешное проникновение во |                              |
|                         |                              | внутреннюю сеть одной из дочерних структур Пентагона (как    |                              |
|                         |                              | утверждали в Министерстве обороны США — первое в истории) не |                              |
|                         |                              | могло остаться незамеченным. Расследование длилось недолго и |                              |
|                         |                              | закончилось 26 января 2000 года — в этот день агентам        |                              |
|                         |                              | Министерства обороны и полицейским из Департамента охраны    |                              |
|                         |                              | правопорядка Пайнкреста был отдан приказ арестовать хакера.  |                              |
|                         |                              | «Признаюсь, в тот день я стал очень популярным чуваком в     |                              |
|                         |                              | колледже, когда ко мне в дом вломились эти парни в           |                              |
|                         |                              | бронежилетах и с автоматами», — с улыбкой рассказывал потом  |                              |
|                         |                              | журналистам Джонатан Джеймс. В его жилище состоялся обыск в  |                              |
|                         |                              | результате которого агенты изъяли шесть устройств: четыре    |                              |
|                         |                              | настольных ПК, ноутбук и один карманный компьютер. После     |                              |
|                         |                              | ареста Джонатан начал активно сотрудничать со следствием и   |                              |
|                         |                              | рассказывать полиции о том, как ему удалось совершить все    |                              |
|                         |                              | эти взломы. «Их, конечно, беспокоило то, что в сеть          |                              |
|                         |                              | правительственной организации может запросто проникнуть кто- |                              |
|                         |                              | то несовершеннолетний», — говорил потом хакер. — «Главная их |                              |
|                         |                              | проблема заключается в том, что они не уделяют должного      |                              |
|                         |                              | внимания безопасности. Но, похоже, они это хотя бы           |                              |
|                         |                              | понимают».        На руку Джеймсу сыграло, прежде всего, что |                              |
|                         |                              | он не предпринимал во взломанных системах никаких            |                              |
|                         |                              | деструктивных действий — не менял пароли, не удалял файлы и  |                              |
|                         |                              | не запускал вирусы. Кроме того, он являлся                   |                              |
|                         |                              | несовершеннолетним: в момент совершения преступлений ему     |                              |
|                         |                              | было всего 15 лет, а на день оглашения приговора только-     |                              |
|                         |                              | только исполнилось 16. Если бы Джонатан Джеймс был взрослым, |                              |
|                         |                              | ему грозило бы как минимум 10 лет тюремного заключения и     |                              |
|                         |                              | большой денежный штраф. Но в силу юного возраста, а также    |                              |
|                         |                              | поскольку он заключил сделку со следствием, добровольно      |                              |
|                         |                              | признав вину в двух инкриминируемых эпизодах (взлом НАСА и   |                              |
|                         |                              | Министерства обороны США), суд признал его виновным в        |                              |
|                         |                              | «преступлениях, совершенных несовершеннолетним», так как     |                              |
|                         |                              | другие уголовные статьи по законам штата к нему в этом       |                              |
|                         |                              | возрасте применить было нельзя. Наказание также оказалось    |                              |
|                         |                              | весьма гуманным: Джеймс получил шесть месяцев домашнего      |                              |
|                         |                              | ареста и запрет на пользование компьютером в развлекательных |                              |
|                         |                              | целях (однако он по-прежнему мог садиться за клавиатуру,     |                              |
|                         |                              | если это было необходимо для учебы). Кроме того, хакер       |                              |
|                         |                              | должен был принести письменные извинения за содеянное НАСА и |                              |
|                         |                              | Министерству обороны США.    Однако мягкость приговора,      |                              |
|                         |                              | видимо, не пошла Джеймсу на пользу. Вскоре он был задержан   |                              |
|                         |                              | полицией на улице за нарушение условий домашнего ареста, и   |                              |
|                         |                              | кроме того, в его анализах обнаружили следы наркотиков. В    |                              |
|                         |                              | результате суд изменил условное наказание на реальное, и     |                              |
|                         |                              | Джонатан отправился за решетку еще на шесть месяцев, которые |                              |
|                         |                              | должен был провести в исправительном центре для              |                              |
|                         |                              | несовершеннолетних. Это был первый случай в США, когда       |                              |
|                         |                              | подросток отправился в тюрьму по обвинению в совершении      |                              |
|                         |                              | компьютерного преступления, и потому история привлекла       |                              |
|                         |                              | повышенное внимание прессы. В интервью изданию «Miami        |                              |
|                         |                              | Herald» Джонатан Джеймс утверждал, что твердо решил завязать |                              |
|                         |                              | с хакерством. «Оно того не стоит», — сказал он               |                              |
|                         |                              | корреспонденту, — «я делал это просто ради развлечения, для  |                              |
|                         |                              | меня это была игра, а они сажают меня в тюрьму. Я не хочу,   |                              |
|                         |                              | чтобы это повторилось снова. Я могу найти другие вещи для    |                              |
|                         |                              | развлечения».    Полностью отсидев отмерянный судьей срок,   |                              |
|                         |                              | Джонатан вышел на свободу и на некоторое время пропал из     |                              |
|                         |                              | поля зрения спецслужб и прессы, решив вести обычную          |                              |
|                         |                              | уединенную жизнь в доме своих родителей в Пайнкресте. К      |                              |
|                         |                              | сожалению, продлилось это уединение, как и сама жизнь        |                              |
|                         |                              | Джонатана Джеймса, недолго.     Смерть героя  17 января 2007 |                              |
|                         |                              | года группа хакеров, возглавляемая известным деятелем        |                              |
|                         |                              | киберподполья Альберто Гонзалисом, предприняла серию         |                              |
|                         |                              | массированных атак на крупные торговые и финансовые          |                              |
|                         |                              | организации США. Среди жертв оказалась популярная в Америке  |                              |
|                         |                              | сеть супермаркетов TJX, «клуб оптовиков» BJ, Boston Market,  |                              |
|                         |                              | Barnes & Noble, Sports Authority, OfficeMax и несколько      |                              |
|                         |                              | других коммерческих предприятий. В результате атаки хакеры   |                              |
|                         |                              | похитили данные кредитных карт и персональную информацию     |                              |
|                         |                              | миллионов клиентов этих фирм, а самим фирмам (как и их       |                              |
|                         |                              | репутации) был нанесен значительный ущерб.    В ходе         |                              |
|                         |                              | расследования инцидента Секретная служба США (United States  |                              |
|                         |                              | Secret Service) вышла на причастных к этому преступлению     |                              |
|                         |                              | соратников Гонзалиса. Несколько из них были знакомы и        |                              |
|                         |                              | общались на хакерских форумах с Джонатаном Джеймсом, из-за   |                              |
|                         |                              | чего тот также попал под подозрение. Весомости этим          |                              |
|                         |                              | подозрениям придавал и тот факт, что с Альберто Гонзалисом   |                              |
|                         |                              | сотрудничал неизвестный хакер, скрывающийся под псевдонимом  |                              |
|                         |                              | «JJ». Этот злоумышленник похитил данные и ПИН-коды кредиток, |                              |
|                         |                              | взломав беспроводную сеть магазинов канцелярских товаров     |                              |
|                         |                              | OfficeMax, а позже передал украденное Гонзалесу, создав для  |                              |
|                         |                              | него анонимный почтовый ящик. Ник «JJ» совпадал с инициалами |                              |
|                         |                              | Джонатана Джеймса. Этого обстоятельства, а также сетевого    |                              |
|                         |                              | знакомства с членами команды Альберто Гонзалиса оказалось    |                              |
|                         |                              | достаточно, чтобы агенты Секретной службы ворвались с        |                              |
|                         |                              | обыском в дома самого Джонатана Джеймса, его родного брата и |                              |
|                         |                              | его девушки. Позже, правда, следователи пришли к выводу, что |                              |
|                         |                              | таинственным анонимом «JJ», скорее всего, был близкий друг   |                              |
|                         |                              | Гонзалеса Стив Ватт, часто подписывавшийся в сети            |                              |
|                         |                              | псевдонимом «Джим Джонс». В ходе обысков агенты не нашли     |                              |
|                         |                              | ничего, что связывало бы Джеймса с этим преступлением. Они   |                              |
|                         |                              | обнаружили в его доме только винтовку, которую не изъяли,    |                              |
|                         |                              | поскольку она была официально зарегистрирована.        Позже |                              |
|                         |                              | отец Джонатана Джеймса Роберт вспоминал, что после           |                              |
|                         |                              | возвращения из тюрьмы тот страдал депрессиями и часто        |                              |
|                         |                              | пребывал в тревожном и подавленном состоянии. Обыск и        |                              |
|                         |                              | постоянная слежка, которую чувствовал за собой Джонатан, не  |                              |
|                         |                              | добавляли ему спокойствия. Вскоре после того, как в дом      |                              |
|                         |                              | хакера ворвались агенты Секретной службы, Роберт позвонил    |                              |
|                         |                              | ему с вопросом, найдут ли следователи что-то, что позволит   |                              |
|                         |                              | им выдвинуть обвинение. Джонатан ответил отрицательно. Это   |                              |
|                         |                              | был последний разговор отца с сыном.    В воскресенье, 18    |                              |
|                         |                              | мая 2008 года 25-летний Джонатан Джеймс был найден мертвым в |                              |
|                         |                              | ванной комнате своего дома с огнестрельным ранением в голову |                              |
|                         |                              | из той самой официально зарегистрированной винтовки, которую |                              |
|                         |                              | агенты не изъяли при обыске. Рядом обнаружилось предсмертное |                              |
|                         |                              | письмо, адресованное его отцу, брату и девушке. Среди        |                              |
|                         |                              | прочего там содержались пароли Джонатана к его учетной       |                              |
|                         |                              | записи PayPal и MySpace. В этой записке Джонатан писал: «Я   |                              |
|                         |                              | не верю в нашу систему «правосудия» — возможно, мои          |                              |
|                         |                              | сегодняшние действия и это письмо станут серьезным сигналом  |                              |
|                         |                              | для общественности, но я потерял контроль над ситуацией, и   |                              |
|                         |                              | это мой единственный способ ее исправить. Если честно, я не  |                              |
|                         |                              | имею никакого отношения ко всей этой истории с TJX. Несмотря |                              |
|                         |                              | на то, что Крис (Скотт) и Альберт Гонзалес — самые опасные и |                              |
|                         |                              | разрушительные хакеры, которых когда-либо поймали федералы,  |                              |
|                         |                              | я гораздо более соблазнителен [в качестве жертвы] для        |                              |
|                         |                              | общественного мнения, чем эти два случайных идиота. Такова   |                              |
|                         |                              | жизнь. Помните: дело не в том, что вы выигрываете или        |                              |
|                         |                              | проигрываете, а в том, что лично я выигрываю или проигрываю, |                              |
|                         |                              | сидя в тюрьме в течение 20, 10 или даже 5 лет за             |                              |
|                         |                              | преступление, которое я не совершал. Это мой способ          |                              |
|                         |                              | выиграть, но как минимум, я умру свободным».    В            |                              |
|                         |                              | охолохакерской среде до сих пор бродят слухи, что            |                              |
|                         |                              | обстоятельства смерти Джонатана Джеймса были инсценированы,  |                              |
|                         |                              | а истинной причиной его гибели якобы стала сверхсекретная    |                              |
|                         |                              | информация, которую он сумел раздобыть на серверах НАСА и    |                              |
|                         |                              | Пентагона. Этим же, дескать, обусловлен пристальный интерес  |                              |
|                         |                              | к его персоне со стороны Секретной службы США. Но            |                              |
|                         |                              | официальное расследование постановило, что Джеймс покончил   |                              |
|                         |                              | жизнь [роскомнадзором], а все остальные версии являются лишь |                              |
|                         |                              | досужими домыслами.     Как бы то ни было, короткая жизнь    |                              |
|                         |                              | Джонатана Джеймса навсегда вписана в историю мирового        |                              |
|                         |                              | хакерства, как бы пафосно это ни звучало. В коротком         |                              |
|                         |                              | некрологе, который напечатала на своих страницах газета      |                              |
|                         |                              | «Miami Herald», сказано: «Джонатан, окончивший школу Бет Ам  |                              |
|                         |                              | в 1995 году, запомнится друзьям и семье как исключительно    |                              |
|                         |                              | умный молодой человек, который никогда ничего не делал по    |                              |
|                         |                              | правилам. Компьютерный гений согласно всем определениям      |                              |
|                         |                              | этого термина, он постоянно поражал друзей, семью и          |                              |
|                         |                              | правительство своими достижениями. Его будет очень не        |                              |
|                         |                              | хватать брату, отцу, тете, дяде, двоюродным братьям, бабушке |                              |
|                         |                              | и дедушке, а также многим, многим друзьям».     Составители  |                              |
|                         |                              | некролога забыли разве что упомянуть то обстоятельство, что  |                              |
|                         |                              | Джонатан «C0mrade» Джеймс был не просто хакером и            |                              |
|                         |                              | компьютерным гением, а хакером и компьютерным гением,        |                              |
|                         |                              | который не сделал в своей жизни, в общем-то, ничего плохого. |                              |
|                         |                              | Тем печальнее, что его жизнь оборвалась так рано.            |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |       Стоит ли в играх       | Привет. Меня зовут Александр Птичкин. Вот уже 8 лет я обучаю |        создание игры         |
|        t/547154/        |   перерисовывать только ту   | созданию мультфильмов и анимации; 3 года из них я посвятил   |            html5             |
|                         |    часть CANVAS, которая     | разработке своего игрового 2.5D HTML5 движка под названием   |        игровые движки        |
|                         |    изменилась? Или проще     | PointJS. За 8 лет вращения в этой индустрии я наработал      |       как сделать игру       |
|                         |   стереть все и нарисовать   | много материала, которым хочу поделиться тут с вами в блоге. |                              |
|                         |           заново?            | Это мой первый пост на Хабр. Судите строго :) Ваши           |                              |
|                         |                              | предложения по улучшению дальнейших статьей пишите в         |                              |
|                         |                              | комментариях. Поехали! Меня часто спрашивают, почему я в     |                              |
|                         |                              | своем игровом движке PointJS перерисовываю весь CANVAS       |                              |
|                         |                              | заново, а не обновляю только ту часть, на которой произошли  |                              |
|                         |                              | изменения. В этой статье я не претендую на абсолютную истину |                              |
|                         |                              | - как говорится, сколько людей столько и мнений. Я лишь      |                              |
|                         |                              | поделюсь своими мыслями, идеями и наработками, которые       |                              |
|                         |                              | подвигли меня склониться к полной перерисовке CANVAS. Буду   |                              |
|                         |                              | рад в комментариях услышать ваши мнения по этому поводу,     |                              |
|                         |                              | чтобы на их основании оптимизировать движок. Ведь в общении  |                              |
|                         |                              | рождается истина. Поначалу звучит очень логично. Где то на   |                              |
|                         |                              | краю экрана пробежал вражеский персонаж, и только ту часть   |                              |
|                         |                              | CANVAS мы и хотим перерисовать, сэкономив ресурсы. Это было  |                              |
|                         |                              | настолько правдоподобно, что я за ночь изрисовал лист A4 в   |                              |
|                         |                              | поисках оптимального решения этой задачи. И вот что          |                              |
|                         |                              | получилось. Перерисовывать часть CANVAS мы можем только при  |                              |
|                         |                              | выполнении двух условий:  Игровой фон должен быть разбит на  |                              |
|                         |                              | части и не являться целым изображением. Судите сами: если    |                              |
|                         |                              | фон - целое изображение, то его все равно придется где-то    |                              |
|                         |                              | перерисовать. И раз оно цельное, то перерисовать придется    |                              |
|                         |                              | полностью, а значит, ни о какой перерисовке отдельной части  |                              |
|                         |                              | CANVAS речи быть не может. Дальше в статье вы поймете, что я |                              |
|                         |                              | имею в виду и почему так Камера в игре должна стоять. Потому |                              |
|                         |                              | что если камера движется, то и вся сцена движется, а значит, |                              |
|                         |                              | всю ее и надо перерисовать Уже два этих условия выше         |                              |
|                         |                              | отсекают уйму игр и механик. А мы еще даже не начали         |                              |
|                         |                              | разбираться. Итак, с фоном для игры мы определились. Как его |                              |
|                         |                              | подготовить, сейчас расскажу. Я беру готовую сцену из Maya   |                              |
|                         |                              | (персонажей, фоны и анимацию я создаю в программе Autodesk   |                              |
|                         |                              | Maya, а потом рендерю в формате 2D). Это облегчает           |                              |
|                         |                              | дальнейшую работу со сценой и смену ракурса. Но об этом в    |                              |
|                         |                              | другом посте. Затем отключаю все элементы сцены, кроме       |                              |
|                         |                              | земли, и вывожу ее изображение. Рендерю с разрешением 3000   |                              |
|                         |                              | на 3000px. Но на изображении также есть пустые png-области,  |                              |
|                         |                              | которые не нужны. Можно было, конечно, поправить в Maya, но  |                              |
|                         |                              | мне лень. Я удаляю их с помощью скрипта на php. Таким        |                              |
|                         |                              | образом на выходе у меня ровное изображение размером 2786 на |                              |
|                         |                              | 1998. Да, кстати, я написал уйму полезных скриптов для       |                              |
|                         |                              | ускорения работы и для того, чтобы не использовать           |                              |
|                         |                              | Photoshop, а делать все быстрее и проще. Получился такой     |                              |
|                         |                              | собственный Photoshop, но на php :) Вообще идея разбить      |                              |
|                         |                              | фоновое изображение и другие большие объекты на части уже    |                              |
|                         |                              | давно используется в играх (и не только). Например,          |                              |
|                         |                              | разработчики Diablo 2 делали то же самое. Ведь у них все     |                              |
|                         |                              | было растровое (спрайты), и была создана лишь иллюзия 3D. А  |                              |
|                         |                              | идея в следующем. Фоновое изображение может быть 10000px на  |                              |
|                         |                              | 10000px, экраны же пользователей чаще всего 1920 на 1080px   |                              |
|                         |                              | (мобильные и того меньше). Т.е. за пределами экрана, где мы  |                              |
|                         |                              | ничего не видим, все равно будет происходить перерисовка     |                              |
|                         |                              | фона. На рисунке СИНЕЕ - это рамка камеры в игре (рамка      |                              |
|                         |                              | камеры равна размеру экрана монитора пользователя). Все, что |                              |
|                         |                              | за рамкой, мы видеть не должны. Нам надо от этого            |                              |
|                         |                              | избавляться, ведь лишняя перерисовка - лишняя нагрузка. Даже |                              |
|                         |                              | программа анимации Anime Studio Pro (Moho) начинает висеть,  |                              |
|                         |                              | если части тела персонажа состоят из картинок 1920 на 1080   |                              |
|                         |                              | (в программе мы их, конечно, уменьшим, но оригиналы-то       |                              |
|                         |                              | никуда не денутся и вес файла тоже). Для человеческой руки   |                              |
|                         |                              | достаточно иметь изображение 300 на 300px. Что уж говорить о |                              |
|                         |                              | браузерной игре... Давайте большое изображение разобьем в    |                              |
|                         |                              | Photoshop на равные квадраты или прямоугольники (равные,     |                              |
|                         |                              | чтобы потом при сборке не устраивать себе танцы с бубном).   |                              |
|                         |                              | Например, разобьем на 8 строк и 8 столбиков. Так мы получили |                              |
|                         |                              | 8*8 = 64 прямоугольника размером 348 на 250px. Как разбить   |                              |
|                         |                              | изображение в Photoshop, у меня рассказано в  этом уроке .   |                              |
|                         |                              | Теперь у нас есть много картинок gif, из которых можно       |                              |
|                         |                              | воссоздать, как пазл, изображение фона. Теперь давайте       |                              |
|                         |                              | соберем этот пазл на javascript в нашей игре. Для этого      |                              |
|                         |                              | переименуем все файлы в папке, присвоив им числовые          |                              |
|                         |                              | названия, начиная с 1 или 0 (как вам удобно.) Я бы делал с   |                              |
|                         |                              | 1, так как потом надо будет делать цикл, начиная с 0, и сам  |                              |
|                         |                              | 0 выпадет, потому что к переменной при первой итерации       |                              |
|                         |                              | добавится 1. Руками переименовывать бессмысленно и долго, а  |                              |
|                         |                              | у нас все-таки 21 век на дворе. На MAC Book я это делаю за   |                              |
|                         |                              | один клик в программе Name Manager. Например, есть папка с   |                              |
|                         |                              | фотографиями под именем img. Я просто перетаскиваю эту папку |                              |
|                         |                              | на экран программы, указываю номер первой фотографии и жму   |                              |
|                         |                              | Rename. Если будете делать руками, не перепутайте порядок!   |                              |
|                         |                              | Когда Photoshop рендерил нам разбитый фон, он делал это тоже |                              |
|                         |                              | в определенном порядке, последовательно проходя циклом       |                              |
|                         |                              | строки, а потом столбцы. И если вы будете ставить нумерацию  |                              |
|                         |                              | кое-как, то потом нужные куски пазла могут оказаться где     |                              |
|                         |                              | угодно. Кстати это неплохой способ зашифровать игру (или     |                              |
|                         |                              | усложнить ее чтение), создав свой порядок сборки фоток из    |                              |
|                         |                              | папки. Языку Javascript без разницы, в каком порядке         |                              |
|                         |                              | пробегать столбики и строки, так что лишней нагрузки вы не   |                              |
|                         |                              | добавите. Вернемся к примеру: у нас есть последовательность  |                              |
|                         |                              | от 0 до 64 – следовательно, 64 кусочка. Далее пишем на       |                              |
|                         |                              | javascript простой код, который соберет все это в единое     |                              |
|                         |                              | изображение. Для этого стоит создать массив под названием    |                              |
|                         |                              | fon = [], в который впоследствии поместить все изображения в |                              |
|                         |                              | нужном порядке, и создать переменную xy, которая в будущем   |                              |
|                         |                              | станет номером фотографии (xy будет принимать участие в      |                              |
|                         |                              | формировании ссылки на путь к файлу). Затем создаем два      |                              |
|                         |                              | цикла, один из которых будет идти по X и добавлять           |                              |
|                         |                              | фотографии по горизонтали, а другой - по Y, переходить на    |                              |
|                         |                              | новую строку и тем самым добавлять фотографии по вертикали.  |                              |
|                         |                              | Цикл по x<8 говорит о том, что изображение было разбито на 8 |                              |
|                         |                              | строк. А цикл по y - что было 8 столбиков. Умножив 8 на 8,   |                              |
|                         |                              | мы должны точно получить количество картинок в папке img. А  |                              |
|                         |                              | их напомню 64. При каждой итерации этих циклов мы будем      |                              |
|                         |                              | прибавлять единичку к xy и добавлять в массив fon выбранное  |                              |
|                         |                              | определенным образом изображение. В игровом движке PointJS   |                              |
|                         |                              | есть метод, который добавляет в игру изображение  . Отмечу,  |                              |
|                         |                              | что подробнее о том, как устроен движок, о его командах и    |                              |
|                         |                              | уроки по нему вы можете посмотреть в соответствующем  плей   |                              |
|                         |                              | листе . Итак, теперь мы будем каждый раз добавлять в массив  |                              |
|                         |                              | fon новый game.newImageObject. Давайте посмотрим на код      |                              |
|                         |                              | целиком: Давайте посмотрим на строку  . Благодаря            |                              |
|                         |                              | конкатенации строк и тому, что xy у нас переменная, которая  |                              |
|                         |                              | всегда увеличивается на 1, мы формируем в ней динамический   |                              |
|                         |                              | путь к изображениям: Получили следующее. Это уже мы смотрим  |                              |
|                         |                              | в окне браузера Теперь я предлагаю вам для наглядности чуть  |                              |
|                         |                              | подпортить фон и сделать в формуле выше w=346, а h=248. Это  |                              |
|                         |                              | нужно, чтобы между клетками появился зазор 2px, и мы смогли  |                              |
|                         |                              | увидеть, из чего все же этот фон состоит. Это, разумеется,   |                              |
|                         |                              | еще не все. Пока мы никак не оптимизировали игру - мы лишь   |                              |
|                         |                              | расчленили и заново собрали одно изображение. И даже         |                              |
|                         |                              | наоборот: еще больше нагрузили компьютер циклами. А теперь   |                              |
|                         |                              | сделаем интересную операцию - будем рисовать только те       |                              |
|                         |                              | квадраты, которые видим на экране (т.е. которые попадают в   |                              |
|                         |                              | рамку камеры в движке). Для тех, кто не знает, за отрисовку  |                              |
|                         |                              | всего, что есть в движке, отвечает команда  . Напишем        |                              |
|                         |                              | условие: Смотрим, что получилось. Все блоки, что не попали в |                              |
|                         |                              | камеру (на рисунке они прозрачные), больше не рисуются. Вот  |                              |
|                         |                              | это и есть первая оптимизация фонового изображения.          |                              |
|                         |                              | Дальнейшие изображения я не смогу показать из окна браузера, |                              |
|                         |                              | так как рамка камеры - это и есть размер экрана, а я         |                              |
|                         |                              | физически не могу показать то, что находится за экраном. Но  |                              |
|                         |                              | я могу нарисовать это, например, в After Effects. Еще одна   |                              |
|                         |                              | полезнейшая программа для жизни аниматора и монтажа. Однако, |                              |
|                         |                              | если вы помните, мы говорили о другом - как очищать CANVAS?  |                              |
|                         |                              | Целиком или кусочком?. Сейчас мы провернули хорошую          |                              |
|                         |                              | подготовительную работу, чтобы четко ответить на этот        |                              |
|                         |                              | вопрос. Потому что предварительный ответ мы получили в       |                              |
|                         |                              | начале статьи: если камера движется, то картинка сменяется   |                              |
|                         |                              | полностью и тогда придется рисовать все без исключения.      |                              |
|                         |                              | Приступим. Я предлагаю разместить на нашем верно             |                              |
|                         |                              | отрисованном фоне несколько объектов: персонажей, дома и     |                              |
|                         |                              | деревья. Теперь представим ситуацию: мы пьем чай и не        |                              |
|                         |                              | играем, следовательно, наш персонаж не двигается. Однако     |                              |
|                         |                              | вокруг него бегает другой персонаж (наверняка с дурными      |                              |
|                         |                              | намерениями). Вот я нарисовал траекторию, по которой он      |                              |
|                         |                              | пробежал (сделал за ним шлейф): Посмотрим, какие блоки он    |                              |
|                         |                              | задел и что надо перерисовать на сцене. Эти участки я        |                              |
|                         |                              | выделил красным. По рисунку видно, какую область надо        |                              |
|                         |                              | перерисовать (она красная). Все остальное можно не трогать,  |                              |
|                         |                              | так как оно не изменилось. Как бы теперь я построил          |                              |
|                         |                              | алгоритм, который смог бы определить затронутые блоки и      |                              |
|                         |                              | участки, нуждающиеся в перерисовке? Обсудим на уровне идеи.  |                              |
|                         |                              | Допустим, мы создадим квадрат/прямоугольник по размеру       |                              |
|                         |                              | бегущего персонажа. Хотя нет, даже не так. Зачем создавать,  |                              |
|                         |                              | когда можно просто вызывать   этого объекта? Да, в движке    |                              |
|                         |                              | есть команда   - область загруженного изображения, равная    |                              |
|                         |                              | размерам этого изображения. Теперь напишем простое условие,  |                              |
|                         |                              | в котором будем проверять, каких объектов сцены коснулся     |                              |
|                         |                              | этот  . Вы помните, что у нас уже был массив fon = [];? А    |                              |
|                         |                              | помните, мы загружали деревья и дома? Их нельзя разместить в |                              |
|                         |                              | массиве fon. Значит, для них создадим отдельный массив obj,  |                              |
|                         |                              | и будем проверять сразу оба массива. Итак, пишем код: Уже на |                              |
|                         |                              | этой стадии обработка циклов может отнять у компьютера много |                              |
|                         |                              | ресурсов. Однако мы двигаемся дальше. Я специально на        |                              |
|                         |                              | картинке выше провел персонажа так, чтобы он не коснулся     |                              |
|                         |                              | дома, но коснулся клетки фона. Зачем? Все просто: если       |                              |
|                         |                              | перерисовать в этом месте фон, а потом персонажа, не тронув  |                              |
|                         |                              | дома, то фон окажется выше этого дома И вот главный вывод    |                              |
|                         |                              | статьи: Значит нам нужно проверять еще и родительские связи! |                              |
|                         |                              | Перерисовав фон и персонажа, нам следует узнать, а не        |                              |
|                         |                              | перекроет ли этот фон еще что-нибудь. Т.е. необходимо        |                              |
|                         |                              | пробежаться циклом по всем элементам, что попали в массивы   |                              |
|                         |                              | collisionFon и collisionObj, и посмотреть, каких еще         |                              |
|                         |                              | объектов они касаются на сцене, а точнее - какие объекты     |                              |
|                         |                              | находятся над ними. В моем движке есть функция проверки оси  |                              |
|                         |                              | Z. По сути там реализована эмуляция оси Z через сравнение    |                              |
|                         |                              | осей Y, но сейчас это не столь важно. Самое главное, что это |                              |
|                         |                              | большой блок, который тоже будет поглощать ресурсы. Ведь     |                              |
|                         |                              | теперь все блоки, которые предполагается перерисовать, нужно |                              |
|                         |                              | собрать в общий массив, чтобы сравнить их оси Y, чтобы       |                              |
|                         |                              | выяснить, кто из них выше, а кто ниже. Короче, я даже        |                              |
|                         |                              | формулы писать не буду. Думаю, вы поняли: расчеты будут      |                              |
|                         |                              | громоздкими и нагрузят компьютер больше, чем если бы мы      |                              |
|                         |                              | просто стерли весь CANVAS и нарисовали его заново. Я даже    |                              |
|                         |                              | сомневаюсь, что смогу их провести, а в том, что это          |                              |
|                         |                              | безотказно отработает в MMORPG-играх, вообще не уверен. С    |                              |
|                         |                              | учетом всех наложений и косвенных (не на прямую) попаданий   |                              |
|                         |                              | на здания, к красной зоне я добавил и зеленю область которую |                              |
|                         |                              | тоже нужно перерисовать.  При этом вы заметили, что в        |                              |
|                         |                              | примере пробежал только один вражеский персонаж. И мы        |                              |
|                         |                              | рассмотрели лишь частный случай, когда игрок стоит на месте, |                              |
|                         |                              | а камера не двигается, чтобы выполнить условие выше. А       |                              |
|                         |                              | сколько движухи получилось! Даже если мы все же сделаем      |                              |
|                         |                              | расчеты, придется перерисовывать почти половину CANVAS. Так  |                              |
|                         |                              | зачем тратить столько сил, менять механику движка, обработав |                              |
|                         |                              | при этом небольшой частный случай и в итоге перерисовав      |                              |
|                         |                              | полCANVAS? Я еще понимаю, если бы перерисовке подверглись    |                              |
|                         |                              | два-три блока, но, кажется даже при самом простом варианте   |                              |
|                         |                              | малой кровью не отделаться. Впрочем, решение, конечно, за    |                              |
|                         |                              | вами! Что ж, на этом я завершаю свою первую статью. Надеюсь, |                              |
|                         |                              | вы не очень утомились. Если есть какие-то мнения по поводу   |                              |
|                         |                              | вышеизложенного - пишите в комментариях, обсудим. Повторюсь, |                              |
|                         |                              | в общении рождается истина. А она нужна, чтобы улучшать      |                              |
|                         |                              | движок. Всем спасибо и до встречи в новых статьях. Автор     |                              |
|                         |                              | текста и всех материалов статьи: Александр Птичкин,          |                              |
|                         |                              | основатель образовательного проекта Mult-uroki. Написано     |                              |
|                         |                              | специально для habr.com. Копирование или иное использование  |                              |
|                         |                              | материала без письменного разрешения автора запрещено.       |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Прогнозирование временных   |  Привет, Хабр.    Эта статья посвящена методу долгосрочного  |         data science         |
| pany/glowbyte/blog/5429 |  рядов методом рядов Фурье   | прогнозирования временных рядов с помощью рядов Фурье [1-2]. |       machine learning       |
|           40/           |                              | Особенность подхода в том, что в отличие от классических     |              ai              |
|                         |                              | методов прогнозирования и машинного обучения прогнозируется  |           fourier            |
|                         |                              | не сама неизвестная функция, а ее  коэффициенты разложения в |        временные ряды        |
|                         |                              | ряд Фурье . Далее по спрогнозированным коэффициентам Фурье   |          timeseries          |
|                         |                              | восстанавливается неизвестная функция и делается прогноз ее  |       прогнозирование        |
|                         |                              | значений на следующий период.     Внимание!  Статья содержит |                              |
|                         |                              | множество формул.        Схематично данный метод можно       |                              |
|                         |                              | проиллюстрировать следующей анимацией         План статьи    |                              |
|                         |                              | Временные ряды   Задача прогнозирования временных рядов      |                              |
|                         |                              | Ряды Фурье   Матрица задержек. Прогнозирование временных     |                              |
|                         |                              | рядов на один шаг   Долгосрочное прогнозирование временных   |                              |
|                         |                              | рядов с помощью рядов Фурье   Немного кода    Тем, кто  с    |                              |
|                         |                              | мехмата/матфака  хорошо знаком с такими понятиями, как       |                              |
|                         |                              | временные ряды и ряды Фурье, можно пропустить первые три     |                              |
|                         |                              | раздела данной статьи.     Временной ряд   Временной ряд  –  |                              |
|                         |                              | значения некоторой величины, измеренные через равные         |                              |
|                         |                              | промежутки времени   Если принять   начальное значение  где  |                              |
|                         |                              | тогда временной ряд можно записать в виде последовательности |                              |
|                         |                              | где   Примеры временных рядов: стоимость акции, температура  |                              |
|                         |                              | воздуха, курс доллара и т.д.     Задача прогнозирования      |                              |
|                         |                              | временных рядов  Задача прогнозирования временных рядов      |                              |
|                         |                              | заключается в нахождении функции  F :    где   – отсрочка    |                              |
|                         |                              | прогноза,   – горизонт прогнозирования.  Т.е. по известным   |                              |
|                         |                              | значениям ряда из прошлого необходимо найти его значения в   |                              |
|                         |                              | будущем.     Замечание:  при прогнозировании временных рядов |                              |
|                         |                              | предполагается, что прошлые значения ряда содержат           |                              |
|                         |                              | информацию о его поведении в будущем. В классических же      |                              |
|                         |                              | задачах анализа данных считается, что различные наблюдения   |                              |
|                         |                              | независимы .     Ряды Фурье  Пусть функция   непрерывна на   |                              |
|                         |                              | отрезке   последовательность функций    является             |                              |
|                         |                              | ортонормальной на   т.е.   $$display$$\int_a^b φ_i(x) φ_j    |                              |
|                         |                              | (x)dx= δ_{ik} = \begin{cases} 1 &\text{$i = k$}\\ 0          |                              |
|                         |                              | &\text{$i \neq k$} \end{cases}. \;\;\;(4)$$display$$         |                              |
|                         |                              | Обозначим    тогда ряд   $$display$$a_1φ_1 (x)+a_2φ_2        |                              |
|                         |                              | (x)+⋯+a_kφ_k (x)+⋯ \;\;\; (6)$$display$$  называется  рядом  |                              |
|                         |                              | Фурье . Коэффициенты (5) этого ряда называются               |                              |
|                         |                              | коэффициентами Фурье  функции  f(x)  по системе (3).   Ряд   |                              |
|                         |                              | Фурье  – разложение некоторой функции по полной системе      |                              |
|                         |                              | ортонормированных функций (по некоторому базису).            |                              |
|                         |                              | Тригонометрические ряды Фурье  Если в качестве системы (3)   |                              |
|                         |                              | взять ортонормированную на отрезке   систему функций    то   |                              |
|                         |                              | разложение произвольной функции  f(x)  по системе (7) в ряд  |                              |
|                         |                              | Фурье на отрезке   имеет вид    где коэффициентыи   имеют    |                              |
|                         |                              | вид    Ряд (8) называется  тригонометрическим рядом Фурье .  |                              |
|                         |                              | Ряды Фурье по другим системам называют  обобщенными рядами   |                              |
|                         |                              | Фурье . Далее для краткости под рядом Фурье будем понимать   |                              |
|                         |                              | именно тригонометрический ряд Фурье, т.к. в данной статье мы |                              |
|                         |                              | будем иметь дело только с ним.     Теорема Дирихлe:   Если   |                              |
|                         |                              | функция  f(x)  задана на отрезке   и является на нем         |                              |
|                         |                              | кусочно-непрерывной, кусочно-монотонной и ограниченной, то   |                              |
|                         |                              | ее тригонометрический ряд Фурье сходится во всех точках      |                              |
|                         |                              | отрезка. Если s(x) – сумма тригонометрического ряда Фурье    |                              |
|                         |                              | функции f(x), то во всех точках непрерывности этой функции   |                              |
|                         |                              | А во всех точках разрыва    Кроме этого,    Среди всех       |                              |
|                         |                              | тригонометрических многочленов   $$display$$\frac{α_0}{2}+\s |                              |
|                         |                              | um_{k=1}^{N}α_k\cos⁡(kx)+β_k\sin⁡(kx)$$display$$  с заданным   |                              |
|                         |                              | N  частичная сумма ряда Фурье    дает наилучшую (в метрике   |                              |
|                         |                              | пространства функций с интегрируемым квадратом на отрезке  ) |                              |
|                         |                              | аппроксимацию функции  f(x)  [3]. Именно это утверждение     |                              |
|                         |                              | является основой для представления функции, значения которой |                              |
|                         |                              | являются исследуемым временным рядом с некоторой             |                              |
|                         |                              | периодичностью, в виде частной суммы тригонометрического     |                              |
|                         |                              | ряда Фурье.  Пусть  f(t)  – функция с интегрируемым          |                              |
|                         |                              | квадратом на отрезке   Замена   переводит функцию в    Для   |                              |
|                         |                              | этой функции, заданной на отрезке   ряд Фурье имеет вид      |                              |
|                         |                              | где       Матрица задержек. Прогнозирование временных рядов  |                              |
|                         |                              | на один шаг  Дан временной ряд, содержащий  m  значений:     |                              |
|                         |                              | Нужно спрогнозировать значение   Одним из методов            |                              |
|                         |                              | прогнозирования на один шаг является метод построения        |                              |
|                         |                              | матрицы задержек . Суть метода заключается в следующем       |                              |
|                         |                              | [4-5]: выбирается некоторое число  p  – величина задержек,   |                              |
|                         |                              | подбирается зависимость значения   ряда от  p  предыдущих    |                              |
|                         |                              | значений:    Вид зависимости, как правило, выбирается        |                              |
|                         |                              | линейный    Для определения коэффициентов   строится матрица |                              |
|                         |                              | задержек:    Если  m  не кратно  p  то можно отбросить       |                              |
|                         |                              | несколько первых членов ряда. В последней строке выбирается  |                              |
|                         |                              | множество  S  – так называемое множество «ближайших соседей» |                              |
|                         |                              | к значению   Количество элементов   Коэффициенты   можно     |                              |
|                         |                              | найти методом наименьших квадратов или каким-либо другим     |                              |
|                         |                              | способом.    где    Из необходимого условия минимума         |                              |
|                         |                              | получаем систему уравнений для нахождения коэффициентов      |                              |
|                         |                              | Величина  p  выбирается эмпирически.  Можно воспользоваться  |                              |
|                         |                              | матричной записью выражения (13)    и вспомнить              |                              |
|                         |                              | аналитическое  решение  данной задачи:    Подставляя         |                              |
|                         |                              | полученный вектор   в выражение (11), получаем прогноз для   |                              |
|                         |                              | значения ряда   Далее метод прогнозирования на один шаг      |                              |
|                         |                              | будет использоваться для прогнозирования  коэффициентов      |                              |
|                         |                              | Фурье  на следующий период.     Долгосрочное прогнозирование |                              |
|                         |                              | временных рядов с помощью рядов Фурье   Постоянная длина     |                              |
|                         |                              | периода  Пусть дан временной ряд значений некоторого         |                              |
|                         |                              | показателя    при этом для значений последовательности (14)  |                              |
|                         |                              | наблюдается определенная периодичность. Для исследования     |                              |
|                         |                              | временного ряда (14) с постоянной периодичностью (например,  |                              |
|                         |                              | продажи какого-либо товара по неделям) предлагается [1-2]    |                              |
|                         |                              | использовать тригонометрические ряды Фурье. В этом случае    |                              |
|                         |                              | весь набор наблюдений  s  можно разбить на  m  периодов      |                              |
|                         |                              | длины  l+1 , а массив измерений (14) можно представить в     |                              |
|                         |                              | виде матрицы    размерности   в которой каждая строка        |                              |
|                         |                              | является значениями показателя  i -го периода (например,  i  |                              |
|                         |                              | -й недели).  Значения   объявляются значениями некоторой     |                              |
|                         |                              | функции   где аргумент   Функцию   предлагается заменить     |                              |
|                         |                              | частной суммой тригонометрического ряда Фурье по косинусам   |                              |
|                         |                              | [6].   $$display$$\begin{aligned} &f_{i}(t)\approx y_i(t),   |                              |
|                         |                              | \\ y_i(t) =                                                  |                              |
|                         |                              | \frac{a_0^i}{2}+&\sum_{k=1}^{N}a_k^i\cos⁡\Bigl(\frac{\pi      |                              |
|                         |                              | kt}{l}\Bigr). \end{aligned} \;\;\;(16)$$display$$  Таким     |                              |
|                         |                              | образом, получаем для каждого  i -го периода частичную сумму |                              |
|                         |                              | ряда Фурье со своими коэффициентами   для нахождения которых |                              |
|                         |                              | можно воспользоваться несколькими способами.       1 метод.  |                              |
|                         |                              | Минимизация квадратичной ошибки      где   Из условия        |                              |
|                         |                              | минимума    получаем систему уравнений для нахождения        |                              |
|                         |                              | коэффициентов   Количество слагаемых  N  в этом случае нужно |                              |
|                         |                              | выбирать не более длины периода  l .       2 метод.          |                              |
|                         |                              | Непосредственно из формулы    Если выбрать  N = l , то из    |                              |
|                         |                              | формул (16) для определения коэффициентов   получаем систему |                              |
|                         |                              | уравнений         3 метод. Численное интегрирование          |                              |
|                         |                              | Вспомним, что    Если длина периода  l>20 , то для           |                              |
|                         |                              | нахождения коэффициентов   можно воспользоваться формулами   |                              |
|                         |                              | численного интегрирования, при этом достаточно формулы       |                              |
|                         |                              | трапеций.    После того, как коэффициенты найдены, строится  |                              |
|                         |                              | прогноз для следующего периода по формуле       Переменная   |                              |
|                         |                              | длина периода  Пусть теперь длина периода не является        |                              |
|                         |                              | постоянной (например, количество дней в месяце). Пусть  l  – |                              |
|                         |                              | длина  i -го периода,  i=1, 2, ..., m . Для каждого периода  |                              |
|                         |                              | i  имеем последовательность значений    Пусть вновь          |                              |
|                         |                              | Выполним замену переменной    Обозначим    Тогда   Заменим   |                              |
|                         |                              | на стандартном промежутке   частной суммой                   |                              |
|                         |                              | тригонометрического ряда Фурье   $$display$$\begin{aligned}  |                              |
|                         |                              | &\widetilde{f}_{i}(x)\approx y_i(x), \\ y_i(t) = \frac{a_0^i |                              |
|                         |                              | }{2}+\sum_{k=1}^{N}&a_k^i\cos⁡(kx)+b_k^i\sin⁡(kx),             |                              |
|                         |                              | \end{aligned} \;\;\;(19)$$display$$  где    Коэффициенты     |                              |
|                         |                              | так же, как и для случая постоянных значений длин периодов,  |                              |
|                         |                              | можно найти из условия минимизации квадратичной ошибки       |                              |
|                         |                              | где   Количество слагаемых  N  в этом случае нужно выбирать  |                              |
|                         |                              | не более половины длины периода  l . Также можно посчитать   |                              |
|                         |                              | коэффициенты непосредственно из формул (19), либо, при       |                              |
|                         |                              | больших длинах периода, можно воспользоваться формулами      |                              |
|                         |                              | трапеций.  Таким образом, способ нахождения коэффициентов    |                              |
|                         |                              | Фурье для каждого периода зависит от постоянства длин        |                              |
|                         |                              | периодов и от их длины. Значения найденных  коэффициентов  в |                              |
|                         |                              | зависимости от номера периода рассматриваем как  временные   |                              |
|                         |                              | ряды , которые нужно спрогнозировать на один следующий шаг.  |                              |
|                         |                              | Коэффициенты ряда Фурье    прогнозируются с помощью матрицы  |                              |
|                         |                              | задержек (для каждого коэффициента строится своя матрица     |                              |
|                         |                              | задержек). Далее, используя полученные значения этих         |                              |
|                         |                              | коэффициентов, можно построить прогноз на следующий период   |                              |
|                         |                              | по формуле   $$display$$\begin{aligned} y_{m+1}(t) = &\frac{ |                              |
|                         |                              | a_0^{m+1}}{2}+\sum_{k=1}^{N}a_k^{m+1}\cos⁡(kx)+b_k^{m+1}\sin  |                              |
|                         |                              | ⁡(kx), \\ &x_t=\frac{2\pi t}{l_{m+1}}-\pi, \;\;               |                              |
|                         |                              | t=1,2,...,l_{m+1}. \end{aligned}\;\;\; (21)$$display$$       |                              |
|                         |                              | Резюмируем:  для долгосрочного прогнозирования временных     |                              |
|                         |                              | рядов       Наблюдения каждого периода (каждой недели или    |                              |
|                         |                              | каждого месяца)   объявляются значениями некоторой функции   |                              |
|                         |                              | Функция   заменяется частной суммой ряда Фурье   Из условия  |                              |
|                         |                              | минимума квадратичной ошибки (20) или каким-либо другим      |                              |
|                         |                              | способом находятся коэффициенты ряда Фурье для  известных    |                              |
|                         |                              | периодов   Найденные коэффициенты рассматриваются как        |                              |
|                         |                              | временные ряды в зависимости от номера периода   Для         |                              |
|                         |                              | каждого  коэффициента строится  своя  матрица задержек и     |                              |
|                         |                              | делается прогноз этого коэффициента на следующий период   По |                              |
|                         |                              | спрогнозированным коэффициентам Фурье по формуле (21)        |                              |
|                         |                              | находятся значения неизвестной функции (временного ряда) для |                              |
|                         |                              | следующего периода       Немного кода  Попробуем применить   |                              |
|                         |                              | данный алгоритм на реальных данных. Возьмем с сайта          |                              |
|                         |                              | Росстата  среднюю зарплату в России по месяцам за период с   |                              |
|                         |                              | 2013-го по 2018-й г.                                         |                              |
|                         |                              |                          Код                                 |                              |
|                         |                              |                                                              |                              |
|                         |                              |                           Преобразуем данные в удобный       |                              |
|                         |                              | формат в виде ряда и построим график                         |                              |
|                         |                              |                          Код                                 |                              |
|                         |                              |                                                              |                              |
|                         |                              |                           Разделим данные на тренировочный   |                              |
|                         |                              | (2013 — 2017 гг.) и тестовый (2018 г.) наборы.      Перейдем |                              |
|                         |                              | к реализации алгоритма. Наш временной ряд состоит из 5-ти    |                              |
|                         |                              | периодов  одинаковой длины  (12 месяцев), поэтому будем      |                              |
|                         |                              | представлять неизвестную функцию в виде формулы (16). Для    |                              |
|                         |                              | поиска коэффициентов   из формул (17) получаются системы     |                              |
|                         |                              | уравнений                                                    |                              |
|                         |                              |                          Код                                 |                              |
|                         |                              |                                                              |                              |
|                         |                              |                       Далее реализуем функцию для            |                              |
|                         |                              | преобразования входного ряда в матрицу, функции построения   |                              |
|                         |                              | матрицы задержек, поиска ближайших соседей и прогнозирования |                              |
|                         |                              | на один шаг.                                                 |                              |
|                         |                              |                          Код                                 |                              |
|                         |                              |                                                              |                              |
|                         |                              |                       Наконец реализуем функцию поиска       |                              |
|                         |                              | коэффициентов для неизвестного периода и функцию             |                              |
|                         |                              | прогнозирования временного ряда на следующий период.         |                              |
|                         |                              |                          Код                                 |                              |
|                         |                              |                                                              |                              |
|                         |                              |                       Предскажем тестовый период и сравним с |                              |
|                         |                              | реальными результатами.                                      |                              |
|                         |                              |                          Код                                 |                              |
|                         |                              |                                                              |                              |
|                         |                              |                           Весь код и данные доступны по      |                              |
|                         |                              | ссылке  на гитхабе.     Список литературы     П.А. Гатин,    |                              |
|                         |                              | В.Н. Семенова, Исследование циклических временных рядов с    |                              |
|                         |                              | переменной цикличностью методом рядов Фурье, Вестник ДИТИ,   |                              |
|                         |                              | 2018. – № 1(15). – С.91-96    П.А. Гатин,  В.Н. Семенова, Об |                              |
|                         |                              | одном подходе к исследованию временных рядов с постоянной    |                              |
|                         |                              | цикличностью, ДИТИ НИЯУ МИФИ, 2017. – С. 48-51    А.Н.       |                              |
|                         |                              | Колмогоров, С.В. Фомин – Элементы теории функций и           |                              |
|                         |                              | функционального анализа    В.Н. Афанасьев, М.М. Юзбашев,     |                              |
|                         |                              | Анализ временных рядов и прогнозирование – М.: Финансы и     |                              |
|                         |                              | статистика, Инфра-М, 2010. – 320 c.    А.Ю. Лоскутов, О.Л.   |                              |
|                         |                              | Котляров, И.А. Истомин, Д.И. Журавлев. Проблемы нелинейной   |                              |
|                         |                              | динамики. III. Локальные методы прогнозирования временных    |                              |
|                         |                              | рядов. Вестн. Моск. ун-та, сеp. Физ.-астр., 2002, No6,       |                              |
|                         |                              | c.3–21.    О.С. Амосов, О.С., Муллер Н.В. Исследование       |                              |
|                         |                              | временных рядов с применением методов фрактального и вейвлет |                              |
|                         |                              | анализа, Интернет-журнал «НАУКОВЕДЕНИЕ», Выпуск 3            |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |    SpaceX объявил первый     | Эрик Ральф ,  опубликовано 15 марта 2021 г. Первоисточник:   |            Космос            |
|        t/547226/        | орбитальный запуск Starship  | NASASpaceflight сообщил , что SpaceX хочет осуществить       |     Космические запуски      |
|                         |  летом 2021 года. Teslarati  | попытку орбитального запуска Starship уже 1 июля 2021 года.  |           Starship           |
|                         |                              | Менее чем через четыре месяца! В недвусмысленных выражениях  |            SpaceX            |
|                         |                              | сформулирована внутренняя  цель  компании, а это означает,   |                              |
|                         |                              | что высока вероятность того, что первая попытка запуска      |                              |
|                         |                              | космического корабля SpaceX на орбиту не произойдет в июле.  |                              |
|                         |                              | Тем не менее, существование цели подразумевает, что SpaceX   |                              |
|                         |                              | видит реальный, жизнеспособный путь — пусть и трудный — к    |                              |
|                         |                              | первому запуску Starship на орбиту всего через четыре        |                              |
|                         |                              | месяца. Иными словами, SpaceX считает, что у нее есть шесть  |                              |
|                         |                              | месяцев запаса времени, чтобы пройти  предварительные        |                              |
|                         |                              | испытания сверхтяжелых ускорителей (возможно, включая один   |                              |
|                         |                              | или несколько прыжков), оценить модернизированную            |                              |
|                         |                              | конструкцию Starship (начиная с SN15), завершить орбитальный |                              |
|                         |                              | стартовый комплекс и доставить до конца года — два десятка   |                              |
|                         |                              | двигателей Raptor,  способных вывести корабль на орбиту.     |                              |
|                         |                              | Хотя пока неясно, также возможно, что эта цель потребует от  |                              |
|                         |                              | SpaceX квалификации и поставки первых летных двигателей      |                              |
|                         |                              | Raptor Vacuum — еще одна серьезная проблема среди многих.    |                              |
|                         |                              | Ссылка на твитт Само по себе выполнение любого из этих       |                              |
|                         |                              | великих инженерных достижений было бы впечатляющим.          |                              |
|                         |                              | Выполнение всех их одновременно — даже если результат будет  |                              |
|                         |                              | достигнут больше чем через пять месяцев — было бы            |                              |
|                         |                              | экстраординарным событием. Таким образом, справедливо        |                              |
|                         |                              | предположить, что SpaceX не выдержит своего невероятно       |                              |
|                         |                              | амбициозного графика разработки, даже если компания почти    |                              |
|                         |                              | всегда делает то, что намеревается сделать. Заявленная цель  |                              |
|                         |                              | означает, что существует вполне реальная вероятность того,   |                              |
|                         |                              | что Starship достигнет орбиты до конца 2021 года. Цели,      |                              |
|                         |                              | которую генеральный директор SpaceX Илон Маск и главный      |                              |
|                         |                              | операционный директор/президент Гвинн Шотвелл повторяли в    |                              |
|                         |                              | течение последних нескольких месяцев. Starship отделяется от |                              |
|                         |                              | Super Heavy. (SpaceX) Даже после первого выхода на орбиту    |                              |
|                         |                              | SpaceX, скорее всего, продолжит разработку Starship          |                              |
|                         |                              | практически без изменений, рассматривая орбитальный режим    |                              |
|                         |                              | как еще одну «песочницу» для тестирования и доработки        |                              |
|                         |                              | прототипов Starship. Учитывая множество неординарных         |                              |
|                         |                              | проблем, которые SpaceX необходимо будет решить, чтобы       |                              |
|                         |                              | достичь орбиты, есть высокий шанс, что первая попытка        |                              |
|                         |                              | орбитального запуска Starship или Super Heavy потерпит       |                              |
|                         |                              | неудачу. Если даже запуск будет изначально успешным, вполне  |                              |
|                         |                              | вероятно, что Super Heavy потерпит неудачу при первом        |                              |
|                         |                              | гиперзвуковом запуске и попытке приземления. Если Starship   |                              |
|                         |                              | достигнет орбиты целым, большое количество проблем может     |                              |
|                         |                              | «убить» его в космосе. Если он «проживет» достаточно долго,  |                              |
|                         |                              | совершит полет по 90-минутной орбите и перейдет на           |                              |
|                         |                              | траекторию входа в атмосферу, спуска и посадки, первый вход  |                              |
|                         |                              | в атмосферу Starship с орбитальной скоростью — одна из самых |                              |
|                         |                              | больших проблем в аэрокосмической технике — может  легко     |                              |
|                         |                              | уничтожить космический корабль. Если Starship каким-то       |                              |
|                         |                              | образом пройдет через торможение в атмосфере с первой        |                              |
|                         |                              | попытки, напряжения орбитального космического полета и этот  |                              |
|                         |                              | вход могут помешать его двигателям Raptor нормально          |                              |
|                         |                              | отработать во время маневра переворота и приземления. Но     |                              |
|                         |                              | можно с уверенностью сказать, что даже когда SpaceX          |                              |
|                         |                              | нацеливается на орбитальный полет, траектория разработки по- |                              |
|                         |                              | прежнему является продолжением существующей программы        |                              |
|                         |                              | испытаний и итеративного процесса разработки. Хотя           |                              |
|                         |                              | орбитальные Starship, вероятно, будут намного дороже, чем их |                              |
|                         |                              | суборбитальные собратья, различия достаточно малы, поэтому   |                              |
|                         |                              | SpaceX, несомненно, продолжит расширять границы возможного и |                              |
|                         |                              | рискнет потерять прототипы, чтобы как можно раньше выявлять  |                              |
|                         |                              | и исправлять ошибки и недостатки конструкции. По пути,       |                              |
|                         |                              | несомненно, в процессе испытаний будет больше количество     |                              |
|                         |                              | событий в стиле SN8/SN9/SN10. Однако, учитывая историю       |                              |
|                         |                              | развития Starship, начинает казаться, что только катастрофа  |                              |
|                         |                              | помешает SpaceX запустить Starship на орбиту до конца года.  |                              |
|                         |                              | Первоисточник:                                               |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |   Случайности не случайны    | Можно ли достоверно предсказать будущее хоть на немного      |          postgresql          |
| pany/tensor/blog/547108 |                              | вперед? Иногда - вполне, надо только много везения... или    |             sql              |
|            /            |                              | немного знаний. Сегодня пронаблюдаем сеанс черной магии с    |            random            |
|                         |                              | последующим разоблачением, или  «Я угадаю твой рандом с 3    |            double            |
|                         |                              | строк!» : Немного магии Ты угадал следующий random оба       |                              |
|                         |                              | раза?.. Что же там "под капотом"? Но как и почему это        |                              |
|                         |                              | работает? Обратимся к  документации : Функция   использует   |                              |
|                         |                              | простой  линейный конгруэнтный алгоритм . Она работает       |                              |
|                         |                              | быстро, но  не подходит для криптографических приложений ;   |                              |
|                         |                              | более безопасная альтернатива имеется в модуле  pgcrypto .   |                              |
|                         |                              | Если воспользоваться функцией   и вызывать её с одним и тем  |                              |
|                         |                              | же аргументом, результаты последующих вызовов   в текущем    |                              |
|                         |                              | сеансе будут повторяться.   Собственно, мы только что        |                              |
|                         |                              | убедились, что если "случайности не случайны", то для        |                              |
|                         |                              | криптографии тут места точно нет. Но что это за "простой     |                              |
|                         |                              | линейный алгоритм"? We Need To Go Deeper Идем на официальное |                              |
|                         |                              | github-зеркало PostgreSQL  и находим определение   в         |                              |
|                         |                              | float.c : Уже интересно - оказывается из  -аргумента         |                              |
|                         |                              | используется всего  48 бит . А теперь поднимемся  чуть выше  |                              |
|                         |                              | : Название функции   подсказывает нам, что мы на верном пути |                              |
|                         |                              | - найдем ее в  erand48.c : Еще поднимемся на шаг за          |                              |
|                         |                              | _dorand48 : А вот и волшебные константы! Так что такое       |                              |
|                         |                              | random()? Теперь у нас достаточно информации, чтобы понять,  |                              |
|                         |                              | как вычисляется значение random(). "Посев" При первом        |                              |
|                         |                              | запросе   в рамках PostgreSQL-процесса  три 16-битных слова  |                              |
|                         |                              | (48 бит) инициализируются значениями  -таймстампа            |                              |
|                         |                              | "проксоренных" с PID процесса: В последующем именно этот     |                              |
|                         |                              | массив можно "засеять" своим значением с помощью  . Шаг      |                              |
|                         |                              | вычислений При каждом следующем обращении этот массив        |                              |
|                         |                              | рассматриваются как единое 48-битное число, которое          |                              |
|                         |                              | умножается на  0x0005deece66d  и добавляется  0x000b .       |                              |
|                         |                              | Результат сохраняется обратно и возвращается в виде  ,       |                              |
|                         |                              | состоящего из младших 48 бит. Эмулируем шаг вычислений на    |                              |
|                         |                              | SQL Фактически, надо просто взять последнее известное        |                              |
|                         |                              | значение  , умножить  да сложить, но есть нюансы. double     |                              |
|                         |                              | precision (double) <-> bigint (uint64) В C-исходниках одни и |                              |
|                         |                              | те же двоичные данные используются то как  ,то как   - в SQL |                              |
|                         |                              | мы так не можем. Зато можем призвать на помощь знание        |                              |
|                         |                              | стандарта хранения чисел с плавающей точкой IEEE754  и       |                              |
|                         |                              | математику. По стандарту, для хранения мантиссы используются |                              |
|                         |                              | младшие 52 бита. То есть наш 48-битный результат   прямо там |                              |
|                         |                              | и лежит, причем порядок обнулен - а, значит, достаточно      |                              |
|                         |                              | умножить его на 2^48 , и мы получим целочисленное            |                              |
|                         |                              | -представление: Аналогично в обратную сторону: Псевдодлинная |                              |
|                         |                              | арифметика Теперь достаточно лишь умножить на                |                              |
|                         |                              | 0x0005deece66d , и... Вполне понятно - взяли 48-битное       |                              |
|                         |                              | число, умножили на 35-битное -  в 64 бита не влезли . Но нам |                              |
|                         |                              | же и не нужно даже 64 бита - всего лишь младшие 48! Умножим  |                              |
|                         |                              | наши значения "столбиком" как  12-битные слова  (поскольку   |                              |
|                         |                              | 16-битные все-таки при умножении вылезают в знаковый бит) с  |                              |
|                         |                              | ограничением разрядности: Осталось только это все сложить,   |                              |
|                         |                              | добавить  0x000b , отбросить ненужные старшие биты и         |                              |
|                         |                              | поделить, и - результат вы уже видели в самом начале статьи. |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |    PHP Дайджест № 200 (22    | Фото:  Grégoire Gaonach     Свежая подборка со ссылками на   |           дайджест           |
|        t/547158/        |   февраля – 15 марта 2021)   | новости и материалы. В выпуске: Объекты в инициализаторах,   |         php-дайджест         |
|                         |                              | неймспейсы для расширений, и другие RFC предложения для PHP  |             PHP              |
|                         |                              | 8.1. Обновлен PSR-11, предложен PSR ClockInterface. Порция   |           Symfony            |
|                         |                              | полезных инструментов, видео, подкасты, статьи, и PHP        |           Laravel            |
|                         |                              | Дайджест Live в 20:00 МСК.    Приятного чтения!      Новости |             Yii              |
|                         |                              | и релизы     PHP 8.0.3 ,  PHP 7.4.16 .   Предложен на        |           PHP 8.1            |
|                         |                              | рассмотрение новый стандарт PSR ClockInterface  Интерфейс    |                              |
|                         |                              | нужен, чтобы был единый способ получения текущего времени,   |                              |
|                         |                              | который можно легко мокать в тестах.    В черновике          |                              |
|                         |                              | следующий вариант:       Опубликованы обновления стандарта   |                              |
|                         |                              | PSR-11 Container Interface  — Как и в случае с другими       |                              |
|                         |                              | стандартами, выпущены сразу две версии  1.1 , в которой      |                              |
|                         |                              | добавлены типы параметров, и  2.0  — с возвращаемым типом.   |                              |
|                         |                              | Уязвимость в Git clone  — Клонирование специально            |                              |
|                         |                              | подготовленного репозитория может вызвать выполнение кода во |                              |
|                         |                              | время клонирования без вашего ведома. Рекомендуется обновить |                              |
|                         |                              | Git до 2.30.2.   PhpStorm 2021.1 EAP  — Программа раннего    |                              |
|                         |                              | доступа в самом разгаре: добавили предпросмотр PHP-файлов в  |                              |
|                         |                              | редакторе, поддержку JSONPath и    другие улучшения . Как    |                              |
|                         |                              | обычно, EAP билды можно использовать бесплатно.   Composer   |                              |
|                         |                              | 1.x больше не поддерживается  — Начиная с мая 2021 доступ к  |                              |
|                         |                              | старым API на packagist.org будет ограничен.      PHP        |                              |
|                         |                              | Internals     [RFC] New in initializers  В текущих версиях   |                              |
|                         |                              | PHP можно использовать только константные значения в         |                              |
|                         |                              | инициализаторах, то есть в дефолтных значениях свойств,      |                              |
|                         |                              | параметров, констант. Если нужно не константное значение, то |                              |
|                         |                              | свойства инициализируют в конструкторе, а аргументы — в теле |                              |
|                         |                              | методов. С константами таких вариантов сейчас вообще нет.    |                              |
|                         |                              | Никита Попов предлагает сделать возможным использовать       |                              |
|                         |                              | объекты в качестве дефолтных значений свойств, параметров, а |                              |
|                         |                              | также для любых констант и статических переменных.      Пока |                              |
|                         |                              | предложение ограничивается только оператором  , но           |                              |
|                         |                              | реализация позволяет в будущем расширить для любых           |                              |
|                         |                              | выражений.    Документ содержит много подробностей и         |                              |
|                         |                              | нюансов. Например, как работает рефлексия, трейты, анонимные |                              |
|                         |                              | классы, использование в атрибутах для решения проблемы       |                              |
|                         |                              | вложенности, и прочее. Рассмотрим подробнее на стриме  PHP   |                              |
|                         |                              | Дайджест Live .     [RFC] Namespaces in bundled PHP          |                              |
|                         |                              | extensions  Классы и функции, предоставляемые в PHP, в       |                              |
|                         |                              | настоящее время находятся в глобальном пространстве имен.    |                              |
|                         |                              | Идея почистить и распределить все по неймспейсам обсуждалась |                              |
|                         |                              | давно.    В данном RFC предлагается отказаться от префиксов  |                              |
|                         |                              | вендоров, в том числе PHP. А неймспейсами должны стать имена |                              |
|                         |                              | расширений. То есть класс   станет  .    Пока правда, это    |                              |
|                         |                              | касается только новых символов, а миграция существующих в    |                              |
|                         |                              | рамках этого RFC не затрагивается. Но в примерах приведены   |                              |
|                         |                              | возможные трансформации:    ->     ->  .  Звучит как идея    |                              |
|                         |                              | для PHP 9.   [RFC] Static variables in inherited methods     |                              |
|                         |                              | Допустим, есть метод, в котором используется статическая     |                              |
|                         |                              | переменная. Если отнаследоваться от класса с этим методом,   |                              |
|                         |                              | то для наследника эта статическая переменная будет новой.    |                              |
|                         |                              | RFC предлагает сделать единственным набор статических        |                              |
|                         |                              | переменных для метода, независимо от того наследуется он или |                              |
|                         |                              | нет.                                                         |                              |
|                         |                              |                          Скрытый текст                       |                              |
|                         |                              |                                                              |                              |
|                         |                              |                           [RFC] Fibers   Стартовало          |                              |
|                         |                              | голосование по файберам. Подробнее о том, что это было  на   |                              |
|                         |                              | канале . Если коротко: это небольшое, но важное улучшение    |                              |
|                         |                              | генераторов, которое позволит писать асинхронный код на PHP  |                              |
|                         |                              | проще. Например, вот так:    Среди голосовавших против трое  |                              |
|                         |                              | мейнтенеров Swoole. Они считают, что в Swoole уже пройден    |                              |
|                         |                              | весь путь по асинхронному PHP, а файберы — это попытка       |                              |
|                         |                              | начать заново, и их добавление не несет пользы без других    |                              |
|                         |                              | компонентов.    Также против голосовал Joe Watkins, так как  |                              |
|                         |                              | по его мнению  файберы не обеспечивают использование по      |                              |
|                         |                              | полной всем тем, что сегодня может предложить хард/софт. В   |                              |
|                         |                              | то время как расширение  krakjoe/parallel  вполне могло бы.  |                              |
|                         |                              | Здравое зерно в этих рассуждениях есть, и тем не менее,      |                              |
|                         |                              | файберы — реальный шаг в сторону асинхронных возможностей,   |                              |
|                         |                              | который не противоречит ни Swoole ни parallel.   [RFC]       |                              |
|                         |                              | noreturn type   Авторы Psalm и PHPStan предлагают добавить   |                              |
|                         |                              | новый тип в PHP —  .    Такой тип указывает на то, что       |                              |
|                         |                              | функция либо всегда бросает исключение либо завершает        |                              |
|                         |                              | выполнение, то есть вызывает  ,  ,  .      Подобный тип есть |                              |
|                         |                              | в Hack, в Python, уже давно используется в самих Psalm,      |                              |
|                         |                              | PHPStan и в PhpStorm в виде атрибута   или через exitpoint   |                              |
|                         |                              | в .phpstormmeta.php .   [RFC] debug_backtrace_depth(int      |                              |
|                         |                              | $limit=0): int  — Предлагается новая функция                 |                              |
|                         |                              | debug_backtrace_depth(int $limit=0), которая возвращает      |                              |
|                         |                              | текущий уровень глубины стека вызовов. Может быть полезно    |                              |
|                         |                              | для отладки рекурсивных функций, например.    Сейчас можно   |                              |
|                         |                              | получить такое же поведение с помощью полифила:  .   [RFC]   |                              |
|                         |                              | println(string $data = ''): int  — Предлагается добавить     |                              |
|                         |                              | функцию  , которая выведет строку в   и завершит ее символом |                              |
|                         |                              | новой строки. Не  , конечно, но тоже занятно.                |                              |
|                         |                              | Инструменты     spiral/RoadRunner v2.0.0   — Мажорный релиз  |                              |
|                         |                              | сервера приложений для PHP на Golang.   QratorLabs/Smocky  — |                              |
|                         |                              | Обертка над расширением  runkit7  mock-ания статических      |                              |
|                         |                              | методов с поддержкой PHPUnit и возможностью откатить         |                              |
|                         |                              | изменения.   Сравнительный обзор библиотек для работы с      |                              |
|                         |                              | markdown .   phpize.online  — Инструмент для шаринга PHP-    |                              |
|                         |                              | кода по типу  3v4l.org  только с поддержкой SQL.             |                              |
|                         |                              | Symfony     symfony/runtime  — Новый экспериментальный       |                              |
|                         |                              | компонент отвязывает приложение от глобального состояния и   |                              |
|                         |                              | позволяет запускать его без изменений на PHP-FPM, CLI, PHP-  |                              |
|                         |                              | PM, Swoole и т. п.   В Symfony 6 минимальная версия PHP      |                              |
|                         |                              | будет 8.0   ansien/RapidFormBundle  — Пакет для быстрого     |                              |
|                         |                              | создания форм в Symfony, используя атрибуты PHP 8.           |                              |
|                         |                              | Прагматичная архитектура на Symfony   Деплой Symfony         |                              |
|                         |                              | приложения в Docker   CI/CD пайплайн для Symfony на GitLab   |                              |
|                         |                              | Неделя Symfony #741 (8-14 марта 2021)      Laravel           |                              |
|                         |                              | Разбор критической RCE уязвимости в Laravel <= v8.4.2 с      |                              |
|                         |                              | debug mode  — Хитрая атака с использованием   /   и          |                              |
|                         |                              | пассивного режима FTP. А ошибка была в  facade/ignition .    |                              |
|                         |                              | Закончилась поддержка Laravel 7  — А вот шестая версия       |                              |
|                         |                              | фреймворка это LTS и поддерживается до сентября 2022.        |                              |
|                         |                              | spatie/laravel-remote  — Запускает команды Artisan на        |                              |
|                         |                              | удаленном сервере с помощью  spatie/ssh .    Стрим с Freek   |                              |
|                         |                              | Van der Herten , в котором он разрабатывает пакет c нуля.    |                              |
|                         |                              | squirephp/squire  — Статические Eloquent модели с полезными  |                              |
|                         |                              | данными (список стран, аэропорты, и др.).   Пошаговое        |                              |
|                         |                              | руководство по созданию первого приложения для Laravel       |                              |
|                         |                              | Laravel–Дайджест (22 февраля – 7 марта 2021)      Yii        |                              |
|                         |                              | Новости Yii 2021, выпуск 1   Релезы пакетов Yii 3:           |                              |
|                         |                              | yiisoft/network-utilities ,  yiisoft/csrf .      Статьи      |                              |
|                         |                              | Полное руководство по FFI в PHP   PHP.Watch:  Экранирование  |                              |
|                         |                              | символов и числовые нотации в PHP .   Советы по тестированию |                              |
|                         |                              | на примерах в PHP  — Как делать надо и как не надо.          |                              |
|                         |                              | Matthias Noback:  Как понять где должен быть сервис — на     |                              |
|                         |                              | уровне приложения или домена?  — Если он будет               |                              |
|                         |                              | использоваться на уровне инфраструктуры, то тогда он         |                              |
|                         |                              | принадлежит уровню приложения.   Бенчмарки PHP на            |                              |
|                         |                              | процессорах arm64 vs x86_64  — AWS на ARM дешевле на 20% и в |                              |
|                         |                              | некоторых случаях быстрее.   Переход от nginx+fpm к Swoole   |                              |
|                         |                              | увеличил производительность нашего PHP API на 91%  — История |                              |
|                         |                              | ребяток из  github.com/appwrite .   Настраиваем отладку в    |                              |
|                         |                              | PHP с Xdebug 3, Docker Compose и PhpStorm .   Как устроен CI |                              |
|                         |                              | в Laminas  — GitHub Actions для поддержки, тестирования и    |                              |
|                         |                              | релиза 200+ пакетов.   Когда объектов недостаточно  —        |                              |
|                         |                              | Интересные размышления на тему ООП.     Run, config, run:    |                              |
|                         |                              | как мы ускорили деплой конфигов в Badoo     Бэкдор во        |                              |
|                         |                              | взломанном 1С-Битрикс: под угрозой сотни сайтов     Как мы   |                              |
|                         |                              | быстро распилили монолит, когда командам стало тесно         |                              |
|                         |                              | Видео       Большой стрим PHP-сообщества  — Никита Попов,    |                              |
|                         |                              | Александр Макаров, Валентин Удальцов и много других.         |                              |
|                         |                              | Стрим Дмитрия Елисеева:  О сложности домена и о провайдерах  |                              |
|                         |                              | в PHP    Антон Титов:  Оркестрируй это! Описываем сложные    |                              |
|                         |                              | бизнес процессы на PHP .   PHP Release Radar #6: Bref 1.0  — |                              |
|                         |                              | C Matthieu Napoli.      Подкасты     PHP Internals News #77  |                              |
|                         |                              | — Про добавленную в PHP 8.1 функцию fsync с автором David    |                              |
|                         |                              | Gebler.   PHP Internals News #78  — C  Andreas Heigl  о      |                              |
|                         |                              | переносе документации PHP в Git. Кстати, если не видели, то  |                              |
|                         |                              | у Андреаса был  отличный доклад на PHP Russia .              |                              |
|                         |                              | Пятиминутка PHP №87: PHP в 2021 году     Пятиминутка PHP     |                              |
|                         |                              | №86: План обновления на PHP 8     Подкаст Между скобок 12:   |                              |
|                         |                              | Антон Губарев – Работа архитектора      Сообщество     PHP 8 |                              |
|                         |                              | и развитие языка в 30 вопросах и ответах   80+ докладов и    |                              |
|                         |                              | статей, которые запомнились PHP-сообществу в 2020 году       |                              |
|                         |                              | После небольшого перерыва возвращаемся со стримом и ведущим  |                              |
|                         |                              | Валентином Удальцовым!    Будет разбор новостей и ссылок из  |                              |
|                         |                              | выпуска с подробностями и деталями, мнение Валентина по RFC  |                              |
|                         |                              | и статьям. Интересное но не вошедшее в выпуск, результаты    |                              |
|                         |                              | розыгрыша и новый конкурс со слониками.    Начало в 20:00    |                              |
|                         |                              | Москва, Минск / 19:00 Киев.      Если вы заметили ошибку или |                              |
|                         |                              | неточность — сообщите, пожалуйста, в  личку хабра  или       |                              |
|                         |                              | телеграм .    Больше новостей и комментариев в Telegram-     |                              |
|                         |                              | канале  PHP Digest .       Прислать ссылку    Поиск ссылок   |                              |
|                         |                              | по всем дайджестам   ←  Предыдущий выпуск: PHP-Дайджест №    |                              |
|                         |                              | 199                                                          |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |   Уязвимости Android 2020    | Привет, Хабр. Делимся с вами полезной статьей, автором       |           android            |
|  pany/otus/blog/547160/ |                              | которой является Александр Колесников.  Операционная система |     android development      |
|                         |                              | Android считается одной из самых защищенных операционных     |          уязвимости          |
|                         |                              | систем в наше время. Разработчики этой ОС на своем           |                              |
|                         |                              | официальном сайте рассказывают, что в ОС сделано очень много |                              |
|                         |                              | работы для того чтобы создание традиционных эксплойтов было  |                              |
|                         |                              | нерентабельно, сложно, невозможно. Возникает вопрос, а есть  |                              |
|                         |                              | ли вообще уязвимости в ОС, которые могли бы привести к       |                              |
|                         |                              | компрометации системы? Будут ли эти уязвимости отличаться от |                              |
|                         |                              | стандартных уязвимостей программного обеспечения? Можно ли   |                              |
|                         |                              | найти эти уязвимости в CWE TOP 25? Или в Android уникальные  |                              |
|                         |                              | уязвимости? Эта статья попытка собрать воедино несколько     |                              |
|                         |                              | уязвимостей платформы Android в разных частях её архитектуры |                              |
|                         |                              | за 2020 год. Архитектура ОС Android Без описания хотя бы     |                              |
|                         |                              | поверхностно работы этой ОС не обойтись, но постараемся      |                              |
|                         |                              | сделать это максимально быстро. На картинке ниже             |                              |
|                         |                              | представлена архитектура ОС Android. Подробное её описание   |                              |
|                         |                              | можно найти  здесь . Нас же интересует всего 2 факта об      |                              |
|                         |                              | архитектуре: Каждый уровень архитектуры отделен друг от      |                              |
|                         |                              | друга и выполняет функции на различных уровнях привилегий;   |                              |
|                         |                              | Все уровни Android впитали в себя самое лучшее, что было на  |                              |
|                         |                              | момент создания ОС из других open source проектов с точки    |                              |
|                         |                              | зрения безопасности. Если объединить эти два факта, то       |                              |
|                         |                              | получается, что для того чтобы атаковать эту операционную    |                              |
|                         |                              | систему необходимо, чтобы у атакующего было в арсенале по 1  |                              |
|                         |                              | уязвимой функции на каждом из уровней ОС. Это достаточно     |                              |
|                         |                              | серьезно усложняет процесс создания эксплойта для атаки на   |                              |
|                         |                              | ОС. Однако, все равно ресечеры со всего мира находят способы |                              |
|                         |                              | как можно атаковать эту ОС и делают это достаточно успешно.  |                              |
|                         |                              | Под эту деятельность даже есть отдельное  мероприятие .      |                              |
|                         |                              | CVE-2020-0082 Уязвимость в операционной системе Android 10.  |                              |
|                         |                              | Если обратиться к общей классификации уязвимостей  CWE Top   |                              |
|                         |                              | 25 , то уязвимость можно отнести к классу  CWE-502 . Данный  |                              |
|                         |                              | класс уязвимостей может возникать как в веб, так и в         |                              |
|                         |                              | десктопных приложениях. Основной особенностью уязвимости     |                              |
|                         |                              | считается тот факт, что при помощи нее можно абсолютно       |                              |
|                         |                              | незаметно для ОС и пользователя внедрить свой код в уязвимое |                              |
|                         |                              | приложение. Возможно это за счет того, что объекты, которые  |                              |
|                         |                              | подвергаются процедуре десериализации или сборке могут       |                              |
|                         |                              | описывать функцию-сборщик, которая может выполнять           |                              |
|                         |                              | производные функции. Уязвимость известна довольно давно и    |                              |
|                         |                              | при неосторожном использовании функций десериализации может  |                              |
|                         |                              | стать критической.  В ОС Android так и случилось. При        |                              |
|                         |                              | успешном использовании уязвимости можно захватить контроль   |                              |
|                         |                              | над привилегированным пользователем system_server.           |                              |
|                         |                              | Эксплуатация уязвимости возможна через создание объекта      |                              |
|                         |                              | Parsel для " ". CVE-2020-8913 Уязвимость в Android Play Сore |                              |
|                         |                              | библиотеке. Уязвимый receiver позволял перезаписывать файлы  |                              |
|                         |                              | и запускать произвольный код в ОС. Запуск кода снова         |                              |
|                         |                              | возможен за счет десериализации данных, которые передаются   |                              |
|                         |                              | за счет объекта Parcel. Фрагмент эксплойта с использованием  |                              |
|                         |                              | приложения Google Chrome: CVE-2020-8899 Уязвимость в         |                              |
|                         |                              | библиотеке для разбора картинок. Нельзя 100% утверждать, что |                              |
|                         |                              | это уязвимость Android, но все же эта версия ОC очень        |                              |
|                         |                              | популярна. Используется на телефонах Samsung.  Как известно, |                              |
|                         |                              | различные вендоры мобильных устройств очень часто создают    |                              |
|                         |                              | собственные модификации ОС Android  и благополучно забывают  |                              |
|                         |                              | о них .  Уязвимость в данном случае заключается в том, что   |                              |
|                         |                              | происходит повреждение памяти процесса и приложение, которое |                              |
|                         |                              | использует уязвимую функцию для работы с изображениями.      |                              |
|                         |                              | Падение эксплуатабельно и можно выполнять любые операции от  |                              |
|                         |                              | имени привилегированного пользователя ОС. Уязвимость         |                              |
|                         |                              | относится к классу  CWE-787 . CVE-2020-0022 Уязвимость в     |                              |
|                         |                              | BlueTooth стеке ОС Android 8 и 9. Уязвимость позволяет       |                              |
|                         |                              | обрушить ОС. Класс уязвимости  CWE-787 . Некорректная        |                              |
|                         |                              | обработка длины пакета. Для триггера уязвимости достаточно   |                              |
|                         |                              | отправить фрагментированные широковещательные запросы длиной |                              |
|                         |                              | 300 и 33 байт. Выводы Похоже, что даже разделение            |                              |
|                         |                              | привилегий, использование самых передовых технологий не      |                              |
|                         |                              | спасает от самых распространенных ошибок программного        |                              |
|                         |                              | обеспечения. ОС можно атаковать и классическими эксплойтами  |                              |
|                         |                              | на повреждение памяти и более современными аналогами,        |                              |
|                         |                              | которые используют механизмы ОС.  Совсем скоро у нас         |                              |
|                         |                              | стартуют курсы по Android-разработке двух уровней. Узнать    |                              |
|                         |                              | подробнее о курсах можно по ссылкам ниже.  -  Android        |                              |
|                         |                              | Developer. Basic     -  Android Developer. Professional      |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  FIRE — на пенсию молодым +  | Зарплата в IT выгодно отличается от других сфер рынка, а     |           финансы            |
|  pany/gms/blog/547162/  |       полезные ссылки        | благодаря доступности финансовых инструментов личным         |            g-mate            |
|                         |                              | капиталом можно управлять эффективнее и проще. Как итог — у  |         карьера в IT         |
|                         |                              | разработчиков есть крутая возможность самостоятельно         |          накопления          |
|                         |                              | накопить достаточно денег и выйти на пенсию сильно раньше,   |             FIRE             |
|                         |                              | чем в среднем. Так ли это?  Размышляем вместе с              |                              |
|                         |                              | финансистами, аналитиками и просто IT-специалистами из       |                              |
|                         |                              | России и за ее пределами о FIRE*. 20 полезных ссылок, чтобы  |                              |
|                         |                              | разобраться в теме, внутри.     Присоединяйтесь к обсуждению |                              |
|                         |                              | и делитесь своим опытом.        * FIRE (financial            |                              |
|                         |                              | independence, retired early) — концепция жизни, основанная   |                              |
|                         |                              | на финансовой независимости и раннем уходе на пенсию         |                              |
|                         |                              | FIRE — financial independence retire early   Что значит      |                              |
|                         |                              | «пенсия» для современного человека?   «Экономическая теория  |                              |
|                         |                              | оперирует понятиями человеческого и финансового капитала.    |                              |
|                         |                              | Человеческий капитал — стоимость всех будущих трудовых       |                              |
|                         |                              | доходов человека. Например, программист Алексей начал свою   |                              |
|                         |                              | карьеру в 25 лет с заработной платой 100,000 рублей, он      |                              |
|                         |                              | планирует работать до 65 лет. Даже если за 40 лет ему ни     |                              |
|                         |                              | разу не повысят зарплату, что вряд ли, его человеческий      |                              |
|                         |                              | капитал трансформируется в финансовый капитал, который       |                              |
|                         |                              | составит 48,000,000 рублей. В идеале за жизнь нужно          |                              |
|                         |                              | трансформировать свой человеческий капитал в финансовый,     |                              |
|                         |                              | который станет источником регулярного дохода, когда          |                              |
|                         |                              | человеческий капитал иссякнет. То есть человеку необходимо   |                              |
|                         |                              | планомерно заместить одну форму капитала другой» , — пояснил |                              |
|                         |                              | Игорь Грабуча , финансист, системный аналитик в МТС Банке и  |                              |
|                         |                              | частный инвестор.   Некоторые люди начинают делать такую     |                              |
|                         |                              | конвертацию довольно рано. К 30–50 годам им удается          |                              |
|                         |                              | сформировать финансовый капитал, чтобы продолжить жить       |                              |
|                         |                              | комфортной и привычной жизнью. Такие люди называют себя      |                              |
|                         |                              | сторонниками идеи финансовой независимости или по английски  |                              |
|                         |                              | FIRE — financial independence, retired early.    Движение    |                              |
|                         |                              | FIRE зародилось в Штатах в 90-е годы после публикации книги  |                              |
|                         |                              | Вики Робин, Моник Тилфорд и Джо Домингес «Кошелек или жизнь» |                              |
|                         |                              | . Авторы поддерживали идеи бережливости, следования своим    |                              |
|                         |                              | собственным целям и управления личными финансами.    В то    |                              |
|                         |                              | время процветало общество потребления с его стремлением к    |                              |
|                         |                              | дорогим и статусным вещам, которые часто приобретались в     |                              |
|                         |                              | кредит. А книга описывала противоположный ему образ жизни.   |                              |
|                         |                              | Чтобы достичь финансовой независимости сторонники идеи       |                              |
|                         |                              | раннего выхода на пенсию живут долгосрочными планами,        |                              |
|                         |                              | активно работают, сохраняют значительную часть дохода,       |                              |
|                         |                              | инвестируют в активы, чтобы выйти на «пенсию» в 30–50 лет,   |                              |
|                         |                              | имея пассивный доход — эдакие рантье 21 века.                |                              |
|                         |                              | Многие «пенсионеры», которые в 30 с небольшим лет перестали  |                              |
|                         |                              | работать и теперь помогают другим перестроить свою жизнь в   |                              |
|                         |                              | соответствии с принципами FIRE, вышли из IT-сферы. Возможно, |                              |
|                         |                              | это связано со знанием математики, высокими зарплатами по    |                              |
|                         |                              | сравнению с другими профессиями и прогрессивным мышлением,   |                              |
|                         |                              | которое свойственно людям, работающим в технологической      |                              |
|                         |                              | сфере.    Например,  Кристи Шен и Брюс Леунг  стали известны |                              |
|                         |                              | благодаря раннему выходу на пенсию, а до этого — работали    |                              |
|                         |                              | IT-девелоперами в Канаде. Уже к 30 годам они накопили        |                              |
|                         |                              | достаточный капитал, который позволил жить на доход от него. |                              |
|                         |                              | После выхода на пенсию они написали книгу  Quit like         |                              |
|                         |                              | billionaire , в которой рассказали, какими принципами стоит  |                              |
|                         |                              | руководствоваться для накопления капитала, как инвестировать |                              |
|                         |                              | в ценные бумаги и другие финансовые инструменты, как         |                              |
|                         |                              | защититься от инфляции и «черных лебедей».    «Я стал        |                              |
|                         |                              | задумываться о финансовой независимости и инвестициях, когда |                              |
|                         |                              | начал зарабатывать больше, чем тратить. Со временем я стал   |                              |
|                         |                              | инвестировать в финансовый рынок. Я нашел для себя брокера,  |                              |
|                         |                              | который мне подходит, и начал разбираться в финансовых       |                              |
|                         |                              | инструментах. Всем, кто только начинает инвестировать, я     |                              |
|                         |                              | советую найти человека, кто уже успешен в трейдинге или      |                              |
|                         |                              | долгосрочных инвестициях, и задавать ему много вопросов. В   |                              |
|                         |                              | свое время мне это сильно помогло.   Меня вдохновляет не     |                              |
|                         |                              | идея ранней пенсии как таковой, поскольку я работаю на себя, |                              |
|                         |                              | скорее хочется закрыть вопрос денег, чтобы иметь возможность |                              |
|                         |                              | более свободно распоряжаться своим временем и                |                              |
|                         |                              | сконцентрироваться на важных вещах, не отвлекаясь на         |                              |
|                         |                              | заработок. При этом я планирую и дальше создавать проекты,   |                              |
|                         |                              | потому что мне это нравится» , —  Никита Куимов , IT-        |                              |
|                         |                              | предприниматель, создатель  Станции «Смена»  —  сети         |                              |
|                         |                              | коливингов по всему миру .      Что почитать, чтобы узнать   |                              |
|                         |                              | больше?    Полезные ссылки для планирования финансовой       |                              |
|                         |                              | независимости:     Методика постановки личных целей Джордана |                              |
|                         |                              | Питерсона ,  она же в русском переводе      Симулятор FIRE   |                              |
|                         |                              | на русском языке      Все о FIRE на английском               |                              |
|                         |                              | Информация о том, как распоряжаться доходами с капитала на   |                              |
|                         |                              | английском языке      Исследования о том, какую часть        |                              |
|                         |                              | пенсионных накоплений можно тратить без угрозы для основного |                              |
|                         |                              | капитала на английском языке      Блог на reddit о ранней    |                              |
|                         |                              | пенсии      Насим Талеб  « Антихрупкость »      Рассказ пяти |                              |
|                         |                              | FIRE-энтузиастов на английском      Способ посчитать сумму   |                              |
|                         |                              | капитала и сумму ежегодного снятия —  правило 4 %            |                              |
|                         |                              | Критика правила 4 %      Калькулятор ранней пенсии      A    |                              |
|                         |                              | Dreamin’ Life : ребята путешествуют в доме на колесах        |                              |
|                         |                              | Пара , где парень работает писателем а девушка работает на   |                              |
|                         |                              | ресепшн, сохраняют 65 процентов дохода и живут очень         |                              |
|                         |                              | экономно, чтобы перестать работать в 35      Инвестиционный  |                              |
|                         |                              | банкир , который закончил работу в 35, продолжает            |                              |
|                         |                              | инвестировать и обучает других раннему выходу на пенсию      |                              |
|                         |                              | Парень из России планирует выйти на пенсию в 43 , сейчас ему |                              |
|                         |                              | 32. Он поделился своим опытом формирования инвестиционного   |                              |
|                         |                              | портфеля      Ток-шоу о паре, которые вышли на пенсию в 40   |                              |
|                         |                              | Курсы финансовой грамотности  Высшей школы экономики ,       |                              |
|                         |                              | Курсы ассоциации развития финансовой грамотности ,  Финкульт |                              |
|                         |                              | и др.      Ролик  Павла Комаровского «Личные финансы для     |                              |
|                         |                              | разумного человека» на конференции AppConf 2019              |                              |
|                         |                              | Информация об опционах для IT-специалистов  здесь  и  здесь  |                              |
|                         |                              | ,  информация о рисках реализации опционов        Идея       |                              |
|                         |                              | финансовой независимости звучит более чем привлекательно и   |                              |
|                         |                              | может стать ориентиром при планировании трат, выборе места   |                              |
|                         |                              | работы и образа жизни. IT-специалисты в настоящее время —    |                              |
|                         |                              | привилегированный класс работников, чей труд на рынке высоко |                              |
|                         |                              | оценивается, и этим можно пользоваться в долгосрочной        |                              |
|                         |                              | перспективе.   Задумывались ли вы о финансовой               |                              |
|                         |                              | независимости? Возможно, уже начали формировать капитал? Что |                              |
|                         |                              | для этого делаете? Собираем статистику в опросе и личные     |                              |
|                         |                              | истории в комментарии.     <рекламная пауза>  Хотите пройти  |                              |
|                         |                              | собеседование в компанию своей мечты?  Подключайте телеграм- |                              |
|                         |                              | бота  @g_jobbot.   Тысячи компаний, и только интересующий    |                              |
|                         |                              | вас уровень по зарплате.  Например, в боте можно вызвать     |                              |
|                         |                              | себе в помощь IT-рекрутера командой /human. Он поможет       |                              |
|                         |                              | упаковать опыт и прокачаться в нужном направлении.           |                              |
|                         |                              | </рекламная пауза>                                           |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |    Контроль сроков: новый    | Рассмотрим процесс еженедельного контроля сроков проекта или |      управление сроками      |
|        t/547148/        |            взгляд            | этапа проекта (в данной статье это будут синонимы). Новизна  |            pmbok             |
|                         |                              | подхода будет заключаться в том, что нужно будет             |       time management        |
|                         |                              | автоматически "сжимать" уже готовое расписание проекта.      |            agile             |
|                         |                              | Концепция Факт + Ожидание + Прогноз Схематичный план За      |                              |
|                         |                              | основу я взял модель бюджетирования, которую я видел в       |                              |
|                         |                              | "Норникеле" и наложил ее на процесс контроля сроков. Факт  - |                              |
|                         |                              | это сколько ч/ч потрачено на задачу. Ожидание - это сколько  |                              |
|                         |                              | ч/ч осталось, чтобы завершить задачу. Прогноз - это сколько  |                              |
|                         |                              | дней (уже нас интересует длительность) требуется по будущим  |                              |
|                         |                              | задачам.   Сперва берется из утвержденного плана, ничего не  |                              |
|                         |                              | меняется. Таким образом мы можем составить модель окончания  |                              |
|                         |                              | проекта. Отклонение - это разница между утвержденным         |                              |
|                         |                              | дедлайном и окончанием в модели Факт + Ожид + Прогноз.       |                              |
|                         |                              | Базовый план - это утвержденный план, относительно которого  |                              |
|                         |                              | мы будем сравнивать. Задача процесса Я вижу основную задачу  |                              |
|                         |                              | в том, чтобы  оставшийся объем работ (Ожид + Прогноз)        |                              |
|                         |                              | выполнить за оставшийся срок согласно Базовому               |                              |
|                         |                              | (утвержденному) плану.  Прошлым (фактом) мы уже не можем     |                              |
|                         |                              | управлять, но из него мы можем извлекать причины. Об этом    |                              |
|                         |                              | позже. Собираем Факт + Ожид В таск-менеджере Исполнители     |                              |
|                         |                              | заносят свои фактические ч/ч Ответственный Исполнитель по    |                              |
|                         |                              | задаче должен проставить Ожидания в ч/ч и в днях по текущим  |                              |
|                         |                              | задачам. Менеджер проекта должен сделать мэппинг задач между |                              |
|                         |                              | планом и данными из таск-менеджера и перенести факт+ожид в   |                              |
|                         |                              | MS Project. Хорошо, если у вас между 2 системами настроена   |                              |
|                         |                              | интеграция, но это отдельная тема. Task Manager MS Project   |                              |
|                         |                              | Комментарий Десктоп. версия Главная Главная - верстка        |                              |
|                         |                              | Мобильная версия Главная Главная  - верстка Добавить         |                              |
|                         |                              | анимацию БГ видео на ховере Главная задача - верстка         |                              |
|                         |                              | Незапланированная подзадача, но в рамках задачи Главная -    |                              |
|                         |                              | верстка. Перенести Факт + Ожид на родительскую задачу        |                              |
|                         |                              | Новости - детальная страница 1. Добавить в MS Project новую  |                              |
|                         |                              | задачу 2. Связать ее с другими 3. Перенести Факт + Ожид      |                              |
|                         |                              | Новости - список новостей Аналогично Собираем Прогноз Берем  |                              |
|                         |                              | Задачи, к которым еще не приступали, из последнего плана и   |                              |
|                         |                              | их длительности.  В прогнозе не меняем длительности! Задачи, |                              |
|                         |                              | которых не было в плане (хотелки или недооценки), но их      |                              |
|                         |                              | нужно будет выполнить, тоже оцениваем в ч/ч и днях и заносим |                              |
|                         |                              | в Прогноз. Рассчитываем Отклонение Я описал уже, что:        |                              |
|                         |                              | Отклонение - это разница между утвержденным дедлайном и      |                              |
|                         |                              | окончанием в модели Факт + Ожид + Прогноз. Но некоторые      |                              |
|                         |                              | допускают ошибку и считают, что Отклонение - это разница,    |                              |
|                         |                              | насколько дней мы опаздываем по текущим задачам. Нужно       |                              |
|                         |                              | считать разницу между итоговым прогнозом и дедлайном, потому |                              |
|                         |                              | что туда могут попасть незапланированные работы. Тенденция   |                              |
|                         |                              | отклонений Если такое упражнение делать добросовестно каждую |                              |
|                         |                              | неделю, то можно увидеть насколько быстро увеличивается      |                              |
|                         |                              | отклонение каждую неделю. Дата Отклонение, дн. 1 фев -5 8    |                              |
|                         |                              | фев -9 . . .  9 мар -20 (почти месяц) Это дает повод для     |                              |
|                         |                              | дальнейшего разбора полетов. Возможно заказчик постоянно     |                              |
|                         |                              | накидывает требования, либо разработчики слабые.             |                              |
|                         |                              | Анализируем проблемные задачи Просроченные задачи. Почему    |                              |
|                         |                              | они не могу закончиться? Не начатые задачи. Почему они по    |                              |
|                         |                              | плану должны начаться, а еще не начинаются? Может мешает     |                              |
|                         |                              | какая-то незавершенная задача. А может вообще появился       |                              |
|                         |                              | внешний фактор, который мешает начать. Задачи с задержкой    |                              |
|                         |                              | (те которые еще по плану не закончились, но есть просрочка). |                              |
|                         |                              | Если у вас задачи сильно длинные, то их тоже нужно           |                              |
|                         |                              | анализировать. Как в плане быстро определить просроченные    |                              |
|                         |                              | задачи и не начатые задачи?  Используй индикаторы в MS       |                              |
|                         |                              | Project. Как их использовать и как настроить - читайте в     |                              |
|                         |                              | моей старой статье еще от 2014 года -   Навигатор для        |                              |
|                         |                              | проекта: MS Project + формулы + индикаторы   Кто виноват? На |                              |
|                         |                              | мой взгляд, самые частые причины это: Неверно произведена    |                              |
|                         |                              | оценка и не было заложено резервов Слабые исполнители        |                              |
|                         |                              | Заказчик постоянно накидывает требования Простои - из-за     |                              |
|                         |                              | внешних факторов (Функциональный заказчик и другие вещи).    |                              |
|                         |                              | Что делать? Корректировать расписание по Ожиданиям и         |                              |
|                         |                              | Прогнозу. Автоматическая корректировка расписания Для задач, |                              |
|                         |                              | которые лежат на критическом пути Например, осталось 20      |                              |
|                         |                              | рабочих дней, а работы на 30 рабочих дней (6 недель).        |                              |
|                         |                              | Базовый план Рабочий план Ожид 0 10 Прогноз 20 20 Итого 20   |                              |
|                         |                              | 30 Рассчитываем коэффициент отставания 20 / 30 = 0,67        |                              |
|                         |                              | Умножаем длительности в рабочем плане на этот коэф.          |                              |
|                         |                              | Корректировка Округляем до полудня Ожид 6,7 6,5 Прогноз 13,3 |                              |
|                         |                              | 13 Итого 20 19,5 Для задач, которые не на критическом пути   |                              |
|                         |                              | Если у вас по задачам не на критическом пути в Базовом плане |                              |
|                         |                              | есть резерв 5 дней, то коэффициент отставания будет равен 20 |                              |
|                         |                              | / (30-5) = 0,8 MS Project В MS Project я бы делал так.       |                              |
|                         |                              | Добавить пользовательское поле типа Длительность. Задать     |                              |
|                         |                              | формулу для пересчета длительности с учетом коэффициента     |                              |
|                         |                              | отставания, алгоритм примерно такой: В соседней вкладке      |                              |
|                         |                              | открыть такой же план график  Скопировать из                 |                              |
|                         |                              | пользовательского поля файла 1 в поле длительность файла 2   |                              |
|                         |                              | значения. Переходим к ручной корректировке Если мы           |                              |
|                         |                              | использовали автоматическое расписание, то мы уже имеем кое- |                              |
|                         |                              | какие рекомендации. Теперь доводим это до ума. Потому что    |                              |
|                         |                              | расчет нам может предложить сделать задачу за 6,666 дней, а  |                              |
|                         |                              | на практике это будет все же не меньше 10 дней. Согласно     |                              |
|                         |                              | PMBoK и здравому смыслу есть 4 способа ускориться. Я тут     |                              |
|                         |                              | нового ничего не расскажу, но обобщу опыт. Быстрый проход    |                              |
|                         |                              | Постоянно контролировать "отстающего" исполнителя и пушить   |                              |
|                         |                              | его. Добавить еще людей на эту же задачу, если такое         |                              |
|                         |                              | возможно. Внеурочка Поставить более сильного исполнителя     |                              |
|                         |                              | Запараллелить работы Работать не по водопаду, а по гибкому   |                              |
|                         |                              | подходу Задачи, которые должен был делать один человек,      |                              |
|                         |                              | раскидать на несколько Урезать функционал Если к вам         |                              |
|                         |                              | постоянно прилетали какие-то хотелки, то обменяйте их на     |                              |
|                         |                              | урезание функциональности Выносите предложение, что к        |                              |
|                         |                              | дедлайну вы покажите 80% главного, а 20% потом. Но вам       |                              |
|                         |                              | обязательно подпишут бумаги о завершении этапа. Подвинуть    |                              |
|                         |                              | сроки.  Здесь нужно составить запрос на изменение и          |                              |
|                         |                              | обоснование. На выходе На выходе мы должны иметь: Рабочий    |                              |
|                         |                              | план (он отличается от файла на предыдущей неделе, не только |                              |
|                         |                              | процентиками, но и датами) Ресурсный план (устный или        |                              |
|                         |                              | письменный запрос на ресусры). Если у вас планируется        |                              |
|                         |                              | внеурочка или привлекать других людей Запрос на изменение с  |                              |
|                         |                              | обоснованием                                                 |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |     Мобильное настоящее      |    Говорить о том, что пандемия коронавируса в 2020 году     |              IT              |
| pany/mvideo/blog/546474 | «М.Видео»: телепортация была | стимулировала онлайн во всех его проявлениях становится уже  |              HR              |
|            /            |        стремительной         | немодным. Это свершившийся факт. Тем не менее, цифры упрямая |           V.Video            |
|                         |                              | вещь: мобильная платформа «М.Видео» (приложение продавца и   |           Eldorado           |
|                         |                              | покупателя) выросла в 2,5 раза, число уникальных             |             Job              |
|                         |                              | пользователей в месяц клиентского приложения за год          |            DevOps            |
|                         |                              | увеличилось более чем в 17 раз, при том, что общие онлайн-   |             Java             |
|                         |                              | продажи компании по итогам 2020 года удвоились.     По сути  |     mobile developement      |
|                         |                              | бизнес молниеносно телепортировался из офлайн в digital.     |                              |
|                         |                              | Онлайн-продажи в общем обороте компании выросли с 40% до     |                              |
|                         |                              | 74%. Все это форсировало внутренние процессы по обновлению   |                              |
|                         |                              | существовавших у нас мобильных приложений и интернет-        |                              |
|                         |                              | магазинов. Под катом рассказ про эволюцию нашего мобильного  |                              |
|                         |                              | приложения.     Стоит напомнить, что сеть «М.Видео»          |                              |
|                         |                              | запустила свой онлайн-магазин еще в 2000 — двадцать лет      |                              |
|                         |                              | назад, в 2015 мы уже работали как омни-ритейлер, то есть,    |                              |
|                         |                              | сайт и магазины были синхронизированы, и мы предлагали       |                              |
|                         |                              | единые цены и сервисы во всех каналах.          Нет предела  |                              |
|                         |                              | совершенству  Сегодня в компании реализуется концепция       |                              |
|                         |                              | OneRetail, предполагающая создание единой универсальной      |                              |
|                         |                              | среды для клиентов. Основная «фишка» – бесшовность           |                              |
|                         |                              | восприятия покупателями мобильного приложения, интернет-     |                              |
|                         |                              | магазина и традиционной розничной сети «М.Видео-Эльдорадо».  |                              |
|                         |                              | В идеале клиент не должен ощущать разницы при взаимодействии |                              |
|                         |                              | с компанией онлайн или офлайн.    Например, вы вдруг         |                              |
|                         |                              | захотели купить стиральную машину. Приходя в магазин бытовой |                              |
|                         |                              | техники отличить один белый квадрат от другого для многих    |                              |
|                         |                              | проблематично. Даже если накануне, вы исследовали весь       |                              |
|                         |                              | ассортимент КБТиЭ, изучили массу отзывов и рекомендаций. В   |                              |
|                         |                              | итоге вы идете за человеческой консультацией в наш «каменный |                              |
|                         |                              | супермаркет». Мотив – разделить ответственность за выбор     |                              |
|                         |                              | дорогостоящей бытовой техники с технологически продвинутым   |                              |
|                         |                              | экспертом компании.    На этом этапе  мобильное приложение   |                              |
|                         |                              | покупателя  и мобильное приложение продавца выступает        |                              |
|                         |                              | связующим звеном между компанией и клиентами. Оно позволяет  |                              |
|                         |                              | идентифицировать запрос и рекомендовать наиболее оптимальные |                              |
|                         |                              | для вас покупателя предложения, включая доступные промо,     |                              |
|                         |                              | кэшбэки и прочее. Это позволяет продавцам в торговом зале    |                              |
|                         |                              | предлагать клиентам именно то, что нужно.        Следующий   |                              |
|                         |                              | этап в развитии функциональности нашего мобильного           |                              |
|                         |                              | приложения особо обрадует интровертов. Если, попадая в       |                              |
|                         |                              | магазин «М.Видео», вам не хочется охотиться на неуловимых    |                              |
|                         |                              | консультантов, получить всю необходимую информацию о товаре  |                              |
|                         |                              | всегда можно в мобильном приложении. Довольно легко можно    |                              |
|                         |                              | отсканировать QR-код с ценником, далее получить нужную       |                              |
|                         |                              | информацию о товаре, после чего оплатить его и забрать в     |                              |
|                         |                              | зоне выдачи онлайн заказов.    Реализуемый подход позволяет  |                              |
|                         |                              | идентифицировать покупателей не только онлайн, что делают    |                              |
|                         |                              | все игроки, но и в магазинах. Для этого клиентам             |                              |
|                         |                              | предлагается несколько простых и удобных сервисов: просмотр  |                              |
|                         |                              | информации о товаре через QR-код на ценниках, оформление и   |                              |
|                         |                              | предоформление заказов через мобильное приложение продавца,  |                              |
|                         |                              | и сканирование штрихкодов на коробках с товаром.             |                              |
|                         |                              | Дополнительно клиент может воспользоваться вкладкой «я в     |                              |
|                         |                              | магазине», получив к ней доступ через переход с главной      |                              |
|                         |                              | страницы приложения на карту розничной сети, выбрав магазин, |                              |
|                         |                              | в котором он непосредственно находится.    Рост числа        |                              |
|                         |                              | идентифицированных покупателей обеспечивает полноту и        |                              |
|                         |                              | качество нашей Big Data. Следовательно, точнее становятся    |                              |
|                         |                              | наши промо-кампании и таргетированные предложения, в         |                              |
|                         |                              | конечном итоге тем довольней клиент.    Так устроена система |                              |
|                         |                              | OneRetail. Мы способны обеспечить глубинный анализ как       |                              |
|                         |                              | маркетинговых, так и продуктовых метрик за счет построения   |                              |
|                         |                              | кроссплатформенной аналитики. В итоге мы видим не только     |                              |
|                         |                              | миграцию аудитории внутри наших платформ, но и получаем      |                              |
|                         |                              | возможность менять буквально в режиме «реального времени»    |                              |
|                         |                              | все наши маркетинговые предложения.         Творческие планы |                              |
|                         |                              | Уже сегодня мы стремимся обеспечить 15 минутную готовность   |                              |
|                         |                              | товара в выбранном магазине после его оформления на сайте.   |                              |
|                         |                              | Для 60% заказов мы планируем доставку «день в день». Это     |                              |
|                         |                              | накладывается на поиск и расширение оптимальных механик      |                              |
|                         |                              | взаимодействия с клиентами, включая: бесконтактную доставку, |                              |
|                         |                              | транспортировку заказов силами служб такси, запуск сервиса   |                              |
|                         |                              | видеоконсультаций с продавцами для удалённого ознакомления с |                              |
|                         |                              | товаром и оформления продаж и т. д.    Все это требует от    |                              |
|                         |                              | нас постоянной работы над совершенствованием существующих и  |                              |
|                         |                              | потенциальных информационных платформ, включая скоростные    |                              |
|                         |                              | характеристики и удобство использования интернет-сайта и     |                              |
|                         |                              | мобильных приложений.    Сегодня Группа «М.Видео-Эльдорадо»  |                              |
|                         |                              | остро нуждается в талантливых java и python разработчиках. В |                              |
|                         |                              | компании формируется современный стек на базе собственной    |                              |
|                         |                              | микросервисной архитектуры. Для реализации амбициозных       |                              |
|                         |                              | планов выделены необходимые ресурсы.    Дело за малым,       |                              |
|                         |                              | реализовать все наши «наполеоновские планы» и осчастливить в |                              |
|                         |                              | конечном итоге существующих и потенциальных клиентов.        |                              |
|                         |                              | Приходите, будет интересно .                                 |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos | Есть ли жизнь без WebGL 2.0? | WebGL  2.0 вышел в далёком 2017ом году, принёс графический   |            webgl             |
|        t/547230/        |                              | стек  OpenGL ES  3.0 (2012го года), и, казалось бы, все      |           opengles           |
|                         |                              | современные браузеры давно должны были его поддерживать.     |          opensourse          |
|                         |                              | Однако, среди лидеров затесались отстающие, и пользователи   |             pbr              |
|                         |                              | Safari до сих пор (начало 2021го) вынуждены ограничиваться   |         opencascade          |
|                         |                              | возможностями WebGL 1.0, опубликованным в 2011ом году на     |                              |
|                         |                              | основе OpenGL ES 2.0. Те разработчики, что сталкивались с    |                              |
|                         |                              | OpenGL ES 2.0, знают не понаслышке насколько ограниченным    |                              |
|                         |                              | является этот графический стек. Ограничения программного     |                              |
|                         |                              | интерфейса во многом отражали немощность мобильных           |                              |
|                         |                              | графических карт того времени, поэтому массовый переход      |                              |
|                         |                              | Android устройств на OpenGL ES 3.0 несколько лет назад       |                              |
|                         |                              | оказался очень кстати, хоть и начался с серьёзным            |                              |
|                         |                              | запозданием от десктопных видеокарт. Браузерные технологии   |                              |
|                         |                              | оказались ещё более инертными - в то время как Android       |                              |
|                         |                              | устройства уже давно поддерживают OpenGL ES 3.2 с            |                              |
|                         |                              | вычислительными шейдерами, внедряют поддержку Vulkan, а      |                              |
|                         |                              | разработчики web-стандартов готовят WebGPU, обычному         |                              |
|                         |                              | разработчику по-прежнему доступен устаревший уже на момент   |                              |
|                         |                              | публикации WebGL 2.0, а то и вовсе WebGL 1.0 каменного века… |                              |
|                         |                              | Некоторое время назад, графический движок C++ фреймворка     |                              |
|                         |                              | Open CASCADE Technology  (OCCT) обзавёлся  поддержкой PBR    |                              |
|                         |                              | (основанной на физике освещению) модели материалов металл-   |                              |
|                         |                              | шероховатость (metal-roughness). Продвижение формата  glTF   |                              |
|                         |                              | 2.0 , известного как “JPEG для 3D”, способствовало выводу    |                              |
|                         |                              | этой модели материалов как стандарта обмена между            |                              |
|                         |                              | графическими движками. PBR освещение требует существенно     |                              |
|                         |                              | больше  вычислительных ресурсов  по сравнению с устаревшими  |                              |
|                         |                              | эмпирическими  моделями  Гуро / Фонга  времён OpenGL 1.1.    |                              |
|                         |                              | Поэтому неудивительно, что реализация PBR в движке была      |                              |
|                         |                              | изначально написана на основе относительно “современного”    |                              |
|                         |                              | графического стека OpenGL 3.0 (выпущенного в 2008ом году!) и |                              |
|                         |                              | адаптированного под его мобильную версию OpenGL ES 3.0.      |                              |
|                         |                              | Однако тестирование графического движка в браузерах (в виде  |                              |
|                         |                              | модуля WebAssembly) выявило уже озвученную аномалию -        |                              |
|                         |                              | браузерный движок WebKit в основе одного из самых            |                              |
|                         |                              | распространённых браузеров Safari до сих пор полноценно не   |                              |
|                         |                              | поддерживает WebGL 2.0! И если пользователи Safari на macOS  |                              |
|                         |                              | могут отделаться лёгким шоком и установить браузер           |                              |
|                         |                              | посовременнее, то пользователи iOS такой возможности лишены  |                              |
|                         |                              | политикой Apple. В AppStore можно найти альтернативные       |                              |
|                         |                              | браузеры, но к сожалению  все они основаны на том же движке  |                              |
|                         |                              | WebKit , встроенном в систему, что и Safari - в силу         |                              |
|                         |                              | ограничений магазина AppStore у разработчиков других         |                              |
|                         |                              | браузеров просто нет выбора. При этом вполне очевидно, что   |                              |
|                         |                              | ограничение WebGL 1.0 связаны именно с программной стороной, |                              |
|                         |                              | ведь графические процессоры мобильных устройств Apple давно  |                              |
|                         |                              | считаются относительно производительными, да и OpenGL ES 3.0 |                              |
|                         |                              | поддерживается на iOS нативными приложениями. Более того,    |                              |
|                         |                              | уже некоторое продолжительное время Safari имеет опцию,      |                              |
|                         |                              | активирующую экспериментальную поддержку WebGL 2.0. На       |                              |
|                         |                              | практике, экспериментальная опция всё ещё не проходит ряд    |                              |
|                         |                              | важных тестов, хотя прогресс на лицо -  WebGL 2.0 уже почти  |                              |
|                         |                              | работает в iOS 14 . И действительно, с локальным патчем для  |                              |
|                         |                              | Emscripten, обходящим баги реализации экспериментального     |                              |
|                         |                              | WebGL 2.0, мне удалось увидеть пример OCCT с работающим PBR  |                              |
|                         |                              | освещением: Мини-вызов: OCCT PBR на WebGL 1.0 Несмотря на    |                              |
|                         |                              | многочисленные свидетельства того, что Safari вот-вот        |                              |
|                         |                              | обзаведётся поддержкой WebGL 2.0, текущие пользователи по-   |                              |
|                         |                              | прежнему страдают от его отсутствия (ну или радуются         |                              |
|                         |                              | экономии заряда батареи). Некоторые графические движки прямо |                              |
|                         |                              | заявляют, что не поддерживают PBR освещение без WebGL 2.0,   |                              |
|                         |                              | однако мне стало любопытно, реалистично ли запустить PBR на  |                              |
|                         |                              | WebGL 1.0 и с какими ограничениями. Впрочем, конечной, целью |                              |
|                         |                              | была выбрана не поддержка “голого” WebGL 1.0, а запуск PBR   |                              |
|                         |                              | на современных устройствах iPad с доступными расширениями    |                              |
|                         |                              | WebGL. Вот список таких расширений для устройства iPad ‘2020 |                              |
|                         |                              | ( Apple A12 Bionic ) на iOS 14.4 / Safari: Отладка вёб-      |                              |
|                         |                              | приложения в мобильном браузере удовольствие весьма          |                              |
|                         |                              | сомнительное, поэтому первым делом были подобраны            |                              |
|                         |                              | альтернативные конфигурации с WebGL 1.0: Отключение WebGL    |                              |
|                         |                              | 2.0 в скрытых опциях Firefox. Управляется опцией “ ” на      |                              |
|                         |                              | странице “ ”. Предоставляет аппаратно-ускоренную реализацию  |                              |
|                         |                              | WebGL 1.0, допускающую некоторые отклонения от WebGL 1.0     |                              |
|                         |                              | спецификаций на железе уровня WebGL 2.0. Поддерживает вывод  |                              |
|                         |                              | JavaScript консоли. Отключение WebGL 2.0 в опциях сборки     |                              |
|                         |                              | Emscripten. Управляется флагом сборки “ ”. Предоставляет     |                              |
|                         |                              | аппаратно-ускоренную реализацию WebGL 1.0. Поддерживает      |                              |
|                         |                              | JavaScript консоль (в десктопных браузерах). Отключение      |                              |
|                         |                              | аппаратного ускорения в браузерах на движке Chromium в паре  |                              |
|                         |                              | с опцией сборки “ ”. Предоставляет программную реализацию    |                              |
|                         |                              | WebGL 1.0, которая обычно ближе придерживается к             |                              |
|                         |                              | спецификациям по сравнению с аппаратно-ускоренными           |                              |
|                         |                              | реализациями. Поддерживает JavaScript консоль (в десктопных  |                              |
|                         |                              | браузерах). Сборка Draw Harness на десктопе с опцией OpenGL  |                              |
|                         |                              | ES, реализованной библиотекой  ANGLE . Использует ту же      |                              |
|                         |                              | реализацию OpenGL ES, которую используют десктопные          |                              |
|                         |                              | браузеры. Команда “ ” активирует создание OpenGL ES 2.0      |                              |
|                         |                              | контекста (вместо OpenGL ES 3.0). Очень полезный и удобный   |                              |
|                         |                              | вариант для отладки, однако поведение не идентично вёб-      |                              |
|                         |                              | приложению с дополнительным уровнем WebGL реализации. Запуск |                              |
|                         |                              | в браузере Safari на macOS. Предоставляет аппаратно-         |                              |
|                         |                              | ускоренную реализацию WebGL 1.0. Поведение на Apple M1       |                              |
|                         |                              | (ARM64) очень близко в iPad, но есть расхождения!            |                              |
|                         |                              | Поддерживает вывод JavaScript консоли. Запуск в браузере     |                              |
|                         |                              | Safari на iOS. Предоставляет аппаратно-ускоренную реализацию |                              |
|                         |                              | WebGL 1.0. Нет JavaScript консоли. Разные комбинации дают    |                              |
|                         |                              | отличные результаты - разный набор расширений, разные        |                              |
|                         |                              | ошибки, разные баги… а в сумме много полезной информации для |                              |
|                         |                              | отладки. Прослеживается одна характерную особенность WebGL   |                              |
|                         |                              | реализаций - там где проприетарные драйвера OpenGL и OpenGL  |                              |
|                         |                              | ES допускают отклонения, в случае если железо в принципе     |                              |
|                         |                              | поддерживает какую-то функциональность, реализации WebGL     |                              |
|                         |                              | упрямо стоят на своём и ругаются на синтаксические ошибки в  |                              |
|                         |                              | коде GLSL. Наиболее упрямыми реализациями оказались          |                              |
|                         |                              | программный WebGL, реализуемый средствами библиотеки ANGLE,  |                              |
|                         |                              | а также реализация OpenGL поверх Metal от Apple. Там где CG  |                              |
|                         |                              | компилятор NVIDIA не скажет ни слова, драйвер AMD мягко      |                              |
|                         |                              | предупредит в логе компиляции шейдера, OpenGL реализация     |                              |
|                         |                              | Apple не оставит безобразие без внимания и ошибкой скажет,   |                              |
|                         |                              | что такой функции в GLSL 110 нет и появилась она только в    |                              |
|                         |                              | GLSL 120! Портирование кода PBR на WebGL 1.0 было встречено  |                              |
|                         |                              | следующими проблемами: Загрузка данных PBR таблицы-кеша      |                              |
|                         |                              | формата   в текстуру формата  . Проблема #1: текстурные      |                              |
|                         |                              | форматы  /  не поддерживаются iPad + WebGL 1.0 (расширение   |                              |
|                         |                              | GL_EXT_texture_rg  недоступно). Проблема #2: текстуры        |                              |
|                         |                              | формата   не поддерживают фильтрацию на iPad + WebGL 1.0.    |                              |
|                         |                              | iPad не поддерживает расширение  GL_OES_texture_float_linear |                              |
|                         |                              | , однако нефильтруемые текстуры с плавающей запятой          |                              |
|                         |                              | поддерживается через расширение  GL_OES_texture_float . В    |                              |
|                         |                              | тоже время, iPad поддерживает расширение                     |                              |
|                         |                              | GL_OES_texture_half_float_linear , так что текстуры с        |                              |
|                         |                              | плавающей точкой половинчатой точности поддерживают          |                              |
|                         |                              | фильтрацию. Проблема #3: текстуры формата   могут быть       |                              |
|                         |                              | загружены напрямую из данных плавающей запятой одинарной     |                              |
|                         |                              | точности в случае с OpenGL ES 3.0 / WebGL 2.0, однако WebGL  |                              |
|                         |                              | 1.0 +  GL_OES_texture_half_float  не допускает этого.        |                              |
|                         |                              | Запекание спекулярной PBR карты в текстуру  . Проблема: в    |                              |
|                         |                              | текстуру формата   нельзя производить отрисовку через FBO на |                              |
|                         |                              | iPad + WebGL 1.0. iPad не поддерживает расширение            |                              |
|                         |                              | WEBGL_color_buffer_float . Запекание мип-уровней диффузной   |                              |
|                         |                              | PBR кубической текстуры    . Проблема: iPad + WebGL 1.0 не   |                              |
|                         |                              | допускают отрисовку в мип-уровни, отличные от нулевого       |                              |
|                         |                              | (расширение  GL_OES_fbo_render_mipmap  не поддерживается).   |                              |
|                         |                              | PBR GLSL программы полагаются на явное задание мип-уровня    |                              |
|                         |                              | текстуры, в зависимости от шероховатости материала.          |                              |
|                         |                              | Проблема:   недоступна в  , но доступна посредством          |                              |
|                         |                              | расширения  GL_EXT_shader_texture_lod  на iPad + WebGL 1.0.  |                              |
|                         |                              | PBR GLSL программы содержат большие блоки циклов, ветвления  |                              |
|                         |                              | и оператор модуля  . Проблема #1: оператор модуля            |                              |
|                         |                              | недоступен в  , но может быть заменён функцией  . Проблема   |                              |
|                         |                              | #2:   не предусматривает синтаксиса для инициализации        |                              |
|                         |                              | массива констант. Проблема #3:   не допускает неконстантные  |                              |
|                         |                              | выражения для определения индекса (non-constant index        |                              |
|                         |                              | expressions). Буфер цвета sRGB и кубическая карта окружения. |                              |
|                         |                              | Проблема #1: расширение  GL_EXT_sRGB  доступно на iPad +     |                              |
|                         |                              | WenGL 1.0, но требует иных констант для инициализации, а     |                              |
|                         |                              | также запрещает генерацию мип-уровней посредством  .         |                              |
|                         |                              | Проблема #2: ужасно медленная генерация мип-уровней для sRGB |                              |
|                         |                              | текстур на WebGL 2.0 (5 секунд!). Поиск решений Случайное    |                              |
|                         |                              | использование нефильтруемые форматы текстур - одна из самых  |                              |
|                         |                              | противных проблем в OpenGL. Логи выглядят абсолютно чистыми  |                              |
|                         |                              | - ни ошибок  , ни предупреждений WebGL в консоли, просто на  |                              |
|                         |                              | экран выводится некорректный результат. С практической точки |                              |
|                         |                              | зрения, нефильтруемая текстура возвращает нули в GLSL        |                              |
|                         |                              | программу, и требуется приличное время для того, чтобы       |                              |
|                         |                              | обнаружить источник проблемы. Загрузка   текстуры в случае с |                              |
|                         |                              | WebGL 1.0 +  GL_OES_texture_half_float   требует программной |                              |
|                         |                              | реализации конвертера 32битных чисел с плавающей запятой в   |                              |
|                         |                              | 16битные - ведь центральные процессоры и C/C++ не имеют      |                              |
|                         |                              | встроенной поддержки чисел с половинной точностью. OpenGL    |                              |
|                         |                              | 3.0 и OpenGL ES 3.0 позволяют избежать этого чудного кода, а |                              |
|                         |                              | вот для поддержки WebGL 1.0 придётся его добавить в          |                              |
|                         |                              | приложение. В процессе отладки удалось запечатлеть вот такой |                              |
|                         |                              | забавный эффект при интерпретации   данных как массива  :    |                              |
|                         |                              | Невозможность отрисовки в текстуру формата   стала           |                              |
|                         |                              | неприятной проблемой для реализации PBR, так как меньшая     |                              |
|                         |                              | точность будет недостаточно для данной текстуры. К счастью,  |                              |
|                         |                              | PBR спекулярная карта имеет размер всего 9x1 текселей -      |                              |
|                         |                              | можно было бы даже подумать о вычислении значений без помощи |                              |
|                         |                              | OpenGL, если бы это не тянуло за собой необходимость         |                              |
|                         |                              | реализовать выборки с фильтрацией из кубической текстуры…    |                              |
|                         |                              | Вместо этого, следующий подход был реализован: значения с    |                              |
|                         |                              | плавающей запятой упаковываются шейдером в текстуру формата  |                              |
|                         |                              | 9x3    (по строке на RGB компоненту), затем читаются с       |                              |
|                         |                              | посредством  , распаковываются и загружаются в финальную     |                              |
|                         |                              | текстуру формата  . Заполнение мип-уровней PBR диффузной     |                              |
|                         |                              | кубмапы также заставило задуматься, но обходной путь         |                              |
|                         |                              | оказался проще - отрисовка во временную текстуру и           |                              |
|                         |                              | копирование результата в нужный мип-уровень посредством  .   |                              |
|                         |                              | Как ни странно, использование нулевого мип-уровня той же     |                              |
|                         |                              | самой текстуры сработало, хотя не могу с уверенностью        |                              |
|                         |                              | сказать, что такая логика не чревата неопределённым          |                              |
|                         |                              | поведением. Без функции   в шейдере практически невозможно   |                              |
|                         |                              | реализовать корректное поведение PBR освещение с разными     |                              |
|                         |                              | уровнями шероховатости, но к счастью, все тестируемые        |                              |
|                         |                              | реализации WebGL 1.0 поддерживали расширение                 |                              |
|                         |                              | GL_EXT_shader_texture_lod , активируемое в GLSL шейдере      |                              |
|                         |                              | кодом: Пара скриншотов внизу показывает как бы выглядели PBR |                              |
|                         |                              | материалы, если просто заменить   на  , т.е. на              |                              |
|                         |                              | автоматический выбор мип-уровней текстуры вместо ручного на  |                              |
|                         |                              | основании шероховатости: Многочисленные ограничения          |                              |
|                         |                              | синтаксиса   не раз заставляли задумываться о напрасной      |                              |
|                         |                              | борьбе с тенью прошлого. И если оператор модуля   легко      |                              |
|                         |                              | заменяется на функцию  , а прочие ограничения могут ввести в |                              |
|                         |                              | ступор: Ранние версии GLSL просто не предусматривали         |                              |
|                         |                              | синтаксис для инициализации массива констант: Выходом из     |                              |
|                         |                              | этой проблемы послужило объявление таких массивов как        |                              |
|                         |                              | uniform переменных, загружаемых из C/C++ кода - что, в       |                              |
|                         |                              | общем-то, не тоже самое, что константа уровня компиляции, но |                              |
|                         |                              | по производительности может быть близка к этому. Переменное  |                              |
|                         |                              | количество итераций цикла  . Программа запекания PBR текстур |                              |
|                         |                              | задаёт несколько параметров, задающих точность (качество):   |                              |
|                         |                              | Большее количество выборок увеличивают качество, но требуют  |                              |
|                         |                              | более тяжёлых расчётов, поэтому эти параметры были вынесены  |                              |
|                         |                              | в настройки, и более того, автоматически калибруются в       |                              |
|                         |                              | зависимости от мип-уровня текстуры. Ограничения   нарушают   |                              |
|                         |                              | эту логику -   переменная должна быть заменена на константу  |                              |
|                         |                              | компиляции. Хотя типичным обходным путём может быть также    |                              |
|                         |                              | написание такого цикла: “Non-constant index expressions are  |                              |
|                         |                              | disallowed”. Программа запекания PBR карт использует такие   |                              |
|                         |                              | конструкции: Ограничения   приводят к написанию следующего   |                              |
|                         |                              | ужасного кода с использованием if/else. Большинство          |                              |
|                         |                              | ограничений языка шейдеров   являются не более чем эхом      |                              |
|                         |                              | графических процессоров прошлого, не поддерживающих          |                              |
|                         |                              | ветвление. И хотя синтакс GLSL заделывался на будущее,       |                              |
|                         |                              | первая версия требовала написание циклов и условий           |                              |
|                         |                              | ветвлений, которые могли быть тривиально раскручены (        |                              |
|                         |                              | trivially unrolled ) компилятором, т.к. графические          |                              |
|                         |                              | процессоры того времени иного варианта просто не             |                              |
|                         |                              | поддерживали. sRGB текстуры Рендеринг с учётом цветового     |                              |
|                         |                              | пространства sRGB  важен для корректной цветопередачи. К     |                              |
|                         |                              | сожалению, WebGL 1.0 +  GL_EXT_sRGB  имеет существенное      |                              |
|                         |                              | ограничение - невозможность генерации мип-уровней. Это       |                              |
|                         |                              | делает поддержку sRGB текстур практически бесполезной, если  |                              |
|                         |                              | только не использовать форматы с предварительно              |                              |
|                         |                              | подготовленными мип-уровнями. И если в случае обычных        |                              |
|                         |                              | текстур мип-уровнями можно пожертвовать (снизится качество   |                              |
|                         |                              | картинки), то при запекании PBR карт из кубмапы окружения    |                              |
|                         |                              | просто обойтись без мип-уровней уже нельзя. Но даже в случае |                              |
|                         |                              | с WebGL 2.0, формально поддерживающим генерацию мип-уровней  |                              |
|                         |                              | sRGB текстур, данная функциональность реализована чудовищно  |                              |
|                         |                              | медленной. Генерация мип-уровней кубмапы размером            |                              |
|                         |                              | 2048x2048x6 выполняется 5 секунд на быстром десктопном       |                              |
|                         |                              | компьютере! При этом тот же самый код отрабатывает за        |                              |
|                         |                              | считанные доли секунд при использовании нативной OpenGL /    |                              |
|                         |                              | OpenGL ES реализации вместо браузера. Всё указывает на то,   |                              |
|                         |                              | что WebGL реализует какой-то код не на графическом           |                              |
|                         |                              | процессоре - возможно с целью обеспечения строгих условий    |                              |
|                         |                              | спецификаций WebGL в контексте конвертации цветового         |                              |
|                         |                              | пространства sRGB, которым аппаратные реализации не следуют, |                              |
|                         |                              | хотя мне и не удалось найти какие-либо упоминания на эту     |                              |
|                         |                              | тему. По всей видимости, в WebGL лучше избегать sRGB         |                              |
|                         |                              | текстуры (ценой качества картинки или искажений цветового    |                              |
|                         |                              | пространства), обеспечить загрузку предварительно            |                              |
|                         |                              | подготовленных мип-уровней текстур, или реализовать          |                              |
|                         |                              | генератор mip-map уровней собственной шейдерной программой.  |                              |
|                         |                              | Послесловие В результате потраченных усилий наконец-то       |                              |
|                         |                              | удалось увидеть PBR материалы посредством графического       |                              |
|                         |                              | движка OCCT в Safari на iPad c контекстом WebGL 1.0.         |                              |
|                         |                              | Конечно, тестируемое устройство относится к относительно     |                              |
|                         |                              | новому поколению (iPad ‘2020, основанному на Apple A12 SoC   |                              |
|                         |                              | анонсированной в 2018ом году), но есть надежда на то, что    |                              |
|                         |                              | более старые устройства Apple также справятся с задачей.     |                              |
|                         |                              | Хочется верить, что уже в скором времени WebGL 2.0 наконец-  |                              |
|                         |                              | то станет минимальным стандартом и необходимость в поддержке |                              |
|                         |                              | допотопных технологий десятилетней давности отпадёт - многие |                              |
|                         |                              | разработчики уже несколько лет отказывают поддерживать такие |                              |
|                         |                              | браузеры и их решение легко понять. В этом контексте, отказ  |                              |
|                         |                              | Microsoft от поддержки устаревших движков вроде Internet     |                              |
|                         |                              | Explorer и  Microsoft Edge Legacy  (базирующимся на не-      |                              |
|                         |                              | Chromium движке) ощущается как свежий воздух для вёб-        |                              |
|                         |                              | разработчика, измученного проблемами совместимости. Хотя     |                              |
|                         |                              | исчезающе малое количество конкурирующих полноценных вёб-    |                              |
|                         |                              | движков не может не настораживать (Mozilla Firefox,          |                              |
|                         |                              | Chromium, Safari/WebKit)  и опасаться за будущее открытых    |                              |
|                         |                              | вёб-стандартов в мире, где один браузер станет бесконтрольно |                              |
|                         |                              | доминировать. Стратегия Apple по удержанию экосистемы iOS    |                              |
|                         |                              | под колпаком и  не пускать решения конкурентов  лишает       |                              |
|                         |                              | пользователей системы собственного выбора. Многочисленные    |                              |
|                         |                              | слухи свидетельствуют, что измученная  экспериментальная     |                              |
|                         |                              | поддержка WebGL 2.0  в движке WebKit вот-вот перестанет быть |                              |
|                         |                              | экспериментальной (в том числе благодаря переходу на         |                              |
|                         |                              | реализацию OpenGL ES библиотекой ANGLE, которая уже давно    |                              |
|                         |                              | используется другими браузерами), хотя сроки, как обычно,    |                              |
|                         |                              | остаются неизвестными. Оригинальную публикацию на английском |                              |
|                         |                              | можно найти  здесь .                                         |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |    Сотрудники Шрёдингера     | В жизни часто бывает так, что понимание явления зависит от   |        черт знает что        |
|        t/547228/        |                              | точки наблюдения. Особенно, если эта точка находится вне     |                              |
|                         |                              | традиционного контекста существования явления. Так, что-то   |                              |
|                         |                              | замудрил… Я лишь хотел напомнить о том, что вы и так знаете: |                              |
|                         |                              | иногда, чтобы «увидеть» закон всемирного тяготения, надо     |                              |
|                         |                              | получить яблоком по голове. Или, как говорится в             |                              |
|                         |                              | приписываемой Эйнштейну цитате, проблему нельзя решить на    |                              |
|                         |                              | том же уровне понимания, что её создал. Области знаний       |                              |
|                         |                              | постоянно проникают друг в друга, иногда обогащая и создавая |                              |
|                         |                              | неожиданный прорыв, иногда – останавливая развитие лет на    |                              |
|                         |                              | сто (например, при вмешательстве политики или религии в      |                              |
|                         |                              | науку). Однако, диффузия продолжается. Элементарно потому,   |                              |
|                         |                              | что человек не живёт в вакууме и не занимается исключительно |                              |
|                         |                              | работой. Любой жизненный опыт, совершенно не связанный с     |                              |
|                         |                              | работой, может оказать на эту самую работу влияние. Ну и     |                              |
|                         |                              | наоборот, как это происходит при профессиональной            |                              |
|                         |                              | деформации. Соответственно, чем шире у человека кругозор и   |                              |
|                         |                              | жизненный опыт, тем больше точек наблюдения (углов обзора,   |                              |
|                         |                              | систем координат, понятийных аппаратов) он может             |                              |
|                         |                              | использовать для понимания и осознания. И, вроде, это не     |                              |
|                         |                              | совсем бесполезное занятие. Я сам до этого допёр поздновато, |                              |
|                         |                              | но почитывать книги, расширяющие кругозор, всё-таки начал.   |                              |
|                         |                              | На моё счастье, в очередной раз наткнулся на кота            |                              |
|                         |                              | Шрёдингера. И, кажется, я понял, чего не хватало уважаемым   |                              |
|                         |                              | отцам науки, для разрешения спора об условиях коллапса       |                              |
|                         |                              | волновой функции, наличии и понимании состояния              |                              |
|                         |                              | суперпозиции, и существовании Луны лишь в тот момент, когда  |                              |
|                         |                              | вы на неё смотрите. Им не хватало современного офиса и его   |                              |
|                         |                              | сотрудников. Уж где-где, а там-то квантовая механика от души |                              |
|                         |                              | и полностью переходит от субатомных систем к                 |                              |
|                         |                              | макроскопическим.   Кот Шрёдингера Сразу говорю – я не       |                              |
|                         |                              | специалист в квантовой механике. Я честно, несколько раз     |                              |
|                         |                              | прочитал то, что нашёл про интерпретации квантовой механики, |                              |
|                         |                              | возникшие в связи с этим споры и мыслительные эксперименты,  |                              |
|                         |                              | объясняющие суть этих споров. Но среди вас, дорогие          |                              |
|                         |                              | читатели, конечно есть люди, которые разбираются в этом      |                              |
|                         |                              | лучше меня – прошу не судить строго. Если совсем кратко, то  |                              |
|                         |                              | речь о споре на тему интерпретации квантовой механики. На    |                              |
|                         |                              | одной стороне стояли авторы копенгагенской интерпретации –   |                              |
|                         |                              | Нильс Бор и Вернер Гейзенберг. На другой – Альберт Эйнштейн  |                              |
|                         |                              | и Эрвин Шрёдингер. Прошу прощения, если кого забыл.          |                              |
|                         |                              | Микрочастица в квантовой механике может находиться в         |                              |
|                         |                              | суперпозиции состояний, т.е. обладать одновременно           |                              |
|                         |                              | взаимоисключающими свойствами – например, волны и частицы.   |                              |
|                         |                              | Однако, в какой-то момент происходит коллапс волновой        |                              |
|                         |                              | функции, и микрочастица «решает», кто она – волна или        |                              |
|                         |                              | частица. Спор вёлся насчет момента, или условий, при которых |                              |
|                         |                              | этот самый коллапс происходит. Авторы копенгагенской         |                              |
|                         |                              | интерпретации считали, что моментом истины выступает         |                              |
|                         |                              | наблюдатель, или сам факт наблюдения, измерения, или даже    |                              |
|                         |                              | взаимодействие микрочастицы с измерительным прибором. При    |                              |
|                         |                              | этом, измерительный прибор относится к макромиру – он        |                              |
|                         |                              | большой, его можно потрогать руками. Микрочастица, «вылетая» |                              |
|                         |                              | из своего микромира, попадает в «большой мир», сталкивается  |                              |
|                         |                              | с измерительным прибором – тут-то ей и приходится принять    |                              |
|                         |                              | решение, волна она или частица. С авторами копенгагенской    |                              |
|                         |                              | интерпретации не были согласны Шрёдингер и Эйнштейн. Они     |                              |
|                         |                              | считали, что просто ещё не всё изучено, недостаточно данных. |                              |
|                         |                              | А раз не всё понято, рано делать вывод о влиянии наблюдателя |                              |
|                         |                              | на состояние микрочастицы. Эйнштейн говорил так: « Думать    |                              |
|                         |                              | так логически допустимо, но это настолько противоречит моему |                              |
|                         |                              | научному инстинкту, что я не могу отказаться от поисков      |                              |
|                         |                              | более полной концепции ». А Шрёдингер придумал своего        |                              |
|                         |                              | знаменитого кота. Посадим кошку в стальной сейф вместе с     |                              |
|                         |                              | адской машиной (защищённой от кошки). В  счётчик Гейгера     |                              |
|                         |                              | положена крупинка радиоактивного вещества,  столь  малая,    |                              |
|                         |                              | что за час  может  распасться один из атомов, но с такой же  |                              |
|                         |                              | вероятностью может не распасться ни один. Если атом          |                              |
|                         |                              | распадается, счётчик через реле приведёт в действие          |                              |
|                         |                              | молоточек, который разобьёт колбу с  синильной кислотой .    |                              |
|                         |                              | Предоставив эту систему самой себе в течение часа, мы        |                              |
|                         |                              | скажем, что кошка ещё жива,  если  за это время не распался  |                              |
|                         |                              | ни один атом. Первый же распад привёл бы к отравлению кошки. |                              |
|                         |                              | ψ-функция  всей системы выразила бы это тем, что живая и     |                              |
|                         |                              | мёртвая кошка (с позволения сказать) смешаны или размазаны в |                              |
|                         |                              | одинаковых пропорциях. Перенеся рассуждения в макромир,      |                              |
|                         |                              | Шрёдингер хотел показать неполноту знаний о микромире. Мы    |                              |
|                         |                              | знаем, что кошка не может быть живой и мёртвой одновременно, |                              |
|                         |                              | т.е. находиться в суперпозиции. При этом, в эксперименте     |                              |
|                         |                              | жизнь кошки напрямую зависит от микрочастицы и её состояния, |                              |
|                         |                              | которое этой самой суперпозицией и описывается. На выходе    |                              |
|                         |                              | всегда определённость, на входе – неопределённость.          |                              |
|                         |                              | Соответственно, хрень это всё – просто надо разобраться, при |                              |
|                         |                              | каких условиях происходит коллапс волновой функции, и ни от  |                              |
|                         |                              | какого наблюдателя процесс не зависит. И перестать мучить    |                              |
|                         |                              | животное. Есть же офис и его сотрудники. Которые, в отличие  |                              |
|                         |                              | от кота, вполне себе могут находиться в суперпозиции. Дальше |                              |
|                         |                              | прошу читать, немного расслабившись.  Сотрудники Шрёдингера  |                              |
|                         |                              | Сотрудник офиса, любой профессии, всегда находится в         |                              |
|                         |                              | суперпозиции – работает и не работает одновременно.          |                              |
|                         |                              | Особенно, если это сотрудник интеллектуального труда – а в   |                              |
|                         |                              | офисе других и не бывает. К счастью, сотрудник Шрёдингера не |                              |
|                         |                              | сидит в коробке с колбой синильной кислоты и не является     |                              |
|                         |                              | микрочастицей. Это даёт определённые преимущества: коллапс   |                              |
|                         |                              | волновой функции у него случается не один раз за всю жизнь.  |                              |
|                         |                              | Переход из одного состояния в другое он может совершать      |                              |
|                         |                              | тысячу раз в день, без ущерба для организма. Оттого          |                              |
|                         |                              | эксперимент по определению его состояния становится ещё      |                              |
|                         |                              | сложнее – в этом смысле Шрёдингеру неимоверно повезло, т.к.  |                              |
|                         |                              | результатом его эксперимента была переменная типа Boolean. У |                              |
|                         |                              | нас, в офисе, это функция, длиною в жизнь. По поводу условий |                              |
|                         |                              | коллапса волновой функции сотрудника Шрёдингера, т.е.        |                              |
|                         |                              | перехода в определённое состояние, всё намного интереснее,   |                              |
|                         |                              | чем у кота. Там было даже скучновато: появился наблюдатель,  |                              |
|                         |                              | и кот «сколлапсировал» - или жив, или мёртв. Сотрудник       |                              |
|                         |                              | Шрёдингера не так прост, для перехода в состояние «работает» |                              |
|                         |                              | необходимо, чтобы он знал, что за ним наблюдают. Даже если   |                              |
|                         |                              | никакого наблюдения нет и в помине. Было бы интересно        |                              |
|                         |                              | послушать мнение Шрёдингера о том, что кот мог умереть не от |                              |
|                         |                              | синильной кислоты, а от сердечного приступа, вызванного      |                              |
|                         |                              | резким открыванием коробки нетерпеливым наблюдателем. Итак,  |                              |
|                         |                              | пока вы не смотрите на сотрудника Шрёдингера, он находится в |                              |
|                         |                              | суперпозиции. То ли работает, то ли нет. Вроде работает, а   |                              |
|                         |                              | результата нет. Не помню, чтобы работал, но результат принёс |                              |
|                         |                              | (может, загуглил? Или это тоже – работа? Или, как Сергей,    |                              |
|                         |                              | прошлогодний отчёт сдал ?). Когда вы смотрите на сотрудника  |                              |
|                         |                              | Шрёдингера, коллапс волновой функции, как правило, случается |                              |
|                         |                              | – вы понимаете, работает сотрудник, или нет. Но это –        |                              |
|                         |                              | скучный, пассивный какой-то коллапс. Так, коллапсик. Грустно |                              |
|                         |                              | вздыхаете, встаёте и тяжелыми шагами направляетесь к         |                              |
|                         |                              | макрочастице вашей команды. И тут происходит чудо –          |                              |
|                         |                              | повторный коллапс волновой функции. Резкий вход в            |                              |
|                         |                              | суперпозицию и не менее резкий выход из неё в принципиально  |                              |
|                         |                              | иное состояние – человек работает! Однако, смею              |                              |
|                         |                              | предположить, что и непоколебимая суперпозиция в офисе       |                              |
|                         |                              | существует. Особенно, когда офис большой, сотрудников        |                              |
|                         |                              | Шрёдингера много, наблюдателей – мало, или наблюдатели тоже  |                              |
|                         |                              | того – в суперпозиции. Целый день что-то делает, но выхлопа  |                              |
|                         |                              | – ноль. Но делает. И зарплату получает. Сейчас, когда работа |                              |
|                         |                              | многих людей, словами моей дочери – «что-то печатать на      |                              |
|                         |                              | компьютере», неопределяемая, неколлапсирующая,               |                              |
|                         |                              | несхлапывающаяся суперпозиция вполне может считаться         |                              |
|                         |                              | вариантом нормы. Вплоть до того, что некоторые сотрудники,   |                              |
|                         |                              | весь день «печатая на компьютере» какой-то текст,            |                              |
|                         |                              | торжественно и с улыбкой его вечером удаляют. Потому что     |                              |
|                         |                              | знают, что начальник Шрёдингера не знает ни про текст, ни    |                              |
|                         |                              | про день, ни про сотрудника. Да, разумеется – ни одного      |                              |
|                         |                              | программиста я к сотрудникам Шрёдингера не причисляю. Мы с   |                              |
|                         |                              | вами всегда заняты делом и только делом. Правда, начальник   |                              |
|                         |                              | это не всегда понимает, но это он сам – в суперпозиции. И    |                              |
|                         |                              | вообще – не на своём месте. И пусть не лезет со своим        |                              |
|                         |                              | наблюдением. Коллапс его волновой функции ведь от нашего     |                              |
|                         |                              | труда зависит. Как и его премия. Или это одно и то же? Что   |                              |
|                         |                              | бы на это сказал Шрёдингер? Наверное, просто влепил бы       |                              |
|                         |                              | минус. А Эйнштейн, наверное, плюс – человек был с юмором.    |                              |
|                         |                              | Резюме  Относиться ли к этой и другим подобным темам         |                              |
|                         |                              | серьёзно? Не знаю, если честно. Думаю, принимать во внимание |                              |
|                         |                              | точно стоит. Не конкретно мою попытку натянуть сову на       |                              |
|                         |                              | глобус, а процесс диффузии областей знаний в принципе.       |                              |
|                         |                              | Вроде, и так все всё понимают. Есть сотрудники, за которыми  |                              |
|                         |                              | не надо следить – просто показать, где брать задачи, куда    |                              |
|                         |                              | складывать результат. Но таких меньшинство. И чем дальше,    |                              |
|                         |                              | тем меньше. Часто начинает казаться, что для «позитивного»   |                              |
|                         |                              | коллапса волновой функции сотрудника уже и наблюдения не     |                              |
|                         |                              | хватает, и осознания наблюдаемым факта наблюдения, и угрозы  |                              |
|                         |                              | резкого перехода в суперпозицию состояний «у меня есть       |                              |
|                         |                              | работа»/«у меня нет работы», и даже большие деньги не        |                              |
|                         |                              | помогают. В ход идёт весь современный харэ-арсенал – от      |                              |
|                         |                              | геймификации до инстаграма, а эффективность всё ниже. А      |                              |
|                         |                              | потом прочитаешь что-нибудь из старого, доброго, вынырнешь   |                              |
|                         |                              | из перегруженного информационного потока «современных        |                              |
|                         |                              | подходов к мотивации зумеров, новая версия! не пропустите!   |                              |
|                         |                              | только один бесплатный вебинар», и понимаешь – ага.          |                              |
|                         |                              | Ничегошеньки и не изменилось, принципиально-то. Есть         |                              |
|                         |                              | сотрудник, есть начальник, есть работа. И без наблюдения     |                              |
|                         |                              | никуда. Как и без измерений. И никакой разницы между         |                              |
|                         |                              | новичком и опытным сотрудником нет. Просто опытный научился  |                              |
|                         |                              | наблюдать за собой самостоятельно. И выходить из             |                              |
|                         |                              | суперпозиции, когда требуется. Ну и входить в неё, когда     |                              |
|                         |                              | пятница.                                                     |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |    Геология XXI века: от     | Ранее в статьях мы уже обсудили доступные данные (результаты |           blender            |
|        t/547068/        |  реальности к виртуальности  | наземных и спутниковых гравитационных и магнитных измерений, |      augmented reality       |
|                         |                              | ортофото и космические снимки, цифровые модели рельефа),     |           geodata            |
|                         |                              | теоретические подходы и методы обработки (интерферометрия,   |                              |
|                         |                              | построение обратных геофизических моделей), обработку данных |                              |
|                         |                              | в ParaView (выделение изоповерхностей) и Blender             |                              |
|                         |                              | (высококачественная визуализация и анимация подготовленных в |                              |
|                         |                              | ParaView данных) и даже посмотрели Python Jupyter notebook с |                              |
|                         |                              | вычислениями и визуализацией моделей (включая выделение      |                              |
|                         |                              | изоповерхностей средствами библиотеки VTK). Осталось         |                              |
|                         |                              | построенные геотермальные изоповерхности конвертировать в    |                              |
|                         |                              | формат модели дополненной реальности и получить              |                              |
|                         |                              | геотермальную модель в дополненной реальности (AR) . Эта     |                              |
|                         |                              | модель может быть легко просмотрена прямо из браузера на     |                              |
|                         |                              | iOS/iPadOS или из загруженного файла на MacOS (поддержка AR  |                              |
|                         |                              | добавлена два-три года назад, на старых устройствах для      |                              |
|                         |                              | этого потребуется обновиться). Как всегда, исходная модель   |                              |
|                         |                              | доступна на GitHub в репозитории  ParaView-Blender  — в виде |                              |
|                         |                              | исходных STL/PLY файлов и проекта Blender.     AR Модель     |                              |
|                         |                              | геотермального резервуара Лахендонг, полуостров Минахаса,    |                              |
|                         |                              | Северный Сулавеси, Индонезия  Замеры температуры по          |                              |
|                         |                              | скважинам обозначены цветными дисками — синим 0-150°C        |                              |
|                         |                              | (далеко от резервуара), белым 150-250°C (переходная область  |                              |
|                         |                              | вблизи от резервуара), красным 250-350°C (внутри             |                              |
|                         |                              | геотермального резервуара).    Вместо введения, или зачем    |                              |
|                         |                              | все это нужно   Первое, с чем я столкнулся в                 |                              |
|                         |                              | геологоразведывательных проектах — все доступные исходные    |                              |
|                         |                              | данные не полные и не достоверные, а зачастую,               |                              |
|                         |                              | сфальсифицированы или не имеют отношения к делу. Как же это  |                              |
|                         |                              | получается? Дело в том, что чаще всего нам доступны          |                              |
|                         |                              | косвенные наблюдения, а не прямые наблюдения, и эти данные   |                              |
|                         |                              | очень разнородны и требуют привлечения инструментов и        |                              |
|                         |                              | специалистов из разных наук. Ниже мы рассмотрим эти проблемы |                              |
|                         |                              | подробнее.   К примеру, мы не можем пробурить скважину до    |                              |
|                         |                              | центра Земли и собрать образцы, поэтому приходится           |                              |
|                         |                              | придумывать другие способы исследования — скажем,            |                              |
|                         |                              | регистрировать волны мощных землетрясений и прочих           |                              |
|                         |                              | геологических событий в разных местах планеты и              |                              |
|                         |                              | сопоставлять, пытаясь определить, прошла ли волна напрямую   |                              |
|                         |                              | (по хорде) через толщу земли или отклонилась, как волна      |                              |
|                         |                              | замедлилась и так далее. В результате, когда была пробурена  |                              |
|                         |                              | Кольская сверхглубокая скважина , вся наша устоявшаяся       |                              |
|                         |                              | геологическая картина оказалась ошибочной — неведомым        |                              |
|                         |                              | образом температуры в глубине вдвое выше ожидаемых (к потоку |                              |
|                         |                              | тепла из глубинных слоев еще столько же добавляется в        |                              |
|                         |                              | результате нагрева от радиоктивного распада), породы не      |                              |
|                         |                              | плотные, а очень трещиноватые и заполненные водой (притом,   |                              |
|                         |                              | на поверхности начали бурить сплошной и прочный Балтийский   |                              |
|                         |                              | щит возрастом миллиарды лет), отсутствует ожидаемый переход  |                              |
|                         |                              | между гранитами и базальтами на глубине около 7км (этот      |                              |
|                         |                              | переход отлично виден на сейсмограммах и не было сомнений в  |                              |
|                         |                              | его существовании),… При этом, образцы пород (керн)          |                              |
|                         |                              | удавалось получить в виде грязи или пыли, в зависимости от   |                              |
|                         |                              | влагонасыщенности пород (то есть даже простое, на первый     |                              |
|                         |                              | взгляд, измерение плотности пород задача весьма непростая).  |                              |
|                         |                              | Почему я говорю именно про эту скважину? Потому, что это     |                              |
|                         |                              | проект мирового масштаба и призванный (в свое время)         |                              |
|                         |                              | показать всю силу советской науки, то есть выполнялся на     |                              |
|                         |                              | "высшем уровне", в то время как результаты коммерческого     |                              |
|                         |                              | бурения очень далеки от него по качеству сбора образцов и их |                              |
|                         |                              | анализа, и все подробности и неточности сбора и обработки    |                              |
|                         |                              | данных не регистрируются.    Про фальсификации это отдельная |                              |
|                         |                              | увлекательная история. Помнится, я очень удивился, когда     |                              |
|                         |                              | узнал о существовании геологов-детективов, которые ищут      |                              |
|                         |                              | полезные ископаемые… в архивах. В частности, в США по закону |                              |
|                         |                              | необходимо сдавать геологические отчеты в правительственный  |                              |
|                         |                              | архив, и государство очень не любит там фальсификаций, хотя  |                              |
|                         |                              | просто ошибки, конечно, простительны. Так вот, не редки      |                              |
|                         |                              | случаи, когда при бурении, скажем, на нефть, вопреки всем    |                              |
|                         |                              | ожиданиям, скважина оказывается сухой. В этом случае отчет   |                              |
|                         |                              | сдается в архив и геологи выбирают место для новой скважины. |                              |
|                         |                              | Но далеко не всегда такая скважина действительно сухая! Если |                              |
|                         |                              | геолог или буровики допустили ошибку и пробили нефтеносный   |                              |
|                         |                              | горизонт, они могут отчитаться о пустой скважине и избежать  |                              |
|                         |                              | обвинений и ответственности за потерю скважины. В таком      |                              |
|                         |                              | случае, скважина попадает в общедоступную базу данных как    |                              |
|                         |                              | сухая и рядом обычно скважины никто не бурит. А вот в        |                              |
|                         |                              | сданных в архив геологических отчетах можно найти правду или |                              |
|                         |                              | ее часть и восстановить истинную ситуацию, а потенциал       |                              |
|                         |                              | погубленной скважины может оказаться превосходным. Такие     |                              |
|                         |                              | находки потом продаются нефтедобытчикам — нужно лишь         |                              |
|                         |                              | пробурить новую скважину с практически гарантированным       |                              |
|                         |                              | результатом, притом, что земля с пустой скважиной стоит      |                              |
|                         |                              | дешевле, чем с действующими или поблизости от них.   Еще     |                              |
|                         |                              | есть совпадения и ошибки интерпретации. Поскольку            |                              |
|                         |                              | геологоразведка состоит из многих этапов (и никогда не       |                              |
|                         |                              | заканчивается), зачастую интерпретацию данных каждого этапа  |                              |
|                         |                              | используют на последующих без пересмотра и анализа всех      |                              |
|                         |                              | собранных данных совместно. Рассмотрим на примере нефтяного  |                              |
|                         |                              | участка в России, уже зарегистрированного с отличным         |                              |
|                         |                              | ресурсным потенциалом (извлекаемыми запасами нефти). Дело    |                              |
|                         |                              | было примерно так: разведка, как полагается, началась        |                              |
|                         |                              | весной, пара пробуренных скважин оказались рабочими и        |                              |
|                         |                              | показали отличное давление нефтяного пласта. Геологи         |                              |
|                         |                              | проанализировали данные сейсмики и бурения и нарисовали      |                              |
|                         |                              | модель мощной нефтяной линзы, посчитали извлекаемый объем    |                              |
|                         |                              | (много!), с этими результатами зарегистрировали              |                              |
|                         |                              | месторождение и участок был продан компании, занимающейся    |                              |
|                         |                              | добычей нефти. Но вскоре что-то пошло не так и давление в    |                              |
|                         |                              | скважинах упало. Не беда, главное, это отличное новое        |                              |
|                         |                              | месторождение. У скважин попробовали менять режим работы,    |                              |
|                         |                              | возможно, попробовали еще немного пробурить и так далее — и  |                              |
|                         |                              | на следующую весну они снова фонтанировали нефтью. Все бы    |                              |
|                         |                              | хорошо, но через пару месяцев давление снова упало… Проверка |                              |
|                         |                              | всех данных показала, что найденный "нефтяной пласт" не был  |                              |
|                         |                              | проанализирован и оказался водным (что, кстати, подсказывал  |                              |
|                         |                              | рельеф местности и водотоки), а нефть (более легкая, чем     |                              |
|                         |                              | вода) находилась лишь в тонкой прослойке, и мало того,       |                              |
|                         |                              | хорошее давление в пласте создавалось лишь весной за счет    |                              |
|                         |                              | грунтовых вод (достаточно сравнить подъем поверхности по     |                              |
|                         |                              | данным спутниковой интерферометрии, совпадающий с периодами  |                              |
|                         |                              | высокого давления в скважинах). Почему не пробурили саму     |                              |
|                         |                              | потенциальную нефтяную линзу для проверки? Все просто — ее   |                              |
|                         |                              | центр находится за пределами данного участка и принадлежит   |                              |
|                         |                              | другому владельцу, так что там бурить не было возможности.   |                              |
|                         |                              | Что ж, бывает, именно поэтому многие компании, занимающиеся  |                              |
|                         |                              | разведкой полезных ископаемых, не занимаются их промышленной |                              |
|                         |                              | добычей.   Хотел еще про золото на примерах рассказать, но   |                              |
|                         |                              | как-то много получается, так что как-нибудь в другой раз.    |                              |
|                         |                              | Вкратце — для поиска золота (и не только для него) может     |                              |
|                         |                              | потребоваться восстанавливать древний рельеф (палеорельеф) и |                              |
|                         |                              | водотоки, изучать пути переноса и тогда, может быть, удастся |                              |
|                         |                              | построить карту расположения как россыпного, так и коренного |                              |
|                         |                              | (рудного) золота. Первое намного легче найти — из названия   |                              |
|                         |                              | понятно, что оно как бы рассыпано на поверхности… или под    |                              |
|                         |                              | ней, образуется при разрушении (выветривании, размытии)      |                              |
|                         |                              | выходов коренных месторождений на поверхность и постепенно   |                              |
|                         |                              | вымываются оттуда (древние водотоки, помните) и              |                              |
|                         |                              | накапливаются где-то в низинах (вот почему важен             |                              |
|                         |                              | палеорельеф). Второе найти намного сложнее, так как выходы   |                              |
|                         |                              | на поверхность могут быть точечными и неведомо где           |                              |
|                         |                              | расположенными вдали от россыпного золота, зато и золота там |                              |
|                         |                              | больше. Для тех, кто не хочет рисковать, но хочет манить —   |                              |
|                         |                              | есть довольно беспроигрышный вариант с повторной добычей на  |                              |
|                         |                              | выбранных в прошлые века россыпных месторождениях, так как с |                              |
|                         |                              | современной техникой там еще можно добыть золота… а в        |                              |
|                         |                              | свободное время погулять вокруг, присмотреться, можно и      |                              |
|                         |                              | коренное найти (примерно этим там геолог и занимается в      |                              |
|                         |                              | свободное от текущих задач время, конечно, ходит не просто   |                              |
|                         |                              | так, но походить придется). При этом приходится сталкиваться |                              |
|                         |                              | с так называемыми ураганными пробами (специалистам по данным |                              |
|                         |                              | известны как outliers), которые правдивы технически (в самом |                              |
|                         |                              | деле, в отдельной низинке может лежать горсть самородков) но |                              |
|                         |                              | совершенно не информативны в целом (вся территория           |                              |
|                         |                              | гарантированно не будет покрыта слоем самородков!). А еще    |                              |
|                         |                              | геолог, как правило, вовсе не стремится делать бесполезную   |                              |
|                         |                              | работу и будет брать пробы там, где, по его мнению, есть     |                              |
|                         |                              | надежда найти золото и игнорировать всю ту территорию,       |                              |
|                         |                              | которую считает бесперспективной — таким образом,            |                              |
|                         |                              | подавляющая часть территории окажется вовсе не               |                              |
|                         |                              | проанализированной, так что выборка получается очень         |                              |
|                         |                              | смещенной.   Наконец, очень много допускается просто ошибок  |                              |
|                         |                              | — при конвертировании данных из разных систем координат, при |                              |
|                         |                              | копировании между разными документами и, особенно, при       |                              |
|                         |                              | оцифровке бумажных отчетов (в том числе потому, что там      |                              |
|                         |                              | часто просто не удается разобрать написанного, а перенести   |                              |
|                         |                              | надо всю информацию, хоть как-нибудь и без отметок о         |                              |
|                         |                              | достоверности полученного пересказа). Классическая проблема  |                              |
|                         |                              | — нулевые координаты скважин (0,0), географически это дно    |                              |
|                         |                              | океана около Африки и совпадающие ширина и долгота (зная     |                              |
|                         |                              | координаты участка, легко определить, что именно напутано,   |                              |
|                         |                              | вопрос лишь, где взять недостающую координату).   Таким      |                              |
|                         |                              | образом, из вышесказаного становится ясно, что никаким       |                              |
|                         |                              | данным априори доверять нельзя, а нужно все проверять и      |                              |
|                         |                              | сопоставлять, а при получении геологического результата      |                              |
|                         |                              | снова перепроверять те данные, которые к нему привели.       |                              |
|                         |                              | Именно поэтому нейросети и прочие недетерминированные методы |                              |
|                         |                              | применяются, в основном, для прикидки — как правило, это     |                              |
|                         |                              | далеко не лучшая идея засунуть в "черный ящик" мусорные      |                              |
|                         |                              | данные ("мусор на входе — мусор на выходе"). Спасают во всем |                              |
|                         |                              | этом калейдоскопе методы анализа и очистки данных (data      |                              |
|                         |                              | science) и качественная визуализация, которой никогда не     |                              |
|                         |                              | бывает много -на ней геолог видит намного больше, чем        |                              |
|                         |                              | специалист по данным, который эту визуализацию и сделал.     |                              |
|                         |                              | Вряд ли нам удастся выбрать идеальный ракурс для статичной   |                              |
|                         |                              | модели с точки зрения геолога (притом, как вы уже            |                              |
|                         |                              | догадались, три геолога попросят три разных ракурса).        |                              |
|                         |                              | Возможности дополненой или виртуальной реальности позволяют  |                              |
|                         |                              | легко и быстро масштабировать и перемещать модель,           |                              |
|                         |                              | просматривать с любый ракурсов и делать скриншоты для их     |                              |
|                         |                              | сверки с данными — получается виртуальное геологическое      |                              |
|                         |                              | исследование. Все это в общем-то понятно и очевидно, а       |                              |
|                         |                              | действительно актуальным стало лишь с появлением широко      |                              |
|                         |                              | распространенных стандартов, поддерживаемых во множестве     |                              |
|                         |                              | смартфонов, которые сегодня есть почти у всех.   Технические |                              |
|                         |                              | подробности   Как говорится, все развивается по спирали, и с |                              |
|                         |                              | технологией виртуальной реальности с моделями формата VRML я |                              |
|                         |                              | столкнулся полтора десятка лет назад. Увы, это было          |                              |
|                         |                              | практически бесполезно, поскольку ресурсов обычного          |                              |
|                         |                              | десктопного компьютера не хватало на комфортную работу с     |                              |
|                         |                              | моделью, а через несколько минут вынужденно медленного       |                              |
|                         |                              | просмотра приходилось перезапускать программу просмотра,     |                              |
|                         |                              | поскольку она выходила за пределы доступной оперативной      |                              |
|                         |                              | памяти и дальнейшая работа становилась невозможной. Это уж   |                              |
|                         |                              | не говоря о необходимости ставить какой-то сомнительный софт |                              |
|                         |                              | для просмотра таких моделей, причем программ просмотрщиков   |                              |
|                         |                              | было много и они были несовместимы между собой… Сегодня      |                              |
|                         |                              | многое изменилось — каждый более-менее современный MacOS     |                              |
|                         |                              | компьютер и iOS/iPadOS устройство имеют поддержку просмотра  |                              |
|                         |                              | моделей дополненной реальности, причем это очень удобно      |                              |
|                         |                              | делать именно с мобильного устройства, которое при этом даже |                              |
|                         |                              | не грееется на ощупь и позволяет очень плавно и со всех      |                              |
|                         |                              | сторон осматривать модель и с ней взаимодействовать          |                              |
|                         |                              | (масштабировать, перемещать, вращать). Также возможно        |                              |
|                         |                              | добавлять в модели различные триггеры событий и ссылки на    |                              |
|                         |                              | веб-адреса, делать анимации и так далее. Все это и послужило |                              |
|                         |                              | причиной, почему я, после обновения на MacOS Catalina (мне и |                              |
|                         |                              | с предыдущей хорошо было, так что обычно я жду года после    |                              |
|                         |                              | выхода, прежде чем обновляться на новую, уже стабильную      |                              |
|                         |                              | систему) решил попробовать сделать такую модель в            |                              |
|                         |                              | дополненной реальности. Чтобы упростить себе задачу, начал   |                              |
|                         |                              | со статической модели, вдобавок, которая у меня уже готова в |                              |
|                         |                              | виде проекта Blender.   Apple предлагает набор средств       |                              |
|                         |                              | разработки  AR Creation Tools , из которых мне пока          |                              |
|                         |                              | потребовался только консольный Python модуль  USDZ Tools , а |                              |
|                         |                              | рекомендуемый Reality Composer потребовал установки среды    |                              |
|                         |                              | разработки XCode (внимание: сразу после инсталляции занимает |                              |
|                         |                              | 30ГБ места на диске) и еще не пригодился. Отдельно           |                              |
|                         |                              | устанавливаемый Reality Convertor умеет шуметь вентилятором  |                              |
|                         |                              | и делает то же самое, что и Python модуль, а еще в нем можно |                              |
|                         |                              | красивый скриншот модели сделать (смотрите картинку в начале |                              |
|                         |                              | статьи).   Смотрите на GitHub модель и инструкции для        |                              |
|                         |                              | переноса данных из ParaView в Blender и в AR модель (или     |                              |
|                         |                              | сделанных с помощью библиотеки VTK в Jupyter notebook, как   |                              |
|                         |                              | описано в моей предыдущей статье):  ParaView-Blender  В      |                              |
|                         |                              | поддиректории "export" кратко приведены подробности переноса |                              |
|                         |                              | и подготовки данных. Сами исходные данные модели и проект    |                              |
|                         |                              | Blender доступны в поддиректории "Minahasa". Там же доступны |                              |
|                         |                              | "сырые" данные в виде скриптов Google Earth Engine (GEE),    |                              |
|                         |                              | GeoJSON, TIFF, NetCDF файлов обратной геофизической модели   |                              |
|                         |                              | для исходного проекта ParaView. Вот как выглядит нужный нам  |                              |
|                         |                              | резервуар:     Рендеринг из проекта Blender на GitHub — для  |                              |
|                         |                              | AR упростим проект   Формат экспорта gITF 2.0 позволяет      |                              |
|                         |                              | разом перенести множество объектов из Blender, команда       |                              |
|                         |                              | конвертации приведена на гитхабе по ссылке выше. При этом,   |                              |
|                         |                              | необходимые текстуры требуется предварительно подготавливать |                              |
|                         |                              | и сохранять в отдельные файлы с помощью их "прожига" (Bake). |                              |
|                         |                              | Для переноса в формат модели AR пришлось обойтись диффузным  |                              |
|                         |                              | шейдером и "прожигом" (Bake) только диффузного света         |                              |
|                         |                              | согласно цветам узлов модели как показано ниже:     Проект   |                              |
|                         |                              | Blender с готовой для экспорта в AR моделью — за основу взят |                              |
|                         |                              | проект из репозитория  ParaView-Blender   Также есть         |                              |
|                         |                              | интересный нюанс с незамкнутыми поверхностями, например, с   |                              |
|                         |                              | рельефом в рассматриваемой модели — для отображения          |                              |
|                         |                              | приходится дублировать поверхность с инвертированными        |                              |
|                         |                              | нормалями, тогда все выглядит как требуется.   Заключение    |                              |
|                         |                              | Что же мы получили в итоге? На полученной модели резервуар   |                              |
|                         |                              | выделен по данным решения обратной геофизической модели      |                              |
|                         |                              | независимо от проб температур по скважинам. Здесь стало явно |                              |
|                         |                              | видно, почему часть скважин холодные, а другие горячие, хотя |                              |
|                         |                              | все они расположены очень близко. В обычной 3D модели очень  |                              |
|                         |                              | сложно все это показать, поскольку форма резервуара сложная, |                              |
|                         |                              | а если ее упростить для визуализации — потеряется весь смысл |                              |
|                         |                              | модели. Для упрощения, здесь мы удалили поверхность,         |                              |
|                         |                              | отображающую переходную зону, в нее попадают «белые» пробы   |                              |
|                         |                              | температур по скважинам. Можно ее добавить, ценой            |                              |
|                         |                              | соответствующего увеличения размера файла (зачастую размер   |                              |
|                         |                              | моделей составляет 50-100МБ), равно как добавить и другие    |                              |
|                         |                              | данные.   Получилось много текста, и даже без формул, что    |                              |
|                         |                              | для меня несколько странно. В связи с приближением полевого  |                              |
|                         |                              | сезона, коллега геолог занят золотыми месторождениями в      |                              |
|                         |                              | Сибири и мой текст еще не проверял, поэтому возможны ошибки  |                              |
|                         |                              | в геологических терминах, буду благодарен читателям за       |                              |
|                         |                              | сообщения об этом. Стоит ли продолжать тематику и о чем      |                              |
|                         |                              | рассказать? Мне кажется, мы уже кратко рассмотрели полный    |                              |
|                         |                              | цикл работы — от подготовки данных и теории до               |                              |
|                         |                              | программирования и визуализации моделей, теперь можно о чем- |                              |
|                         |                              | то подробнее поговорить, если будет интерес. Может быть, вы  |                              |
|                         |                              | хотите видеть больше готовых моделей? Часть наших моделей    |                              |
|                         |                              | уже доступны на  YouTube канале , возможно, дальше будем     |                              |
|                         |                              | параллельно выкладывать AR модели. Конечно, рабочих участков |                              |
|                         |                              | здесь нет, все эти модели сделаны для апробации технологии и |                              |
|                         |                              | территорий — хоть это и трудоемко, но стоит того, на наш     |                              |
|                         |                              | взгляд. Подробнее и чаще мы публикуемся на  LinkedIn  для    |                              |
|                         |                              | открытого обсуждения — там можно модель по любой территории  |                              |
|                         |                              | обсудить с геологами, работавшими в данной местности,        |                              |
|                         |                              | попросить у сообщества геологические карты или другие данные |                              |
|                         |                              | и так далее.                                                 |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |       Книга «Паттерны        |  Привет, Хаброжители! Паттерны проектирования — удобный      |             net              |
| pany/piter/blog/546492/ |   проектирования для C# и    | прием программирования для решения рутинных задач разработки |              c#              |
|                         |     платформы .NET Core»     | ПО. Грамотное использование паттернов позволяет добиться     |                              |
|                         |                              | соответствия любым требованиям и снизить расходы. В этой     |                              |
|                         |                              | книге описаны эффективные способы применения паттернов       |                              |
|                         |                              | проектирования с учётом специфики языка C# и платформы .NET  |                              |
|                         |                              | Core.    Кроме знакомых паттернов проектирования из книги    |                              |
|                         |                              | «Банды четырех» вы изучите основы объектно-ориентированного  |                              |
|                         |                              | программирования и принципов SOLID. Затем узнаете о          |                              |
|                         |                              | функциональных, реактивных и конкурентных паттернах, с       |                              |
|                         |                              | помощью которых будете работать с потоками и корутинами.     |                              |
|                         |                              | Заключительная часть содержит паттерны для работы с          |                              |
|                         |                              | микросервисными, бессерверными и облачно-ориентированными    |                              |
|                         |                              | приложениями. Вы также узнаете, как сделать выбор            |                              |
|                         |                              | архитектуры, например микросервисной или MVC.     Кому       |                              |
|                         |                              | подойдет эта книга  Целевая аудитория — разработчики         |                              |
|                         |                              | современных приложений. Поскольку книга содержит много кода, |                              |
|                         |                              | чтобы объяснить, как и где используются паттерны,            |                              |
|                         |                              | подразумевается наличие у читателя опыта в разработке ПО. Не |                              |
|                         |                              | стоит рассматривать данную книгу как «программирование для   |                              |
|                         |                              | чайников», скорее она отвечает на вопрос «Как                |                              |
|                         |                              | программировать лучше». Поэтому издание будет полезно        |                              |
|                         |                              | начинающим и опытным программистам, архитекторам приложений  |                              |
|                         |                              | и проектировщикам.     Вы научитесь       Повышать гибкость  |                              |
|                         |                              | кода, используя принципы SOLID.   Применять разработку через |                              |
|                         |                              | тестирование (TDD) в ваших проектах на .NET Core.            |                              |
|                         |                              | Выполнять эффективную миграцию баз данных, обеспечивать      |                              |
|                         |                              | долговременное хранение данных и их тестирование.            |                              |
|                         |                              | Преобразовывать консольное приложение в веб-приложение с     |                              |
|                         |                              | помощью подходящего MVP.   Писать асинхронный, многопоточный |                              |
|                         |                              | и параллельный код.   Использовать парадигму MVVM и работать |                              |
|                         |                              | с RxJS и AngularJS для управления изменениями в базах        |                              |
|                         |                              | данных.   Откроете для себя возможности микросервисов,       |                              |
|                         |                              | бессерверного программирования и облачных вычислений.        |                              |
|                         |                              | Реактивность и интерфейс IObservable  В предыдущем разделе   |                              |
|                         |                              | мы обсудили реактивное программирование и рассмотрели его    |                              |
|                         |                              | модель. Здесь мы обсудим его реализацию компанией Microsoft. |                              |
|                         |                              | В ответ на реактивное программирование в .NET Core у нас     |                              |
|                         |                              | есть различные интерфейсы, которые обеспечивают способ       |                              |
|                         |                              | реализации реактивного программирования в нашем приложении.  |                              |
|                         |                              | Интерфейс IObservable< T > — универсальный, определен в      |                              |
|                         |                              | пространстве имен System и объявлен как public interface     |                              |
|                         |                              | IObservable < out T > . Здесь T представляет универсальный   |                              |
|                         |                              | тип параметра, который дает информацию об уведомлении. Если  |                              |
|                         |                              | коротко, то этот интерфейс помогает определить поставщика    |                              |
|                         |                              | уведомлений и они могут быть отправлены для получения        |                              |
|                         |                              | информации. Паттерн «Наблюдатель» можно использовать при     |                              |
|                         |                              | реализации интерфейса IObservable< T > в приложении.         |                              |
|                         |                              | Паттерн «Наблюдатель» — реализация с помощью IObservable< T  |                              |
|                         |                              | >  Говоря коротко, подписчик регистрируется у издателя       |                              |
|                         |                              | (поставщика), чтобы получать уведомления, связанные с        |                              |
|                         |                              | информацией о сообщении. Они уведомляют поставщика о том,    |                              |
|                         |                              | что сообщения были доставлены подписчикам. Вдобавок данная   |                              |
|                         |                              | информация может быть связана с изменениями в операциях или  |                              |
|                         |                              | любыми другими изменениями в самом методе или объекте. Это   |                              |
|                         |                              | также известно как  изменения состояния .   Паттерн          |                              |
|                         |                              | «Наблюдатель» определяет два термина: наблюдатель и          |                              |
|                         |                              | наблюдаемое. Второе — это поставщик, также известный как     |                              |
|                         |                              | субъект. Наблюдатель регистрируется в типах                  |                              |
|                         |                              | Observable/Subject/Provider и будет автоматически уведомлен  |                              |
|                         |                              | поставщиком о любых изменениях, вызванных заранее            |                              |
|                         |                              | определенными критериями/условиями, изменением или событием  |                              |
|                         |                              | и т. д.  На рис. 10.16 изображено простое представление      |                              |
|                         |                              | модели наблюдателя, где субъект уведомляет двух разных       |                              |
|                         |                              | наблюдателей.      Вернитесь к веб-приложению из главы 9,    |                              |
|                         |                              | запустите программу Visual Studio и откройте файл            |                              |
|                         |                              | FlixOne.sln.    Содержимое панели Solution Explorer          |                              |
|                         |                              | (Обозреватель решений) должно выглядеть примерно так, как    |                              |
|                         |                              | показано на рис. 10.17.      Разверните папку Common на      |                              |
|                         |                              | панели Solution Explorer (Обозреватель решений) и добавьте   |                              |
|                         |                              | два файла: ProductRecorder.cs и ProductReporter.cs. Они      |                              |
|                         |                              | являются реализацией интерфейсов IObservable< T > и          |                              |
|                         |                              | IObserver< T >. Нам также нужно добавить новую модель        |                              |
|                         |                              | ViewModel, чтобы мы могли сообщать пользователям об          |                              |
|                         |                              | актуальных сообщениях. Для этого необходимо открыть папку    |                              |
|                         |                              | Models и добавить файл MessageViewModel.cs.    Следующий код |                              |
|                         |                              | показывает наш класс MessageViewModel:      Класс            |                              |
|                         |                              | MessageViewModel содержит следующее:       MsgId —           |                              |
|                         |                              | уникальный идентификатор;     IsSuccess — показывает, была   |                              |
|                         |                              | ли операция успешной;     Message — сообщение об успехе или  |                              |
|                         |                              | об ошибке, которое зависит от значения IsSuccess;            |                              |
|                         |                              | ToString() — переопределенный метод, который возвращает      |                              |
|                         |                              | строку после объединения всех сведений.    Теперь обсудим    |                              |
|                         |                              | два наших класса; следующий код взят из класса               |                              |
|                         |                              | ProductRecorder:      Наш класс ProductRecorder реализует    |                              |
|                         |                              | интерфейс IObservable. Если вы вспомните нашу дискуссию о    |                              |
|                         |                              | наблюдателе, то узнаете, что этот класс на самом деле        |                              |
|                         |                              | является поставщиком, субъектом или наблюдаемым. Интерфейс   |                              |
|                         |                              | IObservable< T > имеет метод Subscribe, который мы должны    |                              |
|                         |                              | использовать для подписки наших подписчиков или наблюдателей |                              |
|                         |                              | (мы обсудим наблюдателя позже в этом разделе).    Должен     |                              |
|                         |                              | существовать критерий или условие, чтобы подписчик мог       |                              |
|                         |                              | получать уведомления. В нашем случае метод Record служит     |                              |
|                         |                              | этой цели. Рассмотрим следующий код:      Здесь мы видим     |                              |
|                         |                              | метод Record. Мы создали его, чтобы продемонстрировать мощь  |                              |
|                         |                              | паттерна. Этот метод просто проверяет корректность скидки.   |                              |
|                         |                              | Если значение discount rate недопустимо в соответствии с     |                              |
|                         |                              | критерием/условием, то данный метод вызовет исключение и     |                              |
|                         |                              | передаст название продукта с этим недопустимым значением.    |                              |
|                         |                              | Предыдущий метод проверяет значение discount rate в          |                              |
|                         |                              | соответствии с критериями и отправляет уведомление о         |                              |
|                         |                              | возникшем исключении подписчику при невыполнении критериев.  |                              |
|                         |                              | Взгляните на блок итераций (цикл foreach) и вообразите       |                              |
|                         |                              | ситуацию, когда нам нечего повторять, а все подписчики были  |                              |
|                         |                              | уведомлены. Можно ли представить, что произойдет в этом      |                              |
|                         |                              | случае? Такая же ситуация может возникнуть и для             |                              |
|                         |                              | бесконечного цикла. Остановить это поможет нечто завершающее |                              |
|                         |                              | цикл. Для подобных случаев у нас есть метод EndRecording:    |                              |
|                         |                              | Наш метод EndRecoding пропускает через цикл коллекцию        |                              |
|                         |                              | _observers и запускает метод OnCompleted(). Наконец, она     |                              |
|                         |                              | очистила коллекцию _observers.    Теперь обсудим класс       |                              |
|                         |                              | ProductReporter. Он является примером реализации интерфейса  |                              |
|                         |                              | IObserver< T >. Рассмотрим код:      В интерфейсе IObserver< |                              |
|                         |                              | T > есть методы OnComplete, OnError, и OnNext, которые мы    |                              |
|                         |                              | должны реализовать в классе ProductReporter. Цель метода     |                              |
|                         |                              | OnCompleted — уведомить подписчика о выполнении работы и     |                              |
|                         |                              | затем отменить его подписку. Кроме того, OnError вызывается  |                              |
|                         |                              | при возникновении ошибки во время выполнения, в то время как |                              |
|                         |                              | OnNext предоставляет информацию об очередном элементе в      |                              |
|                         |                              | последовательности потока.    В следующем коде метод         |                              |
|                         |                              | PrepReportData — дополнение значения, которое предоставляет  |                              |
|                         |                              | пользователю форматированный отчет обо всех операциях        |                              |
|                         |                              | процесса:      Описанный метод — простое добавление модели к |                              |
|                         |                              | нашей коллекции Reporter, которая представляет собой         |                              |
|                         |                              | коллекцию классов MessageViewModel. Обратите внимание: в     |                              |
|                         |                              | целях упрощения вы также можете использовать метод           |                              |
|                         |                              | ToString() в MessageViewModel.    Следующий фрагмент кода    |                              |
|                         |                              | показывает методы Subcribe и Unsubscribe:      Два           |                              |
|                         |                              | предыдущих метода сообщают системе, что провайдер            |                              |
|                         |                              | существует. Подписчики могут подписаться на провайдера или   |                              |
|                         |                              | отказаться от подписки/избавиться от него после завершения   |                              |
|                         |                              | операций.    Теперь пришло время продемонстрировать нашу     |                              |
|                         |                              | реализацию и увидеть некоторые результаты. Чтобы сделать     |                              |
|                         |                              | это, нам нужно внести некоторые изменения в существующую     |                              |
|                         |                              | страницу Product Listing и добавить новую  страницу          |                              |
|                         |                              | представления  в проект. Добавьте ссылку на представление    |                              |
|                         |                              | Audit Report (Аудиторский отчет) на нашу страницу            |                              |
|                         |                              | Index.cshtml:      В предыдущем фрагменте кода мы добавили   |                              |
|                         |                              | новую ссылку на страницу Audit Report  (Аудиторский отчет),  |                              |
|                         |                              | основанную на нашей реализации метода Report Action,         |                              |
|                         |                              | который мы определили в нашем классе ProductConstroller.     |                              |
|                         |                              | После добавления этого кода наша страница Product Listing    |                              |
|                         |                              | (Список продуктов) будет выглядеть следующим образом (рис.   |                              |
|                         |                              | 10.18).      Для начала обсудим метод Report action. Для     |                              |
|                         |                              | этого рассмотрим следующий код:      В данном коде мы берем  |                              |
|                         |                              | только первые три продукта для демонстрационных целей.       |                              |
|                         |                              | Обратите внимание: вы можете изменить код в соответствии с   |                              |
|                         |                              | собственной реализацией. В коде мы создали класс             |                              |
|                         |                              | productProvider и трех наблюдателей для подписки на наш      |                              |
|                         |                              | класс productProvider.    На рис. 10.19 наглядно             |                              |
|                         |                              | представлены все действия для демонстрации интерфейсов       |                              |
|                         |                              | IObservable< T > и IObserver< T >, которые мы обсудили.      |                              |
|                         |                              | Следующий код используется для подписки на productrovider:   |                              |
|                         |                              | Наконец, нам нужно записать отчет в журнал и затем           |                              |
|                         |                              | отказаться от подписки:      Вернемся к нашему экрану и      |                              |
|                         |                              | добавим файл Report.cshtml в Views->Product                  |                              |
|                         |                              | (Представления->Продукт). Следующий код — часть нашей        |                              |
|                         |                              | страницы Report (Отчет). Полный код можно найти в папке      |                              |
|                         |                              | Product:      Этот код создаст заголовок для столбцов нашей  |                              |
|                         |                              | таблицы, в котором будет показан аудиторский отчет.          |                              |
|                         |                              | Следующий код завершит таблицу и добавит значения в          |                              |
|                         |                              | IsSuccess и столбцы Message:      На этом мы закончили       |                              |
|                         |                              | реализацию паттерна «Наблюдатель» с помощью интерфейсов      |                              |
|                         |                              | IObservable< T > и IObserver< T >. Запустите проект в Visual |                              |
|                         |                              | Studio, нажав клавишу F5, щелкните кнопкой мыши на ссылке    |                              |
|                         |                              | Product (Продукт) на главной странице, а затем по ссылке     |                              |
|                         |                              | Audit Report (Аудиторский отчет). Вы увидите аудиторский     |                              |
|                         |                              | отчет по выбранным нами продуктам, как показано на рис.      |                              |
|                         |                              | 10.20.    Здесь представлена простая страница листинга, на   |                              |
|                         |                              | которой показаны данные из класса MessageViewModel. Вы       |                              |
|                         |                              | можете вносить изменения и модифицировать их в соответствии  |                              |
|                         |                              | с вашими требованиями. В целом аудиторские отчеты поступают  |                              |
|                         |                              | от многих видов оперативной деятельности, которые мы видим   |                              |
|                         |                              | на данном экране. Вы также можете сохранить проверенные      |                              |
|                         |                              | данные в базе данных, а затем обслуживать их соответствующим |                              |
|                         |                              | образом для различных целей, например для составления        |                              |
|                         |                              | отчетов администратору и не только.     Реактивные           |                              |
|                         |                              | расширения: .NET Rx Extensions  Обсуждение в предыдущем      |                              |
|                         |                              | разделе было направлено на реактивное программирование и его |                              |
|                         |                              | реализацию с помощью интерфейсов IObservable< T > и          |                              |
|                         |                              | IObserver< T > в качестве паттерна «Наблюдатель». В этом     |                              |
|                         |                              | разделе мы будем развивать наше обучение с помощью Rx        |                              |
|                         |                              | Extensions. Если вы хотите узнать больше о данной            |                              |
|                         |                              | разработке, то вам следует обратиться к официальному         |                              |
|                         |                              | репозиторию по адресу github.com/dotnet/reactive.            |                              |
|                         |                              | Обратите внимание: Rx Extensions теперь объединены с         |                              |
|                         |                              | пространством имен System и вы можете найти их все в         |                              |
|                         |                              | пространстве имен System.Reactive. Если у вас есть опыт      |                              |
|                         |                              | работы с Rx Extensions, то вы должны знать, что пространство |                              |
|                         |                              | имен этих расширений было изменено следующим образом:        |                              |
|                         |                              | Rx.Main изменено на System.Reactive;     Rx.Core изменено на |                              |
|                         |                              | System.Reactive.Core;     интерфейсы Rx.Interfaces изменены  |                              |
|                         |                              | на System.Reactive.Interfaces;     Rx.Linq изменено на       |                              |
|                         |                              | System.Reactive.Linq;     Rx.PlatformServices изменен на     |                              |
|                         |                              | System.Reactive.PlatformServices;     Rx.Testing изменено на |                              |
|                         |                              | Microsoft.Reactive.Testing.    Для начала откройте в Visual  |                              |
|                         |                              | Studio проект SimplyReactive (обсуждался в предыдущем        |                              |
|                         |                              | разделе) и панель NuGet Package Manager (Менеджер пакетов    |                              |
|                         |                              | NuGet). Нажмите кнопку Browse (Поиск) и введите поисковый    |                              |
|                         |                              | запрос System.Reactive. Вы увидите следующие результаты      |                              |
|                         |                              | (рис. 10.21).      Цель данного раздела — познакомить вас с  |                              |
|                         |                              | реактивными расширениями, но не углубляться в их внутреннее  |                              |
|                         |                              | развитие. Они находятся под лицензией Apache2.0 и            |                              |
|                         |                              | поддерживаются .NET Foundation. Мы уже реализовали           |                              |
|                         |                              | реактивные расширения в приложении SimplyReactive.     Об    |                              |
|                         |                              | авторах   Гаурав Арораа  получил степень магистра в области  |                              |
|                         |                              | компьютерных наук, имеет сертификаты Microsoft MVP, Alibaba  |                              |
|                         |                              | Cloud MVP, тренера/коуча по Scrum. Член Компьютерного        |                              |
|                         |                              | сообщества Индии (CSI), сотрудник IndiaMentor,               |                              |
|                         |                              | сертифицированный специалист ITIL Foundation, APMG PRINCE-F  |                              |
|                         |                              | и APMG PRINCE-P. Гаурав — разработчик открытого программного |                              |
|                         |                              | обеспечения, внесший вклад в развитие TechNet Wiki и         |                              |
|                         |                              | основавший компанию Ovatic Systems Private Limited. За свою  |                              |
|                         |                              | более чем 20-летнюю карьеру он обучил тысячи студентов. Вы   |                              |
|                         |                              | можете написать Гаураву в Twitter по адресу @g_arora.        |                              |
|                         |                              | Джеффри Чилберто  — консультант в сфере разработки           |                              |
|                         |                              | программного обеспечения, специализирующийся на              |                              |
|                         |                              | технологическом стеке Microsoft, включая Azure, BizTalk,     |                              |
|                         |                              | ASP.NET, MVC, WCF и SQL Server, с опытом работы в различных  |                              |
|                         |                              | сферах. Он участвовал в разработке банковских,               |                              |
|                         |                              | телекоммуникационных и медицинских систем в Новой Зеландии,  |                              |
|                         |                              | Австралии и США. Имеет степень бакалавра в области           |                              |
|                         |                              | информационных и компьютерных наук, а также степень магистра |                              |
|                         |                              | по информационным технологиям и вычислительной технике.      |                              |
|                         |                              | О научных редакторах   Сьеки Цааль  — консультант по         |                              |
|                         |                              | управлению, архитектор облачных систем Microsoft и Microsoft |                              |
|                         |                              | Azure MVP с более чем 15-летним стажем в области создания    |                              |
|                         |                              | архитектур, разработки, консультирования и системного        |                              |
|                         |                              | дизайна. Она работает в Capgemini — одной из крупнейших в    |                              |
|                         |                              | мире консалтинговых компаний в сфере менеджмента и           |                              |
|                         |                              | информационных технологий. Сьеки любит делиться знаниями и   |                              |
|                         |                              | принимает очень активное участие в сообществе Microsoft как  |                              |
|                         |                              | одна из основателей нидерландских пользовательских групп     |                              |
|                         |                              | SP&C NL и MixUG. Кроме того, является членом правления Azure |                              |
|                         |                              | Thursdays. Сьеки часто выступает с лекциями и участвует в    |                              |
|                         |                              | организации мероприятий. Она написала несколько книг, ведет  |                              |
|                         |                              | блоги и принимает активное участие в сообществе Microsoft    |                              |
|                         |                              | Tech Community (https://techcommunity.microsoft.com/).    У  |                              |
|                         |                              | Эфраима Кирякидиса  за плечами более 20 лет опыта в          |                              |
|                         |                              | разработке ПО. Он получил диплом инженера в Университете     |                              |
|                         |                              | имени Аристотеля в Салониках (Греция). Эфраим пользуется     |                              |
|                         |                              | .NET с момента создания, с версии 1.0. В своей работе он в   |                              |
|                         |                              | целом сфокусирован на технологиях Microsoft. В данный момент |                              |
|                         |                              | занимает пост старшего инженера в компании Siemens AG в      |                              |
|                         |                              | Германии.    Более подробно с книгой можно ознакомиться на   |                              |
|                         |                              | сайте издательства  »  Оглавление  »  Отрывок    Для         |                              |
|                         |                              | Хаброжителей скидка 25% по купону —  Паттерны    По факту    |                              |
|                         |                              | оплаты бумажной версии книги на e-mail высылается            |                              |
|                         |                              | электронная книга.                                           |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Боль разработчика: «Никогда  |    Если вы запускаете какой-то сервис в интернете, всегда    |          free plan           |
| pany/vdsina/blog/547064 |   не давайте пользователям   | есть соблазн предложить бесплатный тариф, чтобы завлечь      |       тёмные паттерны        |
|            /            |      бесплатный тариф»       | публику.    Вы думаете, что людям понравится — и они захотят |   психологическое давление   |
|                         |                              | перейти на нормальный тариф с полными функциями. Это большая |             FOSS             |
|                         |                              | ошибка. Если человека полностью устраивает бесплатный тариф, |          выгорание           |
|                         |                              | то  он на нём останется навсегда !    И будет требовать от   |            Trello            |
|                         |                              | вас надёжного сервиса, новых функций и предъявлять           |             Jira             |
|                         |                              | претензии. Чем меньше платит пользователь — тем больше шуму  |            Slack             |
|                         |                              | он поднимает в социальных сетях и тем больше поддержки       |            Asana             |
|                         |                              | требует. Отрицательные отзывы идут именно от бесплатных      |       бесплатный тариф       |
|                         |                              | юзеров, а не от платных (это вполне логично, если подумать). |           фримиум            |
|                         |                              | Британский разработчик Гвидо Зюйдхоф (Guido Zuidhof)         |            чипиум            |
|                         |                              | настолько устал от таких пользователей, что запустил         |                              |
|                         |                              | специальный сайт  No Free Plan , на котором излил всю свою   |                              |
|                         |                              | боль по этому поводу.    Основной аргумент Гвидо заключается |                              |
|                         |                              | в том, что  бесплатные пользователи дорого обходятся .       |                              |
|                         |                              | Цена бесплатного плана  На первый взгляд кажется, что в      |                              |
|                         |                              | бесплатном тарифе одни плюсы. Вы практически не тратите      |                              |
|                         |                              | ресурсов, предлагая чисто символический объём услуг, который |                              |
|                         |                              | не стоит вам почти ничего в плане серверной мощности. Это    |                              |
|                         |                              | привлекательная «конфетка» для пользователей, которую они    |                              |
|                         |                              | заглатывают — и со временем переходят на платный тариф.      |                              |
|                         |                              | Но в реальности у каждого бесплатного плана есть конкретная  |                              |
|                         |                              | цена. Она измеряется в вашем времени и усилиях.    Мы уже    |                              |
|                         |                              | упомянули, что люди на самых дешёвых тарифах — самые         |                              |
|                         |                              | назойливые. Как думаете, от кого придёт больше запросов в    |                              |
|                         |                              | службу поддержки: от десяти крупных корпоративных клиентов с |                              |
|                         |                              | подпиской за $100 в месяц или от тысячи пользователей,       |                              |
|                         |                              | каждый из которых сидит на тарифе за $1 (включая школьников, |                              |
|                         |                              | студентов)? Очевидно, что в первой группе более              |                              |
|                         |                              | высококвалифицированные специалисты и профессиональные IT-   |                              |
|                         |                              | департаменты, которые задают меньше глупых вопросов.    Хотя |                              |
|                         |                              | по деньгам это абсолютно одинаковая сумма, но во втором      |                              |
|                         |                              | случае седина покроет ваши виски гораздо быстрее, уверен     |                              |
|                         |                              | Гвидо Зюйдхоф.    Поэтому он предлагает самый эффективный,   |                              |
|                         |                              | хотя и контринтуитивный выход из положения — повысить цены.  |                              |
|                         |                              | От бесплатных пользователей действительно бывает много шуму. |                              |
|                         |                              | Например, они могут требовать у разработчика включить в      |                              |
|                         |                              | бесплатную версию какие-то функции из платных тарифов. А     |                              |
|                         |                              | если разработчик отказывается, могут возмущаться, писать     |                              |
|                         |                              | негативные отзывы о продукте и так далее. Это действительно  |                              |
|                         |                              | вредит бизнесу.    Как показывает опыт, большинство          |                              |
|                         |                              | бесплатных пользователей никогда не переходят в число        |                              |
|                         |                              | платных клиентов. Независимо от того, насколько хорош ваш    |                              |
|                         |                              | продукт и какую проблему он решает, такие люди скорее найдут |                              |
|                         |                              | другую бесплатную альтернативу, чем заплатят хотя бы 1       |                              |
|                         |                              | доллар. Некоторые категорически не приемлют платную подписку |                              |
|                         |                              | — или у человека нет денег, или он не может рационально      |                              |
|                         |                              | оправдать для себя даже самую низкую цену за то, что считает |                              |
|                         |                              | бесплатным. То есть это некий непреодолимый психологический  |                              |
|                         |                              | барьер.    В итоге бесплатные тарифы слишком дорого          |                              |
|                         |                              | обходятся.     Ничего бесплатного не бывает  Понятно, откуда |                              |
|                         |                              | идёт заблуждение об эффективности бесплатных планов. Мы      |                              |
|                         |                              | видим, что крупнейшие интернет-компании — Google и Facebook  |                              |
|                         |                              | — не берут никакой платы за основной набор услуг. Хотя у     |                              |
|                         |                              | Google есть много платных сервисов, но для широкой публики   |                              |
|                         |                              | всё основное — бесплатно. И на Google Drive, и на Gmail есть |                              |
|                         |                              | бесплатный лимит, который устраивает почти всех.    И        |                              |
|                         |                              | стартап YouTube тоже никогда не брал платы за просмотр       |                              |
|                         |                              | видеороликов.    Но важно понимать, что эти компании         |                              |
|                         |                              | являются исключением из правила! По модели фримиум работать  |                              |
|                         |                              | очень тяжело, и мало у кого получается без мощной накачки    |                              |
|                         |                              | инвестициями. Все риски нужно тщательно просчитать.          |                              |
|                         |                              | Сервис слежки за сотрудниками Hubstaff  почти обанкротился   |                              |
|                         |                              | с таким бесплатным тарифом    Прежде чем предлагать          |                              |
|                         |                              | бесплатный сервис налево и направо, наращивая                |                              |
|                         |                              | пользовательскую базу в геометрической прогрессии, нужно     |                              |
|                         |                              | продумать бизнес-модель. Это проблема не только SaaS, но и   |                              |
|                         |                              | онлайновых СМИ, которые хотят сохранить бесплатную подписку. |                              |
|                         |                              | Например, несколько лет назад  закрылся Gigaom  — популярный |                              |
|                         |                              | и качественный сайт с техническими новостями и аналитикой.   |                              |
|                         |                              | Один из лучших представителей IT-журналистики не смог выжить |                              |
|                         |                              | по модели фримиум.     Какие альтернативы?   Пробный период  |                              |
|                         |                              | Отлично работает пробная подписка. Особенно как в варианте   |                              |
|                         |                              | Netflix — когда одновременно с бесплатным пробным периодом   |                              |
|                         |                              | заключается договор на дальнейшее платное обслуживание, так  |                              |
|                         |                              | что через 30 дней счёт выставляется автоматически.           |                              |
|                         |                              | Теоретически, пользователь имеет право в любой момент        |                              |
|                         |                              | отменить подписку, хотя на практике очень многие забывают    |                              |
|                         |                              | это сделать или ленятся — это не совсем честно, но законно   |                              |
|                         |                              | во многих странах. Ну а большинство действительно довольны   |                              |
|                         |                              | платным сервисом Netflix — и привыкают к комфорту.    К тому |                              |
|                         |                              | же, здесь работает  искажение сделанного выбора  — тенденция |                              |
|                         |                              | задним числом приписывать положительные качества предмету    |                              |
|                         |                              | или действию, которые человек выбрал. То есть главное —      |                              |
|                         |                              | заставить человека согласиться на бесплатный триал и         |                              |
|                         |                              | объяснить, что выбор  всегда  можно отменить — ну а дальше в |                              |
|                         |                              | силу вступает это когнитивное искажение. Главный трюк        |                              |
|                         |                              | пробных периодов.    Пробный период эффективен даже без      |                              |
|                         |                              | тёмных паттернов. Лимит можно выставить по времени (30       |                              |
|                         |                              | суток) или по объёму услуг (в гигабайтах трафика, минутах    |                              |
|                         |                              | просмотра и т. д.).    Если предлагать пробный период без    |                              |
|                         |                              | указания платёжной информации — то это ещё больше снижает    |                              |
|                         |                              | барьер. Например, в таком случае попробовать сервис не       |                              |
|                         |                              | побоится сотрудник крупной корпорации, который иначе не      |                              |
|                         |                              | получил бы одобрения босса на ввод платёжных реквизитов.     |                              |
|                         |                              | Фильтрация пользователей  Есть вариант предоставлять         |                              |
|                         |                              | бесплатный сервис не всем подряд, а для действительно        |                              |
|                         |                              | хороших проектов, опенсорсных разработок, учебных            |                              |
|                         |                              | учреждений, журналистов-исследователей, общественных         |                              |
|                         |                              | организаций и т. д. Претенденты заполняют анкету и           |                              |
|                         |                              | рассказывают о своих достоинствах — и почему именно они      |                              |
|                         |                              | заслуживают получить бесплатный тариф.    Вы выбираете       |                              |
|                         |                              | действительно достойных, кто вам нравится.    Теперь в       |                              |
|                         |                              | сервисе будет не толпа крикливых халявщиков, а очень         |                              |
|                         |                              | интеллигентная, интеллектуальная и благодарная публика. Вы   |                              |
|                         |                              | будете гордиться, что предоставляете бесплатные услуги таким |                              |
|                         |                              | хорошим людям, это благоприятно для имиджа, репутации и      |                              |
|                         |                              | кармы.    Здесь нет никакого снобизма, разработчик сервиса   |                              |
|                         |                              | имеет полное право на такую избирательность, какую захочет.  |                              |
|                         |                              | Правда, тут тоже есть определённые накладные расходы.        |                              |
|                         |                              | Претенденты попытаются связаться с вами, будут писать письма |                              |
|                         |                              | и звонить, объяснять свои замечательные стороны или выясняя  |                              |
|                         |                              | подробности, как получить бесплатный тариф.    Ещё один      |                              |
|                         |                              | вариант фильтрации — заранее брать данные платёжной карты с  |                              |
|                         |                              | выставлением счёта, если пользователь вышел за пределы       |                              |
|                         |                              | бесплатного лимита, по образцу Google Cloud. Таким образом,  |                              |
|                         |                              | отсекается часть юзеров, которые принципиально никогда не    |                              |
|                         |                              | готовы ни за что платить, и работает страховка от            |                              |
|                         |                              | чрезмерного использования сервиса.     Единовременный платёж |                              |
|                         |                              | Некоторые пользователи не хотят подписываться на платный     |                              |
|                         |                              | сервис, потому что их тяготит необходимость ежемесячно       |                              |
|                         |                              | вносить платежи. Эта платная подписка словно висит над ними  |                              |
|                         |                              | как вечная повинность, ежемесячно напоминая о себе. Таким    |                              |
|                         |                              | людям психологически проще один раз заплатить — и купить     |                              |
|                         |                              | пожизненную лицензию или  сервер с единовременным платежом , |                              |
|                         |                              | как в случае с нашими вечными серверами.    Например, это    |                              |
|                         |                              | может быть чисто символический платёж в 1 доллар — а затем   |                              |
|                         |                              | тот же бесплатный тарифный план «навсегда». Или ограниченный |                              |
|                         |                              | набор услуг, как в бесплатном плане, но за минимальную       |                              |
|                         |                              | сумму.    Это не полноценная подписка на сервис, а некий     |                              |
|                         |                              | промежуточный вариант между «вечным пробным периодом» и      |                              |
|                         |                              | нормальной платной подпиской. По аналогии с «фримиум»        |                              |
|                         |                              | (freemium) его можно назвать «чипиум» ( cheapium ).    Важно |                              |
|                         |                              | точно обговорить условия такой подписки. Очевидно, что в     |                              |
|                         |                              | наше время никто не может гарантировать вечный сервис.       |                              |
|                         |                              | Поэтому нужно установить минимальный срок работы сервиса     |                              |
|                         |                              | (хотя бы 1-6 месяцев), а если тот закроется раньше, то       |                              |
|                         |                              | деньги будут возвращены. Рекомендуется указать возможность   |                              |
|                         |                              | закрытия аккаунта в случае неактивности (в течение полугода  |                              |
|                         |                              | или больше), а также различные льготы подписчикам.    Автор  |                              |
|                         |                              | концепции  No Free Plan  говорит, что на создание сайта его  |                              |
|                         |                              | побудило чтение многочисленных дискуссий в сообществе  Indie |                              |
|                         |                              | Hackers , где общаются основатели мелких онлайн-компаний и   |                              |
|                         |                              | независимых бизнесов. Обычно это разработчики-одиночки,      |                              |
|                         |                              | которые запускают платный сервис, SaaS, утилиту, игру или    |                              |
|                         |                              | мобильное приложение — или несколько таких сервисов,         |                              |
|                         |                              | зарабатывая доход в качестве индивидуального                 |                              |
|                         |                              | предпринимателя.    Таким индивидуальным разработчикам       |                              |
|                         |                              | труднее всего обслуживать армию бесплатных юзеров, требующих |                              |
|                         |                              | внимания.     Проблема опенсорсных мейнтейнеров  Эта         |                              |
|                         |                              | проблема отлична известна в сообществе Open Source.          |                              |
|                         |                              | Мейнтейнеры опенсорсных проектов работают бесплатно — и      |                              |
|                         |                              | быстро выгорают на этой работе, сталкиваясь с массой         |                              |
|                         |                              | претензий от недовольных пользователей.    Не каждый         |                              |
|                         |                              | выдерживает такое давление. Некоторые психуют и просто       |                              |
|                         |                              | удаляют свои репозитории,  как это сделал  хабраюзер         |                              |
|                         |                              | fafhrd91 , автор веб-сервера Actix Web. После критики его    |                              |
|                         |                              | профессиональных навыков автор отказался от дальнейшей       |                              |
|                         |                              | поддержки проекта (репозиторий всё-таки восстановили и       |                              |
|                         |                              | передали другому мейнтейнеру).    «От работы больше никакой  |                              |
|                         |                              | радости. Возможно, вы захотите уйти, но не сможете из-за     |                              |
|                         |                              | чувства ответственности за свой код, сообщество и людей,     |                              |
|                         |                              | которые используют ваше программное обеспечение, —  пишет    |                              |
|                         |                              | мейнтейнер GNOME Calendar. — К сожалению, работа             |                              |
|                         |                              | мейнтейнером свободного ПО может плохо отразиться на вашем   |                              |
|                         |                              | психологическом и эмоциональном здоровье».    В феврале 2021 |                              |
|                         |                              | года психически неуравновешенный пользователь  угрожал       |                              |
|                         |                              | расправой  автору опенсорсной программы curl за ошибки в     |                              |
|                         |                              | коде, которые привели к финансовым потерям.    Предлагая     |                              |
|                         |                              | бесплатный тариф, вы рискуете столкнуться с теми же          |                              |
|                         |                              | проблемами, от которых страдают мейнтейнеры опенсорсного     |                              |
|                         |                              | сообщества. Не повторяйте чужих ошибок, пишет Гвидо Зюйдхоф. |                              |
|                         |                              | Преимущества бесплатных тарифов  Конечно, его мнение крайне  |                              |
|                         |                              | субъективное. Сам Гвидо запустил два простеньких инди-       |                              |
|                         |                              | сервиса и на сегодняшний день не заработал ещё тысячи        |                              |
|                         |                              | долларов. То есть у него пока не накопилось достаточно       |                              |
|                         |                              | опыта, чтобы делать такие выводы и объективно оценить пользу |                              |
|                         |                              | бесплатных тарифов.    В то же время мы видим, что многие    |                              |
|                         |                              | компании предлагают данный вариант. Бесплатные вечные тарифы |                              |
|                         |                              | есть у Trello, Jira, Slack, Asana, Dropbox. Миллионы         |                              |
|                         |                              | профессионалов используют эти сервисы бесплатно, а потом     |                              |
|                         |                              | рекомендуют их в компаниях, куда приходят работать — и те    |                              |
|                         |                              | покупают платную подписку. Ссылки на Dropbox разлетаются по  |                              |
|                         |                              | интернету как вирусный маркетинг. Таким образом, здесь       |                              |
|                         |                              | расходы на бесплатные тарифы многократно окупаются.          |                              |
|                         |                              | Вопрос только в том, это стандарт индустрии или исключение   |                              |
|                         |                              | из правил?    Модель действительно работает в интернет-      |                              |
|                         |                              | стартапах, у которых главная цель — максимально быстро       |                              |
|                         |                              | нарастить аудиторию, пусть и себе в убыток (инвесторы        |                              |
|                         |                              | оплатят расходы). Эти убытки окупятся в будущем. А мы как    |                              |
|                         |                              | обычные пользователи с удовольствием наслаждаемся бесплатным |                              |
|                         |                              | сервисом отличного качества, без рекламы.    Это модель      |                              |
|                         |                              | будущих единорогов.    Но правда и в том, что бесплатный     |                              |
|                         |                              | план не всегда конвертируется в продажи. Если по             |                              |
|                         |                              | неосторожности выложить в бесплатный тариф что-то полезное,  |                              |
|                         |                              | то вы рискуете попасть на деньги, когда налетят миллионы     |                              |
|                         |                              | юзеров из Юго-Восточной Азии. Тогда 95% вашего трафика будут |                              |
|                         |                              | генерировать бесплатные пользователи, которые никогда не     |                              |
|                         |                              | заплатят ни цента, а скорее найдут другую бесплатную         |                              |
|                         |                              | альтернативу.    Наверное, есть категории продуктов, для     |                              |
|                         |                              | которых бесплатный план подходит лучше: это рабочие          |                              |
|                         |                              | инструменты, ориентированные на корпоративных клиентов. В    |                              |
|                         |                              | других случаях это обоюдоострый меч, от которого может быть  |                              |
|                         |                              | больше вреда, чем пользы.    Зачастую затраты на бесплатный  |                              |
|                         |                              | тариф просто не окупаются. Нужно тщательно просчитать свои   |                              |
|                         |                              | расходы и коэффициент конвертации, при котором эти расходы   |                              |
|                         |                              | будут компенсированы. Бесплатный тариф — сложная штука.      |                              |
|                         |                              | На правах рекламы  Наша компания предлагает аренду  VPS  для |                              |
|                         |                              | совершенно любых проектов. Создайте собственный тарифный     |                              |
|                         |                              | план в пару кликов, максимальная конфигурация позволит       |                              |
|                         |                              | разместить практически любой проект — 128 ядер CPU, 512 ГБ   |                              |
|                         |                              | RAM, 4000 ГБ NVMe!                                           |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |     Ленивые итераторы и      | Для того, чтобы упростить написание и чтение кода,           |             с++              |
|        t/546996/        |       диапазоны в C++        | программисты периодически придумывают всякие техники. Об     |          итераторы           |
|                         |                              | одной из таких техник я уже писал в публикации  Долой циклы, |          диапазоны           |
|                         |                              | или Неленивая композиция алгоритмов в C++ .   Однако есть и  |      ленивые вычисления      |
|                         |                              | классическая, более распространённая техника для борьбы с    |                              |
|                         |                              | циклами — использование итераторов и диапазонов для ленивых  |                              |
|                         |                              | операций над последовательностями. Всё это уже сто лет есть  |                              |
|                         |                              | в  Бусте  и других сторонних библиотеках (к примеру,         |                              |
|                         |                              | range-v3 ) и постепенно просачивается в  стандартную         |                              |
|                         |                              | библиотеку .   Хотя, в некотором смысле, и в стандартной     |                              |
|                         |                              | библиотеке ленивые итераторы уже есть давно (см.  ). Данная  |                              |
|                         |                              | публикация — это краткий ликбез о том, что такое ленивые     |                              |
|                         |                              | итераторы и диапазоны, зачем они нужны и как ими             |                              |
|                         |                              | пользоваться.     Содержание     Итератор   Ленивость        |                              |
|                         |                              | Transform Iterator   Filter Iterator     Ленивые диапазоны   |                              |
|                         |                              | Transform Range   Stride     Компоновка   Суть итераторов и  |                              |
|                         |                              | диапазонов   Ссылки       Итератор   Начнём с простого. Что  |                              |
|                         |                              | вообще такое итератор?     Понять суть концепции довольно    |                              |
|                         |                              | легко. Сам по себе итератор — это обобщение указателя. При   |                              |
|                         |                              | этом главное, что нужно знать — это два способа              |                              |
|                         |                              | взаимодействия с итератором:     Продвижение (например,      |                              |
|                         |                              | или  );   Разыменование ( ).       И в эти взаимодействия мы |                              |
|                         |                              | можем внедряться и переопределять их так, как нам нужно.     |                              |
|                         |                              | Ленивость   Внедрение в операции над диапазонами может быть  |                              |
|                         |                              | сколь угодно хитрым и сложным (простые примеры я привёл      |                              |
|                         |                              | ниже). Ленивость же состоит в том, что нет никаких           |                              |
|                         |                              | промежуточных результатов. Все вычисления происходят только  |                              |
|                         |                              | тогда, когда вызываются операции разыменования или           |                              |
|                         |                              | продвижения.   Определение 1 . Итератор    достижим  из      |                              |
|                         |                              | итератора  , если существует схема   продвижения итератора   |                              |
|                         |                              | такая, что  .   Допустим, у нас есть некая                   |                              |
|                         |                              | последовательность элементов, заданная двумя итераторами: на |                              |
|                         |                              | начало и конец этой последовательности (при этом конец       |                              |
|                         |                              | достижим из начала). Теперь мы преобразуем оба этих          |                              |
|                         |                              | итератора каким-то способом и получаем два новых итератора.  |                              |
|                         |                              | Если преобразование итераторов корректно, т.е. образ конца   |                              |
|                         |                              | первой последовательности достижим из образа начала первой   |                              |
|                         |                              | последовательности, то мы получили новую последовательность. |                              |
|                         |                              | При этом длина и элементы новой последовательности могут     |                              |
|                         |                              | отличаться от длины и элементов исходной.     В этом и       |                              |
|                         |                              | состоит ленивость — мы получили новую последовательность без |                              |
|                         |                              | изменений в старой. Мы не трогали хранимые объекты, а только |                              |
|                         |                              | переопределили способ их отображения и обхода по ним.        |                              |
|                         |                              | Transform Iterator   Простой пример внедрения в операцию     |                              |
|                         |                              | разыменования — это  .   Он оборачивает некий исходный       |                              |
|                         |                              | итератор и при разыменовании возвращает результат            |                              |
|                         |                              | преобразования над разыменованным значением исходного        |                              |
|                         |                              | итератора.     Таким образом, каждому итератору   типа   мы  |                              |
|                         |                              | поставили в соответствие итератор   типа   такой, что  .     |                              |
|                         |                              | Filter Iterator   Пример внедрения в продвижение — это  .    |                              |
|                         |                              | Он оборачивает продвижение, причём относительно "хитрым"     |                              |
|                         |                              | образом. Он выбрасывает из рассмотрения все элементы         |                              |
|                         |                              | исходной последовательности, которые не удовлетворяют        |                              |
|                         |                              | заданному предикату. Единственное отличие — обёрнутый        |                              |
|                         |                              | итератор сразу же позиционируется на нужном элементе, если у |                              |
|                         |                              | исходной последовательности есть префикс, все элементы       |                              |
|                         |                              | которого не удовлетворяют предикату.     Таким образом, мы   |                              |
|                         |                              | "выбросили" из исходной последовательности итераторы         |                              |
|                         |                              | такие, что  , и в результирующей последовательности, для     |                              |
|                         |                              | каждого итератора   типа   выполняется  .       Ленивые      |                              |
|                         |                              | диапазоны   Итератор — это обобщение указателя. Поэтому      |                              |
|                         |                              | итератор, как и указатель, сам по себе не знает, когда нужно |                              |
|                         |                              | остановиться. Имея только итератор на начало                 |                              |
|                         |                              | последовательности, нельзя сказать, где конец этой           |                              |
|                         |                              | последовательности. Поэтому мы объединяем пару итераторов —  |                              |
|                         |                              | начало и конец — в диапазон.   При этом диапазон — это уже   |                              |
|                         |                              | более сложная конструкция, и у него другой интерфейс,        |                              |
|                         |                              | похожий на интерфейс контейнеров:     Взятие итераторов на   |                              |
|                         |                              | начало и конец ( ,  );   Взятие первого элемента диапазона ( |                              |
|                         |                              | );   Проверка на пустоту ( ).     Разница только в том, что  |                              |
|                         |                              | диапазон не владеет элементами, которые он задаёт. Хотя бы   |                              |
|                         |                              | потому что канонический диапазон — это просто пара           |                              |
|                         |                              | итераторов (к примеру,  ).   Важно отметить, что диапазон    |                              |
|                         |                              | принято задавать полуинтервалом  . Это значит, что итератор- |                              |
|                         |                              | начало   указывает на первый элемент последовательности, а   |                              |
|                         |                              | итератор-конец   указывает на элемент  после  последнего.    |                              |
|                         |                              | Таким образом, когда мы приходим в итератор-конец, мы точно  |                              |
|                         |                              | знаем, что последовательность закончилась.       Transform   |                              |
|                         |                              | Range   На основе преобразующих итераторов можно собрать     |                              |
|                         |                              | диапазон (см.  ).     Или проще (см.  ):     В C++20 это     |                              |
|                         |                              | std::transform_view :       Stride   Другой пример ленивого  |                              |
|                         |                              | диапазона — это  .   Он оборачивает исходный диапазон так,   |                              |
|                         |                              | что в новом диапазоне остаются только кратные позиции        |                              |
|                         |                              | исходного диапазона.         Компоновка   После того, как мы |                              |
|                         |                              | научились создавать диапазоны, нам не составит никакой       |                              |
|                         |                              | сложности скомбинировать их в цепочку.   Например, если мы   |                              |
|                         |                              | хотим для некоей последовательности чисел:     возвести их в |                              |
|                         |                              | квадрат,   взять только каждый четвёртый элемент,   и        |                              |
|                         |                              | оставить только чётные числа,     то можно это сделать так:  |                              |
|                         |                              | Или, в C++20:     Ещё раз хочу подчеркнуть, что этот код не  |                              |
|                         |                              | производит никаких вычислений. Он только сохраняет "схемы"   |                              |
|                         |                              | работы с диапазоном, а настоящие вычисления будут            |                              |
|                         |                              | происходить только во время продвижения или разыменования    |                              |
|                         |                              | обёрнутого итератора.       Суть итераторов и диапазонов     |                              |
|                         |                              | Помимо C++, в некоторых языках программировани также         |                              |
|                         |                              | существует концепция под названием "итератор", но эта        |                              |
|                         |                              | концепция зачастую имеет какой-то свой, альтернативный       |                              |
|                         |                              | смысл.  К примеру, "итераторы" в языках Java и C# знают свой |                              |
|                         |                              | предел. С точки зрения языка C++ это, скорее, диапазоны.   В |                              |
|                         |                              | C++ итератор — это именно обобщение указателя. По сути       |                              |
|                         |                              | указатель — это самый сильный (или наиболее конкретный)      |                              |
|                         |                              | итератор , причём иерархия следующая:     Однопроходный      |                              |
|                         |                              | итератор (input iterator);   Однонаправленный итератор       |                              |
|                         |                              | (forward iterator);   Двунаправленный итератор               |                              |
|                         |                              | (bidirectional iterator);   Итератор произвольного доступа   |                              |
|                         |                              | (random access iterator);   Непрерывный итератор (contiguous |                              |
|                         |                              | iterator);   Указатель.     Диапазон же можно рассматривать  |                              |
|                         |                              | именно как пару итераторов (даже если это на самом деле не   |                              |
|                         |                              | так). Диапазон уже знает, где у него конец, может            |                              |
|                         |                              | накладывать дополнительную логику на операции с итераторами  |                              |
|                         |                              | и т.д. Также диапазон может быть сконвертирован обратно в    |                              |
|                         |                              | итераторы (потому что диапазон — это пара итераторов, как    |                              |
|                         |                              | уже было сказано выше).   Такое разделение на итераторы и    |                              |
|                         |                              | диапазоны помогает создавать универсальные, гибкие и         |                              |
|                         |                              | эффективные интерфейсы для операций над                      |                              |
|                         |                              | последовательностями.   Один из примеров создания сложной    |                              |
|                         |                              | операции над диапазонами я привёл в статье  Ленивые операции |                              |
|                         |                              | над множествами в C++ .     Ссылки     Итераторы             |                              |
|                         |                              | Boost.Iterator   Boost.Range   range-v3   Ranges (C++20)     |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |     Ленивые операции над     | В C++ нет понятия "множество". Есть  , но это всё-таки       |             c++              |
|        t/547002/        |      множествами в C++       | конкретный контейнер. Есть функции для работы с              |          итераторы           |
|                         |                              | упорядоченными диапазонами :  ,  ,  ,  ,  ,  ,  , но это     |          диапазоны           |
|                         |                              | алгоритмы, они не ленивые, и при вызове сразу вычисляют      |           слияние            |
|                         |                              | результат. К тому же они предназначены для работы строго с   |           алгоритм           |
|                         |                              | двумя диапазонами.   Что же делать, если, во-первых,         |      ленивые вычисления      |
|                         |                              | диапазонов много (больше двух), а во-вторых, мы хотим        |    композиция вычислений     |
|                         |                              | вычислять результат не сразу, а по необходимости?   В данной |                              |
|                         |                              | публикации я хочу показать, как спроектировать ленивый       |                              |
|                         |                              | диапазон, который будет производить какую-либо операцию с    |                              |
|                         |                              | множествами.   В публикации  Ленивые итераторы и диапазоны в |                              |
|                         |                              | C++  я разбирал, что такое ленивые диапазоны.     Содержание |                              |
|                         |                              | Операции с несколькими диапазонами   Алгоритм слияния        |                              |
|                         |                              | Переложение на итераторы   Дизайн     Базируется на          |                              |
|                         |                              | итераторах   Быстрое копирование   Деструктивность по        |                              |
|                         |                              | отношению к внутренним диапазонам   Можно создать диапазон   |                              |
|                         |                              | Быстрое создание   Изменяемость   Есть адапторы     Пример с |                              |
|                         |                              | кодом   Заключение   Ссылки       Операции с несколькими     |                              |
|                         |                              | диапазонами   Для начала определимся с терминологией.        |                              |
|                         |                              | Множеством я буду называть диапазон, элементы которого       |                              |
|                         |                              | упорядочены.  Таким образом, первый элемент множества,       |                              |
|                         |                              | задаваемого диапазоном с порядком "меньше", — это наименьший |                              |
|                         |                              | элемент этого множества. Все операции с несколькими          |                              |
|                         |                              | множествами сводятся к двум этапам:     Продвинуть           |                              |
|                         |                              | диапазоны-множества так, чтобы достичь следующего элемента   |                              |
|                         |                              | итогового множества.   Выбрать один элемент среди текущих    |                              |
|                         |                              | элементов всех диапазонов-множеств;     Процесс удобно       |                              |
|                         |                              | представлять в виде движущихся  входных  лент, с которых     |                              |
|                         |                              | выбранные элементы переписываются на  выходную  ленту.   В   |                              |
|                         |                              | качестве примера рассмотрим слияние нескольких множеств.   В |                              |
|                         |                              | начале у нас есть три ленты: первая состоит из элементов  ,  |                              |
|                         |                              | вторая — из элементов  , а третья —  . Текущий элемент       |                              |
|                         |                              | каждой ленты — это её первый элемент.   Поскольку нам        |                              |
|                         |                              | требуется произвести слияние множеств, то на каждом шаге     |                              |
|                         |                              | нужно выбирать наименьший элемент. На первом шаге выбираем   |                              |
|                         |                              | элемент   на первой ленте и выписываем его на выходную       |                              |
|                         |                              | ленту.     После чего продвигаем первую ленту на один        |                              |
|                         |                              | элемент. Затем выбираем элемент  , снова с первой ленты.     |                              |
|                         |                              | Продвигаем первую ленту. Теперь на первой ленте тройка, а на |                              |
|                         |                              | второй — двойка. Двойка меньше, так что выписываем двойку на |                              |
|                         |                              | выходную ленту, продвигаем вторую ленту.     На этом шаге на |                              |
|                         |                              | всех лентах стоят тройки. Выбираем тройку с первой ленты.    |                              |
|                         |                              | Снова продвигаем первую ленту. После продвижения             |                              |
|                         |                              | оказывается, что первая лента закончилась. Это значит, что   |                              |
|                         |                              | она выбывает из рассмотрения, и дальнейшие шаги будут        |                              |
|                         |                              | произведены только для второй и третьей лент.     И так      |                              |
|                         |                              | далее.   В итоге на выходной ленте будет записано  . Что,    |                              |
|                         |                              | собственно, и ожидалось.   Мы рассмотрели операцию слияния,  |                              |
|                         |                              | однако, нет никаких препятствий для аналогичной реализации   |                              |
|                         |                              | объединения, пересечения, симметрической разности и других   |                              |
|                         |                              | операций со множествами.     Алгоритм слияния   Итак, общая  |                              |
|                         |                              | концепция понятна. Но для того, чтобы написать код, нужен    |                              |
|                         |                              | алгоритм. Не будем изобретать велосипед, возьмём             |                              |
|                         |                              | классический алгоритм слияния   списков.   Подготовка:       |                              |
|                         |                              | Определим операцию сравнения двух множеств. Множество        |                              |
|                         |                              | будет считаться  меньше  множества  , если наименьший        |                              |
|                         |                              | элемент множества   меньше наименьшего элемента множества    |                              |
|                         |                              | (напомню, что наши диапазоны упорядочены, так что наименьший |                              |
|                         |                              | элемент всегда стоит в начале диапазона);   Пустые множества |                              |
|                         |                              | выбросим из рассмотрения;   Сложим множества в  пирамиду     |                              |
|                         |                              | (кучу)  таким образом, что на вершине пирамиды будет лежать  |                              |
|                         |                              | наименьшее множество.     Шаг слияния:     Вынимаем из       |                              |
|                         |                              | пирамиды наименьшее множество;   Выписываем наименьший       |                              |
|                         |                              | элемент этого множества;   Продвигаем это множество на один  |                              |
|                         |                              | элемент вперёд;   Если множество стало пусто, выбрасываем    |                              |
|                         |                              | его;   Если множество всё ещё непусто, кладём его обратно в  |                              |
|                         |                              | пирамиду.     Таким образом мы выпишем все элементы всех     |                              |
|                         |                              | множеств в порядке их неубывания за время  , где   —         |                              |
|                         |                              | количество множеств,   — суммарный размер всех множеств.   В |                              |
|                         |                              | результате  можно написать следующий код .     Переложение   |                              |
|                         |                              | на итераторы   Из описания алгоритма и кода видно, что он    |                              |
|                         |                              | хорошо разбивается на три части:     Предподготовка;   Выбор |                              |
|                         |                              | текущего элемента (он всегда на вершине пирамиды);   Переход |                              |
|                         |                              | к следующему элементу.     И это прекрасно ложится на то,    |                              |
|                         |                              | что мы умеем делать с итераторами, а именно:                 |                              |
|                         |                              | Инициализация;   Разыменование;   Продвижение.     Поэтому,  |                              |
|                         |                              | долго не думая, берём  Iterator Facade  и делаем свой        |                              |
|                         |                              | итератор.   Код итератора тут:  Burst Merge Iterator .       |                              |
|                         |                              | Дизайн   Приводить весь код в данной публикации я не буду,   |                              |
|                         |                              | но остановлюсь на важных моментах в проектировании итератора |                              |
|                         |                              | слияния.     Базируется на итераторах   Исходные множества,  |                              |
|                         |                              | которые мы планируем слить воедино, задаются двумя           |                              |
|                         |                              | итераторами, то есть одним диапазоном. При этом каждый       |                              |
|                         |                              | элемент этого внешнего диапазона — это сам по себе диапазон, |                              |
|                         |                              | то есть одно из тех множеств, которые мы будем сливать (тут  |                              |
|                         |                              | можно вспомнить историю про ленты).   Внешний диапазон       |                              |
|                         |                              | должен обладать произвольным доступом (random access range)  |                              |
|                         |                              | — именно он и будет выступать пирамидой, которую мы будем    |                              |
|                         |                              | переупорядочивать в процессе слияния.   Внутренним же        |                              |
|                         |                              | диапазонам достаточно однопроходности (input range),         |                              |
|                         |                              | поскольку всё, что с ними происходит — это проверка на       |                              |
|                         |                              | пустоту, чтение первого элемента и продвижение на одну       |                              |
|                         |                              | позицию вперёд.   Результат — итератор слияния — также будет |                              |
|                         |                              | однопроходным (input iterator).     Быстрое копирование      |                              |
|                         |                              | Итератор должен быстро копироваться. Все стандартные         |                              |
|                         |                              | алгоритмы принимают итератор по значению и не стесняются     |                              |
|                         |                              | копировать внутри себя.   Поэтому мы поддерживаем            |                              |
|                         |                              | "стандартные" свойства итератора, и не храним в нём никаких  |                              |
|                         |                              | развесистых структур. В итераторе слияния хранится только    |                              |
|                         |                              | только два итератора на внешний диапазон.                    |                              |
|                         |                              | Деструктивность по отношению к внутренним диапазонам   То,   |                              |
|                         |                              | что итератор слияния не хранит в себе ничего лишнего и       |                              |
|                         |                              | быстро копируется, накладывает специфические ограничения.    |                              |
|                         |                              | Внешний диапазон, который мы передаём итератору слияния при  |                              |
|                         |                              | инициализации, вообще говоря, не владеет контейнерами,       |                              |
|                         |                              | которые мы хотим слить, а только ссылается на них. И в       |                              |
|                         |                              | процессе работы итератор слияния модифицирует внутренние     |                              |
|                         |                              | диапазоны: он же не хранит их в себе, а состояние между      |                              |
|                         |                              | вызовами оператора   нужно где-то сохранять.   Поэтому для   |                              |
|                         |                              | работы итератора слияния нужно создавать отдельное хранилище |                              |
|                         |                              | для внутренних диапазонов, а сами внутренние диапазоны       |                              |
|                         |                              | уничтожаются (схлопываются) в процессе продвижения итератора |                              |
|                         |                              | слияния.   Но это не проблема: благодаря этому мы уже        |                              |
|                         |                              | получили гибкость и эффективность самого итератора, а        |                              |
|                         |                              | организовать красивый интерфейс для обхода явного создания   |                              |
|                         |                              | хранилища тоже можно (см.  Быстрое создание ).     Можно     |                              |
|                         |                              | создать диапазон   Итератор-конец для итератора слияния —    |                              |
|                         |                              | это не совсем итератор, а  ограничитель  ( sentinel  в       |                              |
|                         |                              | терминах C++20). Простейший пример такого ограничителя — это |                              |
|                         |                              | ноль для классической сишной строки: у нас нет указателя на  |                              |
|                         |                              | конец строки, но мы знаем, что если значение разыменованного |                              |
|                         |                              | итератора равно нулю, то это и есть конец строки.   Это      |                              |
|                         |                              | значит, что можно не мучить пользователя, и сразу создавать  |                              |
|                         |                              | диапазон, минуя создание отдельных итераторов.     Код       |                              |
|                         |                              | построения диапазона на основе итератора здесь:  Burst Merge |                              |
|                         |                              | Быстрое создание   По умолчанию итератор слияния             |                              |
|                         |                              | конструируется из диапазона (см. выше). Но есть и другая     |                              |
|                         |                              | возможность.   Можно просто передать кортеж из ссылок на     |                              |
|                         |                              | исходные контейнеры:     В этом случае библиотека берёт на   |                              |
|                         |                              | себя создание и обработку промежуточного хранилища для       |                              |
|                         |                              | "технических" итераторов.     Изменяемость   Полученный      |                              |
|                         |                              | итератор слияния однопроходен, но есть нюанс: если исходные  |                              |
|                         |                              | диапазоны изменяемы, то результирующий диапазон также можно  |                              |
|                         |                              | сделать изменяемым. То есть через ленивый диапазон слияния   |                              |
|                         |                              | мы можем модифицировать исходные контейнеры:       Есть      |                              |
|                         |                              | адапторы   Для того, чтобы встраивать полученный ленивый     |                              |
|                         |                              | диапазон в цепочку вычислений, есть адаптор, совместимый с   |                              |
|                         |                              | бустовыми адапторами :       Пример с кодом   Вы спросите:   |                              |
|                         |                              | "зачем?!" А я отвечу: для упрощения написания и понимания    |                              |
|                         |                              | кода.   Конкретно слияние нескольких упорядоченных           |                              |
|                         |                              | диапазонов — довольно полезная операция. С её помощью,       |                              |
|                         |                              | например, можно написать  внешнюю сортировку .   Полный      |                              |
|                         |                              | пример внешней сортировки можно почитать здесь .             |                              |
|                         |                              | Заключение   Ленивые операции над множествами — достаточно   |                              |
|                         |                              | интересная штука. Можно реализовать слияние, объединение,    |                              |
|                         |                              | пересечение, разность, симметрическую разность — в общем,    |                              |
|                         |                              | всё, что угодно.   И всё это с сохранением эффективности и   |                              |
|                         |                              | достаточно приятного интерфейса.     Ссылки     Ленивые      |                              |
|                         |                              | операции над диапазонами в библиотеке Burst   Boost Iterator |                              |
|                         |                              | Facade   Boost Range Adaptors                                |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Intel CV Academy — три хита  |    Подходит к концу сезон 2020/21 в  Intel CV Academy  —     |       Intel CV Academy       |
| pany/intel/blog/546844/ |     в завершении сезона      | виртуальном учебном заведении, где лучшие эксперты Intel     |                              |
|                         |                              | обучают опытных разработчиков компьютерному зрению,          |                              |
|                         |                              | глубокому обучению и оптимизации. В марте-апреле осталось    |                              |
|                         |                              | провести всего несколько вебинаров, из которых мы решили     |                              |
|                         |                              | отдельно прорекламировать три — нам кажется, что это будут   |                              |
|                         |                              | определенно хиты сезона. Их темы —  компьютерное зрение в    |                              |
|                         |                              | медицине ,  компиляторы для нейронных сетей  и  оптимизация  |                              |
|                         |                              | нейронных сетей .   Подробнее об этих лекциях под катом. В   |                              |
|                         |                              | конце поста —  полное расписание оставшихся вебинаров .      |                              |
|                         |                              | Специально для анонса мы взяли небольшие интервью у ведущих  |                              |
|                         |                              | этих трех вебинаров, в которых они рассказывают о том, чему  |                              |
|                         |                              | планируют посвятить свои занятия. Итак, обо всех вебинарах   |                              |
|                         |                              | по порядку.      17 марта — Применение компьютерного зрения  |                              |
|                         |                              | в медицине  Компьютерное зрение стало двигателем развития    |                              |
|                         |                              | глубокого машинного обучения. Большинство современных        |                              |
|                         |                              | топологий сетей было разработано именно для решения задач,   |                              |
|                         |                              | связанных с визуальным анализом. В дальнейшем эти подходы    |                              |
|                         |                              | применяются как в смежных задачах (аудио, NLP), так и в      |                              |
|                         |                              | традиционно технологически консервативных областях, как      |                              |
|                         |                              | анализ медицинских данных.     Спикер вебинара —  Дмитрий    |                              |
|                         |                              | Куртаев , инженер по разработке ПО Intel, IOTG Russia,       |                              |
|                         |                              | нейросетевой хирург.     Дмитрий, чего ждать от вебинара     |                              |
|                         |                              | всем, кто пройдет регистрацию?  Вы узнаете о современных     |                              |
|                         |                              | подходах решения вычислительно трудоемких задач из медицины  |                              |
|                         |                              | и биохимии.     Об анализе в каких областях медицины пойдет  |                              |
|                         |                              | речь в вебинаре?  Хирургия, гистология, исследование ДНК.    |                              |
|                         |                              | Кому в первую очередь будет полезен вебинар?  Всем, кто      |                              |
|                         |                              | интересуется как применяется Deep Learning в медицинских     |                              |
|                         |                              | задачах.     24 марта — Компиляторы для нейронных сетей      |                              |
|                         |                              | Компиляторы нейронных сетей необходимы для эффективного      |                              |
|                         |                              | исполнения алгоритмов на разных устройствах. На семинаре мы  |                              |
|                         |                              | рассмотрим принципы их работы, обсудим сходства и различия   |                              |
|                         |                              | вариантов процессинга и разберем применение компиляторов в   |                              |
|                         |                              | науке и наших проектах.     Спикер –  Александр Новак ,      |                              |
|                         |                              | разработчик из команды Neural Network Compilers, Intel, IOTG |                              |
|                         |                              | Russia     Александр, зачем применять компиляторы в          |                              |
|                         |                              | разработке ПО в области компьютерного зрения?  Компиляторы   |                              |
|                         |                              | повышают производительность вычислений и позволяют           |                              |
|                         |                              | эффективнее использовать возможности железа. Поэтому         |                              |
|                         |                              | скорость разработки ПО возрастает, а стоимость снижается. А  |                              |
|                         |                              | еще они позволяют достаточно быстро добавлять поддержку      |                              |
|                         |                              | новых устройств и алгоритмов.     Как компиляторы повышают   |                              |
|                         |                              | эффективность исполнения алгоритмов?  Основная задача        |                              |
|                         |                              | компилятора — выбрать оптимальный способ исполнения          |                              |
|                         |                              | алгоритма на устройстве из всех возможных. На вебинаре       |                              |
|                         |                              | рассмотрим основные программные методы, которые используются |                              |
|                         |                              | для этого.     На чём вы сделаете акцент на вебинаре?  В     |                              |
|                         |                              | первой части рассмотрим существующие компиляторы, их плюсы и |                              |
|                         |                              | минусы, особенности и концепции, которые использует каждый   |                              |
|                         |                              | из продуктов. Вторая часть будет посвящена перспективам.     |                              |
|                         |                              | Разберем, куда двигается область, какие вопросы назрели и    |                              |
|                         |                              | как они решаются или будут решаться.      14 апреля —        |                              |
|                         |                              | Оптимизация нейронных сетей  Оптимизация нейронных сетей –   |                              |
|                         |                              | одна из самых популярных тенденций последних лет в области   |                              |
|                         |                              | искусственного интеллекта. Её цель – внедрить нейронные сети |                              |
|                         |                              | в окружающие нас предметы и сделать мир интеллектуального    |                              |
|                         |                              | Интернета вещей еще умнее. На данном вебинаре будут          |                              |
|                         |                              | рассмотрены актуальные методы, позволяющие ускорить          |                              |
|                         |                              | вычисление нейронных сетей.     Спикер  Александр Козлов ,   |                              |
|                         |                              | инженер по глубокому oбучению, Intel, IOTG Russia.           |                              |
|                         |                              | Александр, какова основная задача внедрения нейронных сетей  |                              |
|                         |                              | в современном мире Интернета вещей?  Сделать умный мир       |                              |
|                         |                              | Интернета вещей еще умнее.     С какими проблемами           |                              |
|                         |                              | оптимизации можно столкнуться?  В оптимизации нейросетей     |                              |
|                         |                              | существует множество проблем. Если рассматривать всё с самой |                              |
|                         |                              | верхней точки, то основные проблемы здесь – это как сделать  |                              |
|                         |                              | ускоритель, который позволял бы эффективно исполнять сети,   |                              |
|                         |                              | модифицированные с использованием современных алгоритмом     |                              |
|                         |                              | оптимизации. Таким образом, здесь изначально встает проблема |                              |
|                         |                              | выровненности дизайна программного и аппаратного             |                              |
|                         |                              | обеспечения.     На что стоит обратить особенное внимание на |                              |
|                         |                              | вашем вебинаре?  Особое внимание стоит уделить методам       |                              |
|                         |                              | квантизации нейросетей как наиболее эффективным с точки      |                              |
|                         |                              | зрения критерия точность–ускорение.     Полный список        |                              |
|                         |                              | оставшихся вебинаров  17 марта — Применение компьютерного    |                              |
|                         |                              | зрения в медицине  24 марта — Компиляторы для нейронных      |                              |
|                         |                              | сетей  31 марта — OpenCV для встраиваемых платформ  7 апреля |                              |
|                         |                              | — Введение в OpenCV G-API, современный API в области         |                              |
|                         |                              | компьютерного зрения  14 апреля — Оптимизация нейронных      |                              |
|                         |                              | сетей  21 апреля — Оптимизация производительности  28 апреля |                              |
|                         |                              | — Concept-Based polymorphism в С++    Еще раз обратим        |                              |
|                         |                              | внимание, что регистрация на CV Academy позволяет            |                              |
|                         |                              | слушателям:       Узнать о новейших трендах в AI / Deep      |                              |
|                         |                              | Learning от экспертов мирового уровня,   Принять участие в   |                              |
|                         |                              | живой Q&A сессии с ведущими разработчиками Intel,   Получить |                              |
|                         |                              | эксклюзивный доступ к видеозаписям вебинаров.     Начало     |                              |
|                         |                              | занятий в 19:00.  Регистрация  на каждый вебинар             |                              |
|                         |                              | производится отдельно.                                       |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com | Выходим на рынок Huawei, или |    Привет, Хабр! Меня зовут Георгий Гигаури, я разрабатываю  |            dctech            |
| pany/mailru/blog/546564 |     Как мы адаптировали      | Android-приложение Delivery Club. Эта статья появилась после |         deliveryclub         |
|            /            | приложение для работы с HMS  | доклада на конференции  Mobius 2020 , где мы выступали       |           Android            |
|                         |                              | вместе с Павлом Борзиковым. Для тех, кто любит видео, —      |            Huawei            |
|                         |                              | ищите его в конце статьи.    Почему мы вообще обратили       |             HMS              |
|                         |                              | внимание на Huawei-устройства? Всё началось с того, что      |         google maps          |
|                         |                              | Huawei теперь не может распространять свои устройства с      |         huawei maps          |
|                         |                              | сервисами Google Play. Да, они могут использовать ОС         |      push notification       |
|                         |                              | Android, так как это открытая операционная система, но чтобы |         crashlytics          |
|                         |                              | распространять устройства с сервисами Google Play,           |        inapppurchase         |
|                         |                              | необходимо иметь лицензию. К сожалению, Huawei не может      |                              |
|                         |                              | получить её из-за разногласий между Китаем и США. Поэтому    |                              |
|                         |                              | Huawei приходится разрабатывать свои собственные Mobile      |                              |
|                         |                              | Services. Справедливости ради, они этим занимались уже       |                              |
|                         |                              | давно, но теперь им приходится расширять кодовую базу,       |                              |
|                         |                              | активно увеличивать количество сервисов.     Почему стоит    |                              |
|                         |                              | обратить внимание на экосистему Huawei  Смартфоны Huawei     |                              |
|                         |                              | очень популярны: в 2020 году в России они занимали почти 18% |                              |
|                         |                              | рынка (Рис.1), а в мире — 11% (Рис.2), ( источник ). Huawei  |                              |
|                         |                              | заявила, что более 490 млн человек в более чем в 170 странах |                              |
|                         |                              | мира пользуются AppGallery ( источник ). Поскольку аудитория |                              |
|                         |                              | у Huawei-устройств огромная, мы не можем это игнорировать и  |                              |
|                         |                              | решили поддержать пользователей нашего приложения. Далее     |                              |
|                         |                              | поэтапно рассмотрим, что же нужно сделать.       Рис.1       |                              |
|                         |                              | Рис.2     Этап 1: проверка наличия Services  Если у вас в    |                              |
|                         |                              | приложении при входе есть проверка наличия Google Services,  |                              |
|                         |                              | то придётся от этого отказаться, и проверять наличие         |                              |
|                         |                              | соответствующих сервисов только по мере необходимости.       |                              |
|                         |                              | Пример реализации: добавляем extension, возвращающий         |                              |
|                         |                              | конкретный доступный сервис, а в момент использования        |                              |
|                         |                              | функциональности проверяем, что на устройстве есть нужные    |                              |
|                         |                              | нам сервисы.     Этап 2: карты  В приложении Delivery Club   |                              |
|                         |                              | три основные страницы:       карта с местоположением         |                              |
|                         |                              | клиента;   информация о ресторане, который будет готовить    |                              |
|                         |                              | заказ, с указанием его местоположения на карте;   карта с    |                              |
|                         |                              | отслеживанием местоположения курьера, везущего заказ.    На  |                              |
|                         |                              | устройствах Huawei все эти карты не работают. Чтобы это      |                              |
|                         |                              | исправить, можно просто заменить зависимости: вместо пакета  |                              |
|                         |                              | использовать  :            Конечно, есть нюансы, но мы уже   |                              |
|                         |                              | сделали большу́ю часть работы. Huawei сделала Maps SDK с      |                              |
|                         |                              | контрактами, по большей части соответствующий Google Maps    |                              |
|                         |                              | SDK. Однако у Google есть deprecated-методы, если вы их      |                              |
|                         |                              | используете, то аналогов у Huawei может и не найтись.        |                              |
|                         |                              | Например, для получения местоположения пользователя мы       |                              |
|                         |                              | используем:      Такой подход считается deprecated, и если   |                              |
|                         |                              | мы просто скопируем код для Huawei Maps и заменим            |                              |
|                         |                              | зависимости, то работать не будет. Нужно поменять так:       |                              |
|                         |                              | PolyUtil. Расшифровка с помощью Polyline  Теперь нам нужно   |                              |
|                         |                              | отображать перемещение курьера. Для этого нам нужно          |                              |
|                         |                              | расшифровывать строку, которая приходит с сервера. Для этого |                              |
|                         |                              | воспользуемся тем же алгоритмом от Google, с помощью         |                              |
|                         |                              | которого строка кодировалась.        После расшифровки мы    |                              |
|                         |                              | получили список координат курьера.     Реализация поддержки  |                              |
|                         |                              | двух карт  Для поддержки нескольких карт необходимо создать  |                              |
|                         |                              | обёртку для самих карт и для объекта.    Добавляем общий     |                              |
|                         |                              | интерфейс, например,  . Не забываем сделать общий класс для  |                              |
|                         |                              | — список координат курьера. У Google он лежит в пакете  , а  |                              |
|                         |                              | у Huawei в  . Кладём список в   и задаём ширину и цвет линии |                              |
|                         |                              | маршрута.       Добавляем Custom Map View реализующего       |                              |
|                         |                              | интерфейс  :        Добавляем обёртку, которая позволяет нам |                              |
|                         |                              | указать, где мы хотим отрисовывать карту:      И в нужном    |                              |
|                         |                              | месте вызываем метод добавления карты.      Такие обёртки    |                              |
|                         |                              | класса нужно создать для всего: объектов, маркеров,  ,   и   |                              |
|                         |                              | т.д.     Проблема: «Карта не работает»      Однажды нам      |                              |
|                         |                              | сообщили о баге. Пользователь с устройством Huawei,          |                              |
|                         |                              | находившийся в центре Москвы (Рис.3), открыл приложение,     |                              |
|                         |                              | нажал на кнопку «Переместиться на своё местоположение», и    |                              |
|                         |                              | его перенесло в пустоту (Рис.4). Пользователь не видит, ни   |                              |
|                         |                              | улиц, ни зданий, и он решил, что карта не работает.     Мы   |                              |
|                         |                              | попробовали воспроизвести у себя эту проблему. И             |                              |
|                         |                              | действительно попадали в неопределённое пространство. Когда  |                              |
|                         |                              | попробовали чуть-чуть уменьшить масштаб карты, то оказалось, |                              |
|                         |                              | что мы попали в пригород Мариуполя (Рис.5). То есть из       |                              |
|                         |                              | московских координат (55.819207, 37.493424) перенеслись в    |                              |
|                         |                              | мариупольские (47.187447, 37.593137). Мы были в полном       |                              |
|                         |                              | недоумении. Может быть, где-то у нас с числами что-то не то  |                              |
|                         |                              | происходит. Возможно, происходят некие вычитания наших       |                              |
|                         |                              | координат. Очень долго искали решение этой проблемы или хотя |                              |
|                         |                              | бы причину. Оказалось, что мы заменили импорты из Google-    |                              |
|                         |                              | карт, и поэтому всё перестало работать. В конце концов мы    |                              |
|                         |                              | добрались до  ’а.         Давайте быстро вспомним, что такое |                              |
|                         |                              | padding у карты. На (Рис.6) показан экран авторизации, карта |                              |
|                         |                              | занимает всю область экрана, даже под плашкой ручного ввода  |                              |
|                         |                              | адреса. В таком случае, если мы не добавим   карте, её центр |                              |
|                         |                              | будет находиться на месте зелёного треугольника, но мы       |                              |
|                         |                              | хотим, чтобы он был в центре рабочей области карты.   сужает |                              |
|                         |                              | рабочую область (Рис.7). Не видимую, а именно рабочую. Карта |                              |
|                         |                              | будет по-прежнему занимать весь экран, но размер её рабочей  |                              |
|                         |                              | области изменится. И когда вы будете переходить в новую      |                              |
|                         |                              | координату, она будет принимать положение новой рабочей      |                              |
|                         |                              | карты. Как оказалось, баг был именно из-за этого.            |                              |
|                         |                              | Первое решение:  убрать  . Как вы понимаете, такой вариант   |                              |
|                         |                              | нам не подошёл. Мы хотели, чтобы всё отображалось красиво.   |                              |
|                         |                              | Второе решение проблемы:  использовать анимированное         |                              |
|                         |                              | перемещение, но с масштабированием.       При переходе с     |                              |
|                         |                              | изменением масштаба карты всё работало правильно. Здорово!   |                              |
|                         |                              | Мы подумали, что это нам подходит. На самом деле нет. У нас  |                              |
|                         |                              | ещё есть третий экран, на котором нужно увеличивать карту    |                              |
|                         |                              | относительно двух маркеров, чтобы   сам рассчитывался,       |                              |
|                         |                              | поэтому мы не можем задать какое-то константное              |                              |
|                         |                              | масштабирование. То есть такой вариант нам тоже не подошёл.  |                              |
|                         |                              | Начали думать дальше и нашли новое решение.     Третье       |                              |
|                         |                              | решение проблемы:  вообще отказаться от анимации. Как        |                              |
|                         |                              | оказалось, если вместо   сделать просто  , то перемещение    |                              |
|                         |                              | будет происходить правильно. Так мы и сделали. Надеемся, в   |                              |
|                         |                              | скором времени Huawei устранит эту проблему.     Этап 3:     |                              |
|                         |                              | push-сервис  Идём дальше. На Huawei-устройства не приходят   |                              |
|                         |                              | уведомления нашего приложения. Дело в том, что мы не можем   |                              |
|                         |                              | получить токен. Давайте его получим. В Google мы получаем    |                              |
|                         |                              | задачу и извлекаем токены так:      Наше решение:            |                              |
|                         |                              | Выглядит всё так же, как и с реализацией  , даже есть  ’и    |                              |
|                         |                              | и  . Однако без нюансов не обойтись. Случается, что на       |                              |
|                         |                              | некоторых редких устройствах   вызывается в главном потоке,  |                              |
|                         |                              | поэтому лучше не использовать здесь долго выполняющиеся      |                              |
|                         |                              | задачи.    Получаем токены на Huawei:      Обратите          |                              |
|                         |                              | внимание, что метод выполняется в главном потоке. И для      |                              |
|                         |                              | получения токена нужно отдельно реализовать поток. У Google  |                              |
|                         |                              | такой подход уже считается устаревшим, возможно, Huawei      |                              |
|                         |                              | придёт к тому же.    Мы можем вообще не использовать  , а    |                              |
|                         |                              | прописать в манифесте автоматическую инициализацию или в     |                              |
|                         |                              | коде методом   и всегда получать token в   (подробнее). Это  |                              |
|                         |                              | решит ещё одну проблему:   в версиях EMUI ниже 10 вообще     |                              |
|                         |                              | возвращает  .       Этап 4: Chrome Custom Tabs  Наше         |                              |
|                         |                              | приложение при запуске регулярно вылетает с ошибкой  . Чтобы |                              |
|                         |                              | от этого избавиться, нужно обработать отсутствие Chrome      |                              |
|                         |                              | Tabs.      Мы просто обернули   в   и в случае ошибки        |                              |
|                         |                              | пытаемся открыть в браузере. Но бывает такого, чтобы на      |                              |
|                         |                              | устройстве не было подходящего браузера, способного          |                              |
|                         |                              | обработать наш неявный  . Поэтому если метод   возвращает  , |                              |
|                         |                              | мы открываем страницу в  .     Этап 5: аналитика  Аналитика  |                              |
|                         |                              | у Huawei похожа на Google Analytics. Покажу замену на        |                              |
|                         |                              | примере Firebase. Сначала инициализируем:  . Затем с помощью |                              |
|                         |                              | копируем все наши события из Firebase в отдельный файл  :    |                              |
|                         |                              | Системные параметры:  ,     Даже если у вас нет Firebase,    |                              |
|                         |                              | добавить аналитику в Huawei очень просто. У них отличная     |                              |
|                         |                              | документация, контракт соблюдается. Также у Huawei есть      |                              |
|                         |                              | отличные инструменты для исследования аудитории.     Этап 6: |                              |
|                         |                              | crashlytics  Следующий инструмент, который нам тоже стало    |                              |
|                         |                              | интересно попробовать, это Crashlytics от Huawei, которая    |                              |
|                         |                              | называется  . Она позволяет с минимальными усилиями собирать |                              |
|                         |                              | и анализировать информацию о падении приложения.             |                              |
|                         |                              | Инициализируем crashlytics:      Добавляем свои ключи и      |                              |
|                         |                              | журналируем нужные события:       Этап 7: покупки в          |                              |
|                         |                              | приложении  Если в вашем приложении есть встроенные покупки, |                              |
|                         |                              | вы должны подписать согласие на передачу персональных        |                              |
|                         |                              | данных, и отослать письмом в конверте или через курьера в    |                              |
|                         |                              | московский офис Huawei. И только через пару дней они вам     |                              |
|                         |                              | дадут доступ для реализации этой функциональности.     Всё   |                              |
|                         |                              | очень похоже на реализацию Google. При запуске приложения    |                              |
|                         |                              | запрашиваем все прошлые покупки пользователя:      Если      |                              |
|                         |                              | какой-то товар был куплен, мы разблокируем его               |                              |
|                         |                              | функциональность. Потом запрашиваем подробности по товарам,  |                              |
|                         |                              | доступным для продажи — цену и описание:      Когда          |                              |
|                         |                              | пользователь кликает на товар, мы открываем страницу с       |                              |
|                         |                              | оплатой. Она не такая красивая, как у Google, и не выезжает  |                              |
|                         |                              | снизу.      Так как это Activity, мы передаём ему аргумент,  |                              |
|                         |                              | по которому можно отловить   и понять, успешно ли прошла     |                              |
|                         |                              | оплата и как закончилась транзакция:      У нас есть         |                              |
|                         |                              | специальные статусы:  ,  ,  . Первый означает успешную       |                              |
|                         |                              | оплату. Второй — пользователь просто закрыл страницу без     |                              |
|                         |                              | покупки, тогда мы обрабатываем этот callback и предлагаем    |                              |
|                         |                              | скидку, чтобы уговорить на покупку. А третий статус          |                              |
|                         |                              | означает, что товар уже куплен пользователем. Если товар     |                              |
|                         |                              | разовый или подписочный, то на этом моменте нужно            |                              |
|                         |                              | остановиться, в противном случае виртуально доставить        |                              |
|                         |                              | покупку.    В случае успешной оплаты доставляем пользователю |                              |
|                         |                              | купленный товар:      Если не сделать доставку, то           |                              |
|                         |                              | функциональность товара будет у пользователя заблокирована,  |                              |
|                         |                              | а деньги возвращены. В Google Play Billing Library до        |                              |
|                         |                              | третьей версии этого делать не нужно было, но потом Google   |                              |
|                         |                              | тоже это добавил, и если мы не доставим товар, через 48      |                              |
|                         |                              | часов покупка отменится, а деньги вернутся пользователю. То  |                              |
|                         |                              | есть в Huawei покупки реализованы как в третьей версии       |                              |
|                         |                              | Google Play Billing.     Выводы  На реализацию поддержки     |                              |
|                         |                              | Huawei-устройств не уйдёт много времени. Даже без реальных   |                              |
|                         |                              | устройств вы сможете проверить работоспособность вашего      |                              |
|                         |                              | приложение: у Huawei есть своя тестовая лаборатория с        |                              |
|                         |                              | виртуальными устройствами наподобие  Samsung Remote test lab |                              |
|                         |                              | . Количество пользователей быстро растёт, и бизнесу может    |                              |
|                         |                              | оказаться выгодным вложиться в доработку продуктов, а        |                              |
|                         |                              | отличная документация поможет разработчикам всё сделать      |                              |
|                         |                              | быстро. Поддержка HMS активно отвечает на любые вопросы,     |                              |
|                         |                              | если вы не сможете в документации что-то найти.              |                              |
|                         |                              | Видеозапись доклада с конференции  Mobius 2020 .             |                              |
|                         |                              | Полезные ссылки     In-App Purchases   Huawei HMS Core       |                              |
|                         |                              | Руководство по интеграции библиотек                          |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |  Восстанавливаем RAID 5, 1   | В нашем пошаговом руководстве, я расскажу о нескольких       |            raid1             |
| pany/hetmansoftware/blo | или 0 при поломке одного или | методах восстановления информации с программных RAID 5, 0    |            raid5             |
|        g/547058/        |      нескольких дисков       | или 1, которые собраны под «Linux».        Если один или     |            raid0             |
|                         |                              | несколько физических накопителей повреждены, то кажется что  |    восстановление данных     |
|                         |                              | восстановить данные просто невозможно. На самом деле это не  |             диск             |
|                         |                              | так, объем информации, который можно достать из массива,     |            массив            |
|                         |                              | сильно зависит от типа RAID и количества сломанных           |                              |
|                         |                              | носителей.      Программный RAID крайне ненадежная штука,    |                              |
|                         |                              | отключите всего один накопитель и весь массив перестанет     |                              |
|                         |                              | определяться системой. Массив с поломанным носителем, можно  |                              |
|                         |                              | пересобрать при помощи специальных программ, в наших тестах  |                              |
|                         |                              | я буду использовать  Hetman RAID Recovery . После запуска,   |                              |
|                         |                              | она автоматически определит тип контроллера, название        |                              |
|                         |                              | программы или производителя материнской платы, на основе     |                              |
|                         |                              | технологий которых был собран RAID. Потом утилита соберет    |                              |
|                         |                              | его из оставшихся «живых» накопителей, просканирует и найдет |                              |
|                         |                              | всю оставшуюся информацию, которую можно будет сохранить в   |                              |
|                         |                              | другое место.    Установочный файл программы есть только под |                              |
|                         |                              | ОС Windows. Чтобы запустить ее под Linux понадобиться, либо  |                              |
|                         |                              | установить дополнительную систему на компьютер, либо         |                              |
|                         |                              | воспользоваться виртуальной машиной под Windows. В нашем     |                              |
|                         |                              | случае, я выбрал второй вариант.         Восстанавливаем     |                              |
|                         |                              | файлы с RAID-1  Тестовый массив первого типа состоит из двух |                              |
|                         |                              | одинаковых накопителей. Этот тип очень надежен сам по себе,  |                              |
|                         |                              | так как может состоять из четного количества физических      |                              |
|                         |                              | дисков, которые работают как «полное зеркало». Если          |                              |
|                         |                              | поврежден только один носитель, то все устройство невозможно |                              |
|                         |                              | смонтировать в Linux.        Запускаем программу, она нашла  |                              |
|                         |                              | и пересобрала устройство, все параметры указаны верно.       |                              |
|                         |                              | Так как, «живой» диск содержит полноценную копию всей        |                              |
|                         |                              | информации, то запускаем быстрый анализ, отмечаем нужные нам |                              |
|                         |                              | файлы и каталоги, сохраняем на любой другой диск.            |                              |
|                         |                              | Восстанавливаем данные с RAID 5        Тип RAID-5 – это      |                              |
|                         |                              | избыточный массив накопителей с чередованием, без            |                              |
|                         |                              | определенного диска четности. Главная особенность этого      |                              |
|                         |                              | типа, в том что массив гарантировано будет работать даже при |                              |
|                         |                              | поломке одного диска. Но, при попытке смонтировать его в     |                              |
|                         |                              | Linux ничего не вышло. Чтобы исправить ситуацию, необходимо  |                              |
|                         |                              | подключить чистый «винчестер» на место сломанного, или       |                              |
|                         |                              | пересобрать с помощью ПО.    Тестовый RAID 5 состоит из 5    |                              |
|                         |                              | физических дисков, один из них гарантированно сломан.        |                              |
|                         |                              | Добавляем их в виртуальную машину с Windows, запускаем       |                              |
|                         |                              | Hetman RAID Recovery, массив обнаружен и все настройки и     |                              |
|                         |                              | свойства указаны верно.        Как и положено один           |                              |
|                         |                              | накопитель пустой. Так как это RAID 5, то снова запускаем    |                              |
|                         |                              | быстрый анализ, находим нужные данные с помощью функции      |                              |
|                         |                              | превью и восстанавливаем их. Когда процесс сохранения        |                              |
|                         |                              | закончится, все файлы будут находится в выбранном каталоге.  |                              |
|                         |                              | Теперь рассмотрим вариант когда повреждены два физических    |                              |
|                         |                              | носителя из пяти. Программа обнаружила RAID, и два           |                              |
|                         |                              | «винчестера» пустые.        Восстановить данные с такого     |                              |
|                         |                              | массива, задача непростая, запускаем полное сканирование, в  |                              |
|                         |                              | зависимости от размеров «винчестеров» оно может длиться      |                              |
|                         |                              | вплоть до суток. В итоге, программа нашла нетронутые данные, |                              |
|                         |                              | но несколько файлов частично или полностью стерты, их не     |                              |
|                         |                              | получиться восстановить.        Если повреждены два или      |                              |
|                         |                              | более физических носителя, RAID 5 становиться полностью      |                              |
|                         |                              | неработоспособным, что сулит 100% потерю всех данных.        |                              |
|                         |                              | Поэтому наш результат можно считать удовлетворительным.      |                              |
|                         |                              | Как восстановить данные RAID-0  Наш тестовый RAID 0 включает |                              |
|                         |                              | 5 жестких дисков, этот тип один из самых ненадежных.         |                              |
|                         |                              | Фактически, это вообще не RAID, так как он не хранит         |                              |
|                         |                              | избыточную информацию о хранящихся файлах. Если выйдет из    |                              |
|                         |                              | строя хоть один «винчестер», то все устройство целиком       |                              |
|                         |                              | нельзя монтировать в ОС. Все данные становятся недоступны.   |                              |
|                         |                              | Тип RAID-0 – это массив физических носителей с чередованием. |                              |
|                         |                              | Он показывает хорошую производительность благодаря высокой   |                              |
|                         |                              | скорости чтения/записи, но отказ оборудования для него будет |                              |
|                         |                              | критическим. Посмотрим, сможем ли мы восстановить хоть часть |                              |
|                         |                              | потерянных данных.        Добавляем диски в виртуальную      |                              |
|                         |                              | машину и запускаем утилиту. Hetman Partition Recovery со     |                              |
|                         |                              | скрежетом смогла правильно определить тип и свойства         |                              |
|                         |                              | массива, один диск отображается пустым.        Быстрое       |                              |
|                         |                              | сканирование бессмысленно, сразу запускаем глубокий анализ.  |                              |
|                         |                              | Все живые файлы удалось обнаружить и просмотреть превью, но  |                              |
|                         |                              | также много поврежденных данных. Выбираем файлы с помощью    |                              |
|                         |                              | превью и кликаем «Восстановить».         Вывод  Как показали |                              |
|                         |                              | тесты, количество восстанавливаемой информации напрямую      |                              |
|                         |                              | зависит от типа массива. Данные с RAID 5 или 1 можно         |                              |
|                         |                              | восстановить практически в полном объеме, благодаря          |                              |
|                         |                              | «зеркалам» или избыточности информации. Даже при поломке     |                              |
|                         |                              | нескольких жестких дисков, шансы вернуть большую часть       |                              |
|                         |                              | нужных файлов достаточно высока.    Выход из строя хоть      |                              |
|                         |                              | одного носителя, для RAID 0 становиться критическим. В       |                              |
|                         |                              | большинстве случаев вы сможете восстановить только малую     |                              |
|                         |                              | часть хранящихся данных. Что касается программы, то она      |                              |
|                         |                              | смогла в автоматическом режиме распознать подключенные диски |                              |
|                         |                              | и правильно определить тип массива, что дало возможность уже |                              |
|                         |                              | восстанавливать файлы.    Полную версию статьи со всеми      |                              |
|                         |                              | дополнительными видео уроками смотрите в  источнике .        |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |  Разделение кода и текста:   | Этот пост является продолжением предыдущей публикации        |         локализация          |
|        t/547076/        |           прототип           | Разделение кода и текста: мысли вслух . На этот раз мы       |             идеи             |
|                         |                              | пойдем чуть-чуть дальше и представим возможный API, а также  |             php              |
|                         |                              | сравним рабочий процесс до и после. В качестве примера       |           laravel            |
|                         |                              | использованы язык PHP и фреймворк Laravel, но это почти не   |                              |
|                         |                              | имеет значения. Тезис В этом посте мы пытаемся разобраться,  |                              |
|                         |                              | можно ли заметно улучшить процесс работы с текстом в         |                              |
|                         |                              | современных приложениях. Под текстом подразумеваются любые   |                              |
|                         |                              | элементы интерфейса, коммуникаций с пользователями и так     |                              |
|                         |                              | далее – то, что не является частью бизнес-логики в исходном  |                              |
|                         |                              | коде. Говоря проще, это файлы с шаблонами, переменные и      |                              |
|                         |                              | параметры типа string и так далее. Текущий метод #1 Для      |                              |
|                         |                              | начала рассмотрим самый примитивный способ работы с          |                              |
|                         |                              | текстами. Этот способ вполне себе подходит для маленьких     |                              |
|                         |                              | приложений и сайтов. Текст передается как параметр внутри    |                              |
|                         |                              | контроллера: Текст являются частью шаблона: Плюсы данного    |                              |
|                         |                              | метода: Программисту не надо тратить дополнительное время    |                              |
|                         |                              | Очень легко вставлять в текст значения из переменных Минусы: |                              |
|                         |                              | Тексты разбросаны по репозиторию – что-то находится в        |                              |
|                         |                              | классах, что-то в шаблонах. Иногда нужно время, чтобы найти  |                              |
|                         |                              | конкретный текст и исправить в нем ошибку Нет возможности    |                              |
|                         |                              | перевода на другие языки Текущий метод #2 Этот метод из      |                              |
|                         |                              | документации Laravel , и большинство современных             |                              |
|                         |                              | фреймворков, написанных на самых разных языках, имеют что-то |                              |
|                         |                              | подобное. Это примерная копия технологии 1970-1980 годов под |                              |
|                         |                              | названием i18n. Имеем отдельную папку с набором файлов, в    |                              |
|                         |                              | которых хранятся все наши тексты. В коде, вместо того, чтобы |                              |
|                         |                              | писать текст напрямую, ссылаемся на эти файлы, на какой-то   |                              |
|                         |                              | идентификатор конкретного текста: Плюсы метода: Теперь можно |                              |
|                         |                              | переводить тексты при необходимости, достаточно перевести    |                              |
|                         |                              | файлы, в которых хранятся тексты Тексты вынесены в отдельную |                              |
|                         |                              | папку, что позволяет оптимизировать рабочий процесс          |                              |
|                         |                              | (допустим, сделать их отдельным пакетом или репозиторием,    |                              |
|                         |                              | чтобы копирайтеры и переводчики могли там делать изменения   |                              |
|                         |                              | сами) Минусы метода: Дополнительная, замедляющая работа для  |                              |
|                         |                              | разработчика, причем с ростом приложения она сильно          |                              |
|                         |                              | увеличивается. Часто возникает дилемма - использовать        |                              |
|                         |                              | существующий текст или создать новый? А вдруг в этом новом   |                              |
|                         |                              | месте чуть-чуть другой контекст?  Вставлять переменные в     |                              |
|                         |                              | текст не так удобно, как в варианте #1 Опечатка в            |                              |
|                         |                              | идентификаторе текста "поломает" его Работая с текстами      |                              |
|                         |                              | копирайтеры и переводчики могут не до конца понимать, в      |                              |
|                         |                              | каком месте конкретно он используется, "влезет" ли он в      |                              |
|                         |                              | интерфейс и так далее Текущий метод #3 Этот метод является   |                              |
|                         |                              | модификацией предыдущего. Вместо использования               |                              |
|                         |                              | идентификаторов, в целях ускорения работы сразу              |                              |
|                         |                              | подставляется текст на языке по-умолчанию (например, на      |                              |
|                         |                              | языке разработчика): Плюсы метода: Программист не тратит     |                              |
|                         |                              | лишнего времени, как и в варианте #1 Можно комфортно         |                              |
|                         |                              | переводить продукт на другие языки или локали Минусы метода: |                              |
|                         |                              | Переменные снова не так удобно вставлять внутрь текста Если  |                              |
|                         |                              | программист сделал опечатку или просто написал плоховато, то |                              |
|                         |                              | копирайтеру надо идти в код, чтобы исправить Тексты теперь   |                              |
|                         |                              | разнесены по 2 местам – переводы находятся в папке с         |                              |
|                         |                              | текстовыми файлами, а тексты на основном языке находятся     |                              |
|                         |                              | прямо в коде Все еще не до конца понятно где находится в     |                              |
|                         |                              | продукте конкретный текст. Копирайтер или переводчик может   |                              |
|                         |                              | выбрать неудачный или неподходящий (по тону, по длине) текст |                              |
|                         |                              | Невозможность иметь разные переводы для одного и того же     |                              |
|                         |                              | исходного текста, так как сам текст является уникальным      |                              |
|                         |                              | идентификатором Предлагаемый метод А теперь рассмотрим       |                              |
|                         |                              | предлагаемый данной статьей метод, в котором мы попытаемся   |                              |
|                         |                              | объединить плюсы каждого из вышеперечисленных. Предлагается  |                              |
|                         |                              | использовать супер-короткую глобальную функцию (наподобие  ) |                              |
|                         |                              | в коде и директиву в файлах шаблонов (допустим,  ): Или даже |                              |
|                         |                              | вот так: Это смесь всех вышеуказанных методов. С одной       |                              |
|                         |                              | стороны, мы работаем с текстом по привычному – мы можем      |                              |
|                         |                              | взять и вставить переменную внутри, где ходим. С другой      |                              |
|                         |                              | стороны, у нас есть специальный класс, который умеет         |                              |
|                         |                              | переводить тексты. Что же делает глобальная функция или      |                              |
|                         |                              | директива  : Подобно функции   она проверяет в специальных   |                              |
|                         |                              | файлах наличие альтернативного текста, которым может быть    |                              |
|                         |                              | как перевод на другой язык,  так и просто поправленная       |                              |
|                         |                              | версия на этом же языке Все отсутствующие тексты             |                              |
|                         |                              | записываются в специальной лог, для дальнейшего экспорта     |                              |
|                         |                              | Функция использует трассировку языка и статический анализ,   |                              |
|                         |                              | чтобы понять откуда был вызов – с какой страницы, какого     |                              |
|                         |                              | шаблона и так далее Таким образом, предполагается, что где-  |                              |
|                         |                              | то в процессе CI/CD будет происходить синхронизация  – мы    |                              |
|                         |                              | будем извещать внешний API о новых текстах, которые          |                              |
|                         |                              | нуждаются в переводе или поправках, включая их точное        |                              |
|                         |                              | местоположение, а также загружать в локальные файлы          |                              |
|                         |                              | существующие тексты. Это создает целый ряд плюсов.           |                              |
|                         |                              | Рассмотрим их детально. Преимущество #1 Как известно, многие |                              |
|                         |                              | программисты говорят даже на своих родных языках заметно     |                              |
|                         |                              | слабее Шекспира или Пушкина. Тем не менее, с этим подходом   |                              |
|                         |                              | разработчики могут не терять лишнее время, а просто писать   |                              |
|                         |                              | черновые версии текста: Вот соответствующее всплывающее      |                              |
|                         |                              | сообщение на сайте: Вроде бы и неплохо, но как-то слишком    |                              |
|                         |                              | лаконично и сухо, кто-то даже может обидеться. Копирайтер    |                              |
|                         |                              | (ну или какой-то product manager) вскоре увидит в своем      |                              |
|                         |                              | интерфейсе, что появился новый текст на сайте и правит его   |                              |
|                         |                              | на что-то более дружелюбное или соответствующее брэнду: Что  |                              |
|                         |                              | после следующей синхронизации попадает в интерфейс продукта: |                              |
|                         |                              | Программист при этом не трогал код, да и не будет трогать    |                              |
|                         |                              | эту часть кода  никогда . Ведь это не часть бизнес-логики.   |                              |
|                         |                              | Тексты целиком и полностью управляются из удобной админки.   |                              |
|                         |                              | Нет никаких коммитов в репозиторий, чтобы поправить опечатку |                              |
|                         |                              | или улучшить текст.  То есть первое преимущество – это       |                              |
|                         |                              | снятие с плечей разработчиков забот о качественных текстах.  |                              |
|                         |                              | Программисты делают свою работу, а копирайтеры делают свою.  |                              |
|                         |                              | Преимущество #2 Удобный общий контроль всех текстов в        |                              |
|                         |                              | продукте – языка, на котором мы говорим с клиентами. Можно в |                              |
|                         |                              | любую секунду посмотреть как сейчас мы говорим на странице X |                              |
|                         |                              | или в письме Y, влазит ли тайский перевод в кнопку,          |                              |
|                         |                              | достаточно ли эмпатии в письме про отмену транзакции: Если   |                              |
|                         |                              | раньше коллеги спрашивали: "а что мы сейчас говорим на       |                              |
|                         |                              | такой-то странице?", а мы отвечали: "непомню, вроде вот      |                              |
|                         |                              | это", то теперь любой сотрудник может посмотреть любой шаг и |                              |
|                         |                              | предложить поправки или улучшения в пару кликов. Тексты,     |                              |
|                         |                              | разбросанные по сотням или тысячам файлов теперь собраны в   |                              |
|                         |                              | одном месте и разложены аккуратно по полочкам, с полноценным |                              |
|                         |                              | предпросмотром: Гипотетический предпросмотр (рендер)         |                              |
|                         |                              | Преимущество #3 Такой фичи, во всяком случае публично, пока  |                              |
|                         |                              | нигде нет, но появляется интересная возможность создавать    |                              |
|                         |                              | что-то вроде диалектов – тексты, адаптированные по тону и    |                              |
|                         |                              | лексикону под конкретного пользователя, точнее группу        |                              |
|                         |                              | пользователей. Пользователи младше 30 лет получают сообщения |                              |
|                         |                              | в более веселом тоне, с модными словечками, а люди старше 50 |                              |
|                         |                              | – нейтральные, уважительные тексты. В теории это поднимет    |                              |
|                         |                              | конверсии за счет повышения рапорта с пользователем, и       |                              |
|                         |                              | логично предположить, что полезно это будет в основном       |                              |
|                         |                              | продуктам с разными сегментами пользователей.  То есть,      |                              |
|                         |                              | имеем локаль   – русский язык в Российской его версии, и на  |                              |
|                         |                              | его основе создаем   . Преимущество #4 Появляется сильно     |                              |
|                         |                              | упрощенная возможность проведения тестов A/B. Как многим     |                              |
|                         |                              | давно известно, текст напрямую влияет на уровень конверсий   |                              |
|                         |                              | на странице – исправив одно слово, можно замотивировать      |                              |
|                         |                              | большую группу пользователей что-то сделать, или наоборот    |                              |
|                         |                              | перестать что-то делать. Сейчас на рынке нет прямо уж очень  |                              |
|                         |                              | простых способов делать такие тесты. Как правило,            |                              |
|                         |                              | разработчики делают что-то вроде: Имеем два шаблона   и  , в |                              |
|                         |                              | первом у нас так называемая control-версия теста, его старый |                              |
|                         |                              | вид, а во втором файле treatment-версия – версия,            |                              |
|                         |                              | эффективность которой мы тестируем. Пользователям при        |                              |
|                         |                              | посещении страницы выставляется кука или флаг в сессии,      |                              |
|                         |                              | которая будет определять какую версию в дальнейшем они будут |                              |
|                         |                              | видеть. Кроме того, аналитика (допустим, Google Analytics)   |                              |
|                         |                              | будет также получать этот флаг, чтобы в дальнейшем можно     |                              |
|                         |                              | было делать сравнительный анализ. Представим, что в нашей    |                              |
|                         |                              | гипотетический админке появилась еще кнопка "A/B-тест":      |                              |
|                         |                              | Нажали на кнопочку и предоставили вторую версию текста: А    |                              |
|                         |                              | наш сервис аналитики (скажем, Google Analytics) берет        |                              |
|                         |                              | правильную метку (control или treatment) либо из нашего      |                              |
|                         |                              | приложения, либо из этого сервиса по работе с текстами.      |                              |
|                         |                              | Добавили вторую версию текста и через неделю посмотрели как  |                              |
|                         |                              | изменился Bounce Rate или количество кликов на странице,     |                              |
|                         |                              | оставили одну – ту, что эффективнее. Тривиально.             |                              |
|                         |                              | Преимущество #5 Подключать сервисы переводов (вроде Gengo)   |                              |
|                         |                              | или сервисы исправления грамматических ошибок настолько      |                              |
|                         |                              | тривиально, что даже не стоит подробно об этом писать ;)     |                              |
|                         |                              | Послесловие Конечно, тут бы имела место быть какая-то цена   |                              |
|                         |                              | миграции – время и силы, затраченные на то, чтобы обернуть   |                              |
|                         |                              | все тексты в коде в эти функцию и директиву, но этот момент  |                              |
|                         |                              | присутствует и в существующих в индустрии вариантах #2 и #3. |                              |
|                         |                              | Хочется добавить, чтобы преимуществ от подобного сервиса     |                              |
|                         |                              | достаточно много даже для моно-языковых продуктов.           |                              |
|                         |                              | Контролировать практику обертки текстов можно через простой  |                              |
|                         |                              | webhook, тогда все pull-реквесты будут автоматически         |                              |
|                         |                              | проверятся: Несмотря на то, что я немного поигрался с кодом  |                              |
|                         |                              | и проверил, что все вышеизложенное  возможно, эта статья     |                              |
|                         |                              | обсуждает гипотетический продукт или утилиту. Цель статьи –  |                              |
|                         |                              | собрать мнения, ваши мнения.  Пользовались бы Вы такой       |                              |
|                         |                              | вещью?                                                       |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |      Китайцы воскрешают      |  Оптические диски уже не используются настолько массово, как |       оптические диски       |
| pany/selectel/blog/5465 |     оптические носители,     | это было совсем недавно. Фактически технология постепенно    |       хранение данных        |
|           28/           |   разработав лазерный диск   | уходит, повторяя судьбу дискет, компакт-кассет и т.п.        |          информация          |
|                         |       емкостью 700 ТБ        | Правда, новая разработка ученых и инженеров из Китая и       |                              |
|                         |                              | Австралии сможет вернуть оптические диски из забвения, если  |                              |
|                         |                              | станет востребованной.     Объединенная команда инженеров и  |                              |
|                         |                              | ученых из Шанхайского политехнического университета и        |                              |
|                         |                              | Мельбурнского технологического института смогла создать      |                              |
|                         |                              | новую технологию записи, позволяющую увеличить емкость диска |                              |
|                         |                              | до 700 терабайт. Это гораздо больше, чем у любого другого    |                              |
|                         |                              | носителя, включая жесткие диски и SSD.       Что это за      |                              |
|                         |                              | технология?   Ученые при поддержке коллег из Национального   |                              |
|                         |                              | университета Сингапура, смогли добиться размещения на диске  |                              |
|                         |                              | обычного размера объема данных в 700 ТБ. Диаметр диска       |                              |
|                         |                              | составляет 120 мм — это текущий стандарт для практически     |                              |
|                         |                              | любых оптических дисков, включая CD, DVD и Blu-ray.     На   |                              |
|                         |                              | данный момент самым емким является четырехслойный Blu-ray    |                              |
|                         |                              | диск, на котором помещается 128 ГБ данных. Стандартный же    |                              |
|                         |                              | однослойный Blu-ray диск позволяет записать на нем не более  |                              |
|                         |                              | 25 ГБ информации. Получается, что один новый диск заменяет   |                              |
|                         |                              | сразу 28 тысяч однослойных Blu-ray дисков.     Что касается  |                              |
|                         |                              | жестких дисков и SSD, то самые емкие из них позволяют        |                              |
|                         |                              | разместить несколько десятков терабайт данных. Но, насколько |                              |
|                         |                              | известно, претенденты на лидерство не добрались пока даже до |                              |
|                         |                              | отметки в 100 ТБ. А здесь — сразу 700 терабайт.      Как это |                              |
|                         |                              | работает?   Разработчики назвали свою технологию             |                              |
|                         |                              | «технологией субдифракционной оптической записи». Одно из ее |                              |
|                         |                              | достоинств, кроме возможности записывать огромные массивы    |                              |
|                         |                              | информации, — использование недорогих лазеров непрерывного   |                              |
|                         |                              | действия. Особых препятствий в массовом выпуске приводов,    |                              |
|                         |                              | поддерживающих новую технологию, нет.       Главный секрет   |                              |
|                         |                              | здесь — в материале, на который производится запись. Это не  |                              |
|                         |                              | металлическая тонкая фольга, а композитный материал. Всех    |                              |
|                         |                              | секретов ученые не раскрывают, поскольку планируют           |                              |
|                         |                              | коммерциализировать технологию. Но известно, что это         |                              |
|                         |                              | нанокомпозит на основе специальных частиц с добавлением      |                              |
|                         |                              | лантаноида с «хлопьями» оксида графена.     Еще одна         |                              |
|                         |                              | особенность — те самые лазеры постоянного действия. Во всех  |                              |
|                         |                              | остальных случаях используются лазеры импульсного типа.      |                              |
|                         |                              | Разработанная учеными технология может быть использована в   |                              |
|                         |                              | массовом производстве оптических носителей. Правда, авторы   |                              |
|                         |                              | разработки пока не рассказали ни о хотя бы примерном порядке |                              |
|                         |                              | цен, ни о том, сколько средств и прочих ресурсов нужно для   |                              |
|                         |                              | запуска производства.      Ближайшие конкуренты   Самые      |                              |
|                         |                              | достойные альтернативы базируются на использовании магнитных |                              |
|                         |                              | лент. Например, компания IBM выпускает магнитные ленты       |                              |
|                         |                              | стандарта IBM LTO Ultrium 8. Емкость картриджей с таким      |                              |
|                         |                              | носителем составляет от 12 ТБ несжатых данных до 30 ТБ       |                              |
|                         |                              | сжатых данных.     Недавно  мы также писали , что японские   |                              |
|                         |                              | ученые из Токийского университета создали новое химическое   |                              |
|                         |                              | соединение, которое позволяет в разы увеличить емкость       |                              |
|                         |                              | магнитных носителей — например, магнитных лент. По словам    |                              |
|                         |                              | исследователей, новый материал позволяет создавать ленточные |                              |
|                         |                              | носители, способные хранить десятки и даже сотни терабайт.   |                              |
|                         |                              | Новые накопители на основе этого материала позволяют         |                              |
|                         |                              | увеличить плотность записи информации, а также улучшить      |                              |
|                         |                              | надежность хранения данных по сравнению с традиционными      |                              |
|                         |                              | ленточными накопителями, жесткими дисками или SSD. Кроме     |                              |
|                         |                              | того, энергозатраты на запись и считывание данных ниже, чем  |                              |
|                         |                              | у других носителей, а сами системы будут стоить меньше. Для  |                              |
|                         |                              | записи данных используются «фокусированные миллиметровые     |                              |
|                         |                              | волны» (focused‐millimeter‐wave‐assisted magnetic recording, |                              |
|                         |                              | F‐MIMR) в диапазоне частот от 30 до 300 ГГц.     Но пока это |                              |
|                         |                              | лишь научный проект, о сроках коммерциализации которого      |                              |
|                         |                              | ничего не известно.     Из более-менее перспективных         |                              |
|                         |                              | разработок можно упомянуть совместный проект Fujifilm и IBM, |                              |
|                         |                              | которым удалось повысить емкость ленточных накопителей       |                              |
|                         |                              | вплоть до 580 ТБ. В продаже, впрочем, их пока нет.       На  |                              |
|                         |                              | рынке SSD и жестких дисков конкурентов у таких носителей и   |                              |
|                         |                              | вовсе нет. Что касается жестких дисков, то максимальная      |                              |
|                         |                              | емкость самых совершенных HDD не превышает 30 ТБ (из тех,    |                              |
|                         |                              | что доступны на рынке). В случае SSD речь идет уже о 100 ТБ. |                              |
|                         |                              | Правда, стоимость такого накопителя составляет $40 тыс., что |                              |
|                         |                              | много даже по меркам небедных компаний. Есть и модель на 50  |                              |
|                         |                              | ТБ, но и она стоит немало — $12,5 тыс.     Что касается      |                              |
|                         |                              | оптических дисков, то последняя попытка разработать что-то   |                              |
|                         |                              | более-менее стоящее была предпринята в 2013 году. Тогда      |                              |
|                         |                              | компании Sony и Panasonic объединили усилия в работе над     |                              |
|                         |                              | проектом по созданию оптического диска емкостью в 300 ГБ     |                              |
|                         |                              | (что всего в 2 с лишним раза больше, чем у четырехслойного   |                              |
|                         |                              | Blu-Ray).     Этот накопитель разрабатывался для             |                              |
|                         |                              | архивирования большого объема данных, то есть для            |                              |
|                         |                              | корпоративного, а не пользовательского сегмента. Компании    |                              |
|                         |                              | даже добились создания нового стандарта — Archival Disc.     |                              |
|                         |                              | Диски начали выпускать небольшими партиями в 2016 году, но   |                              |
|                         |                              | распространенными или востребованными они так и не стали.    |                              |
|                         |                              | Еще есть всякие экзотические разработки вроде «хрустальных   |                              |
|                         |                              | дисков» или записи информации в нитях ДНК. Но в силу вполне  |                              |
|                         |                              | понятных причин — сложность разработки накопителей,          |                              |
|                         |                              | записывающих и считывающих устройств, эти проекты так и      |                              |
|                         |                              | остались «на бумаге».                                        |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/com |   Как эффективно разделить   |     Информации об общей длительности обмена пакетами может   |        ruvds_перевод         |
| pany/ruvds/blog/546642/ |             пинг             | оказаться недостаточно для целей подробного мониторинга и    |             ping             |
|                         |                              | отладки сети. В этом случае будет кстати иметь возможность   |        маршрутизация         |
|                         |                              | детального анализа задержки в каждом направлении. К одним из |                              |
|                         |                              | основным недостатков утилиты ping следует отнести отсутствие |                              |
|                         |                              | информации о времени следования пакета к хосту, и отдельно   |                              |
|                         |                              | времени следования пакета от хоста. В статье мы рассмотрим   |                              |
|                         |                              | способ точного замера времени передачи пакета как к хосту,   |                              |
|                         |                              | так и обратно, попутно решив связанные с этим процессом      |                              |
|                         |                              | сложности.    Ping является одной из основополагающих        |                              |
|                         |                              | сетевых утилит. Эта утилита проста, легко поддерживается и,  |                              |
|                         |                              | как правило, присутствует во всех сетевых стеках. С ее       |                              |
|                         |                              | помощью мы узнаем о доступности хоста, а также выясняем      |                              |
|                         |                              | приблизительное время задержки между исходной системой       |                              |
|                         |                              | запроса и целью.       Регулярный мониторинг пинга тоже      |                              |
|                         |                              | весьма полезен, так как позволяет отмечать положительные или |                              |
|                         |                              | отрицательные изменения в качестве работы сети:              |                              |
|                         |                              | Принцип работы  Базовый режим работы ping подразумевает      |                              |
|                         |                              | отправку к цели сообщения ICMP Type 8, в ответ на которое    |                              |
|                         |                              | хост ожидает возвращения пакета ICMP Type 0. При этом        |                              |
|                         |                              | измеряется время, прошедшее с момента отправки до момента    |                              |
|                         |                              | получения пакета:         Есть общая тенденция считать, что  |                              |
|                         |                              | при делении значения задержки на два мы получаем время       |                              |
|                         |                              | доставки данных в одном направлении (такое предположение     |                              |
|                         |                              | часто используется в отношении “ netcode ”). И хотя в идеале |                              |
|                         |                              | так оно и должно быть, на деле интернет полон асимметричной  |                              |
|                         |                              | маршрутизации, и путь пинга может выглядеть, к примеру, так: |                              |
|                         |                              | В этом примере на передачу пакета уходит 63мс при том, что   |                              |
|                         |                              | его возвращение занимает всего 35мс. Обычный показатель      |                              |
|                         |                              | пинга просто представил бы общую задержку в 109мс. Но если   |                              |
|                         |                              | делать расчет времени доставки в одном направлении, исходя   |                              |
|                         |                              | из значения 109мс, то мы получим приличную долю ошибки,      |                              |
|                         |                              | которая может варьироваться вплоть до 10мс.    Но как же     |                              |
|                         |                              | тогда правильно разделить такой пинг на этапы отправки и     |                              |
|                         |                              | получения?  Понимание пришло ко мне после просмотра          |                              |
|                         |                              | выступления  apenwarr  ( pdf ), где он рассказывал о Google  |                              |
|                         |                              | Fibre WiFi. В этом выступлении apenwarr упоминает инструмент |                              |
|                         |                              | под названием isoping.     Isoping  – это программа, которая |                              |
|                         |                              | определяет разницу в скорости передачи и получения пакетов.  |                              |
|                         |                              | Тем не менее после некоторых тестов и беседы с apenwarr я    |                              |
|                         |                              | выяснил, что эта программа не может обнаруживать устойчивую  |                              |
|                         |                              | асимметрию.     Она производит вычисление на основе          |                              |
|                         |                              | минимального наблюдаемого RTT (времени приема-передачи), а   |                              |
|                         |                              | не фактического. Минимальное RTT – это наименьшая доступная  |                              |
|                         |                              | точность. Однако для обнаружения причин резких скачков пинга |                              |
|                         |                              | wifi до 500мс или увеличения задержки при загрузке файла     |                              |
|                         |                              | этот инструмент очень эффективен.     Так что увы, Isoping   |                              |
|                         |                              | отлично подходит для мониторинга джиттера (проблемы, которую |                              |
|                         |                              | Google Fiber решают с помощью WiFi-приставок) или            |                              |
|                         |                              | обнаружения направленной потери пакетов, но не для нашей     |                              |
|                         |                              | задачи определения систематической асимметрии в              |                              |
|                         |                              | маршрутизации.     Так как же разделить пинг?    Как я уже   |                              |
|                         |                              | говорил, ping ICMP измеряет время между отправкой и          |                              |
|                         |                              | получением ответа. При отсутствии дополнительных метаданных  |                              |
|                         |                              | невозможно выявить какую-либо асимметрию во времени передачи |                              |
|                         |                              | между RX и TX.          Тем не менее если иметь возможность  |                              |
|                         |                              | кодировать в пакете информацию о времени передачи, фиксируя  |                              |
|                         |                              | момент его отправки и получения, то можно выделять время,    |                              |
|                         |                              | затраченное на доставку пакета хосту, а затем вычитать его   |                              |
|                         |                              | значение из общей длительности обмена, получая время ответа. |                              |
|                         |                              | К нашему удобству, в ICMP уже есть такая возможность в виде  |                              |
|                         |                              | Timestamp Requests  (Запросы с временными метками).        В |                              |
|                         |                              | этом разложении Wireshark присутствуют  , указывающий время  |                              |
|                         |                              | отправки пакета хостом, а также временные метки получения и  |                              |
|                         |                              | передачи (обычно идентичные), указывающие время передачи     |                              |
|                         |                              | встречной стороной.    Мне не известно ни одной программы,   |                              |
|                         |                              | которая могла бы вычислять половинчатую задержку RTT для     |                              |
|                         |                              | временных меток ICMP, поэтому я сам  такую написал :         |                              |
|                         |                              | Однако здесь есть проблема, поскольку нет гарантии, что на   |                              |
|                         |                              | хосте, куда мы отправляем ICMP Timestamp Requests,           |                              |
|                         |                              | установлено точное время, откалиброванное в соответствии с   |                              |
|                         |                              | временем на машине отправки.    Для решения этой проблемы    |                              |
|                         |                              | требуется нечто аналогичное, но гарантирующее собственный    |                              |
|                         |                              | контроль точности времени.     Можно обеспечить, чтобы на    |                              |
|                         |                              | всех участвующих в мониторинге хостах были установлены       |                              |
|                         |                              | NTPd/Chrony. Опять же, здесь возникнет другой вопрос, а      |                              |
|                         |                              | именно «Как обеспечить, чтобы наш IP-путь к этим NTP-        |                              |
|                         |                              | серверам не подвергался той же асимметрии, которую мы хотим  |                              |
|                         |                              | измерить». NTP и Chrony не могут сами предотвратить          |                              |
|                         |                              | отклонение показателей из-за асимметрии задержки. В Chrony   |                              |
|                         |                              | есть опция “Estimation of asymmetric jitter”, но она не      |                              |
|                         |                              | сможет обнаружить систематическую асимметрию.    С целью     |                              |
|                         |                              | уменьшения джиттера можно выбрать сервера NTP с наименьшей   |                              |
|                         |                              | задержкой. Идея в том, что так асимметрии будет сложнее      |                              |
|                         |                              | оказать влияние на оценку времени.      Какие NTP-сервера    |                              |
|                         |                              | лучше?  Чтобы ответить на этот вопрос, я решил выполнить     |                              |
|                         |                              | тест на популярных и общедоступных серверах:     Google      |                              |
|                         |                              | Facebook   Cloudflare   Apple    Для тестирования я          |                              |
|                         |                              | использовал GPS-модуль uBlox 6M, который выступил в качестве |                              |
|                         |                              | генератора импульсов (PPS). Его я подключил к GPIO Raspberri |                              |
|                         |                              | Pi 4 для генерации прерываний, реализовав обработку          |                              |
|                         |                              | импульсов с помощью  LinuxPPS .    Можно предположить, что   |                              |
|                         |                              | PPS, генерируемый uBlox, практически идеален, поскольку      |                              |
|                         |                              | предоставляется GNSS (спутниковой системой навигации), то    |                              |
|                         |                              | есть является наиболее точным из легко доступных.            |                              |
|                         |                              | Производители uBox заявляют, что точность его импульса       |                              |
|                         |                              | составляет примерно ± 100нс.    Это позволяет нам            |                              |
|                         |                              | регистрировать момент возникновения импульса и сравнивать    |                              |
|                         |                              | его близость с системным временем нашего NTP-сервера:        |                              |
|                         |                              | Чем дальше оказываются временные метки от точной секунды,    |                              |
|                         |                              | тем менее точен NTP-источник (скорее всего из-за асимметрии  |                              |
|                         |                              | или других сетевых факторов).         По VDSL-линии,         |                              |
|                         |                              | предоставляемой оператором  IDNet  в Великобритании, видно,  |                              |
|                         |                              | что служба времени Cloudflare дает наименьшую ошибку в       |                              |
|                         |                              | сравнении с временем, откалиброванным по GNSS. Но здесь      |                              |
|                         |                              | нужно учесть еще один нюанс, а именно то, что в Cloudflare   |                              |
|                         |                              | маршрутизация NTP-траффика внутренней сети реализуется с     |                              |
|                         |                              | помощью  anycast , а в Apple для направления системы к       |                              |
|                         |                              | ближайшему кластеру используется DNS.    Хорошо в этом то,   |                              |
|                         |                              | что все кластеры Apple достижимы независимо (Сингапур, Сан-  |                              |
|                         |                              | Паулу, Гон-Конг, Сан-Хосе, Лос-Анжелес, Нью-Йорк, Майами,    |                              |
|                         |                              | Атланта, Сидней, Франкфурт, Лондон, Амстердам, Токио,        |                              |
|                         |                              | Стокгольм, Сеул, Тайбэй).    И поскольку это позволяет       |                              |
|                         |                              | гарантировать фиксированную привязку к NTP-кластеру, я решил |                              |
|                         |                              | использовать в качестве эталона серверы Apple несмотря на    |                              |
|                         |                              | то, что их отклонение по времени было больше (в моем тесте   |                              |
|                         |                              | для одной локации).     Кластеры Facebook и Google оказались |                              |
|                         |                              | несовместимы друг с другом из-за различий в реализации       |                              |
|                         |                              | «размазывания»  дополнительных секунд.      Таблицы времени  |                              |
|                         |                              | Синхронизировав часы, можно, наконец, переходить к основной  |                              |
|                         |                              | цели — «разделению пинга»! Сначала мы просто создаем на      |                              |
|                         |                              | обеих сторонах таблицы для регистрации временных меток и ID  |                              |
|                         |                              | пакетов.         Поскольку конечные точки этими таблицами    |                              |
|                         |                              | обмениваются, то мы знаем точное время прибытия пакета на    |                              |
|                         |                              | другой стороне. На основе этой информации можно              |                              |
|                         |                              | непосредственно определить направленную длительность         |                              |
|                         |                              | доставки пакета.    Помимо этого, также можно увидеть, какие |                              |
|                         |                              | пакеты были утеряны и при движении в каком направлении.      |                              |
|                         |                              | Вот ряд примеров:        Здесь я обнаружил «пиковые часы» с  |                              |
|                         |                              | максимальной задержкой/джиттером входящего сигнала в сетях   |                              |
|                         |                              | населенных пунктов Великобритании. Причина скорее всего в    |                              |
|                         |                              | том, что в это время люди наиболее активно используют сеть.  |                              |
|                         |                              | В дополнении к этому следующая строчка демонстрирует         |                              |
|                         |                              | достаточно высокую асимметрию задержки:      Здесь отправка  |                              |
|                         |                              | пакетов происходит на 10мс дольше, чем их получение.         |                              |
|                         |                              | Вероятно, это проявление определенной формы  чередования     |                              |
|                         |                              | DSL.     В еще одном эксперименте я настроил  между моей     |                              |
|                         |                              | квартирой и VM в Китае. Здесь видны печально известные       |                              |
|                         |                              | ежедневные пиковые потери пакетов:        Интересно          |                              |
|                         |                              | отметить, что основная потеря происходит при передаче из     |                              |
|                         |                              | Великобритании в Китай и лишь небольшой период потерь        |                              |
|                         |                              | приходится на обратное направление.    Поскольку этот        |                              |
|                         |                              | инструмент очень полезен для отладки сетевых задержек и для  |                              |
|                         |                              | определения возможности использования NTP с целью точного    |                              |
|                         |                              | хронометража, я оформил его в программу, которую назвал  :   |                              |
|                         |                              | https://github.com/benjojo/sping      Базово эта программа   |                              |
|                         |                              | может полагаться на системное время. Если же в среде         |                              |
|                         |                              | настройка времени невозможна (например, в контейнерах,       |                              |
|                         |                              | OpenVZ и т.д.), то она может выполнять собственную           |                              |
|                         |                              | калибровку в отношении NTP-серверов Apple, которые, как я    |                              |
|                         |                              | выяснил, размещены глобально наиболее согласованным образом. |                              |
|                         |                              | С целью повышения точности  также можно использовать с       |                              |
|                         |                              | устройством генерации PPS.  Для обмена данными пинга между   |                              |
|                         |                              | пирами программа использует UDP, а для обмена рукопожатиями  |                              |
|                         |                              | – TCP. В  IANA  для этого был назначен порт 6924.            |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |   О российском кино на МКС   | С осени 2020 года в СМИ стали появляться новости о           |            космос            |
|        t/547060/        |                              | российском фильме с рабочим названием "Вызов", который вдруг |             90-е             |
|                         |                              | решили снимать на МКС. Примеры заголовков: "«Роскосмос»      |                              |
|                         |                              | снимет первый художественный фильм на МКС", "«Роскосмос»     |                              |
|                         |                              | запустил конкурс на женскую роль для съемок фильма на МКС"   |                              |
|                         |                              | .  В 1983 году в СССР был снят фильм "Возвращение с орбиты", |                              |
|                         |                              | при создании которого применялись съёмки в космосе.  Поэтому |                              |
|                         |                              | эти новости особо не привлекали внимание т.к. ничего нового  |                              |
|                         |                              | в таком кино нет, а, например, актер  Владимир Стеклов       |                              |
|                         |                              | должен был лететь в 2000 году на орбитальную станцию "Мир"   |                              |
|                         |                              | для съемок российского фильма "Последнее путешествие". На    |                              |
|                         |                              | фильм планировалось потрать $200 млн. Стеклов успешно прошел |                              |
|                         |                              | годичное обучение по программе "космонавт исследователь" в   |                              |
|                         |                              | Центре подготовки космонавтов, но из-за прекращения          |                              |
|                         |                              | финансирования проекта в космос не полетел.  Я в принципе не |                              |
|                         |                              | против туристов, актеров на МКС, если это за их счет и       |                              |
|                         |                              | позволяют космическому агентству заработать, но вчера стали  |                              |
|                         |                              | известны подробности предстоящих съемок и это почему-то      |                              |
|                         |                              | снова выглядит как "приватизация прибыли, национализация     |                              |
|                         |                              | убытков"...   Начнем с цитирования новостей: 23 сентября     |                              |
|                         |                              | пресс-служба «Роскосмоса» сообщила  Роскосмос, Первый канал  |                              |
|                         |                              | и Yellow, Black and White снимут 1-й художественный фильм в  |                              |
|                         |                              | космосе : Госкорпорация «Роскосмос», Первый канал и студия   |                              |
|                         |                              | Yellow, Black and White впервые в истории создадут           |                              |
|                         |                              | художественный фильм в космосе под рабочим названием         |                              |
|                         |                              | «ВЫЗОВ». Режиссер картины — Клим Шипенко (фильмы «Салют-7»,  |                              |
|                         |                              | «Холоп»). Генеральными продюсерами масштабного кинопроекта   |                              |
|                         |                              | выступят Дмитрий Рогозин, Константин Эрнст, Сергей Титинков, |                              |
|                         |                              | Эдуард Илоян, Денис Жалинский, Виталий Шляппо и Алексей      |                              |
|                         |                              | Троцюк. Сюжет фильма предусматривает полет на Международную  |                              |
|                         |                              | космическую станцию, который запланирован  на осень 2021     |                              |
|                         |                              | года на российском транспортном пилотируемом корабле «Союз   |                              |
|                         |                              | МС» . В настоящий момент стороны обсуждают детали будущего   |                              |
|                         |                              | фильма — сценарий, технические возможности съемок и          |                              |
|                         |                              | актерский состав. Главный герой картины, который полетит на  |                              |
|                         |                              | МКС, и его дублер будут определены по результатам открытого  |                              |
|                         |                              | конкурса. Название фильма пока не утверждено. Данная картина |                              |
|                         |                              | будет способствовать популяризации космической деятельности  |                              |
|                         |                              | России и героизации профессии космонавта. Можно обратить     |                              |
|                         |                              | внимание  на акцент новости на  "1-й художественный фильм"   |                              |
|                         |                              | и вспомнить, что ранее компания SpaceX миллиардера Илона     |                              |
|                         |                              | Маска решила снять первый в мире боевик в космосе. В нем     |                              |
|                         |                              | снимется голливудский актер Том Круз. Т.е. если кто-то в     |                              |
|                         |                              | этом увидит попытку опередить SpaceX, то причины есть. Лично |                              |
|                         |                              | я обратил внимание на упоминание  Дмитрия Рогозина, как      |                              |
|                         |                              | генерального продюсера. Есть две больших разницы когда       |                              |
|                         |                              | человек выступает как частный инвестор и как человек,        |                              |
|                         |                              | который распоряжается чужими деньгами.  14 марта 2021 года   |                              |
|                         |                              | появляется новость  "Главкосмос: съёмки проекта на МКС не    |                              |
|                         |                              | будут финансировать из бюджета" : часть работ будет          |                              |
|                         |                              | профинансирована Главкосмосом, но за счет средств,           |                              |
|                         |                              | полученных от коммерческой деятельности. И сколько средств   |                              |
|                         |                              | будет потрачено нам не говорят. Сколько заработают на        |                              |
|                         |                              | фильме? Или это благотворительность?   Интересно, что до     |                              |
|                         |                              | новостей о "съемке кино на МКС" 2 августа 2020 года на сайте |                              |
|                         |                              | Роскосмоса  появилась такая новость : "В 2021 году с         |                              |
|                         |                              | космодрома Байконур также намечены запуски международных     |                              |
|                         |                              | экипажей. Так, согласно договору с компанией Space           |                              |
|                         |                              | Adventures, которая специализируется на космическом туризме, |                              |
|                         |                              | состоится запуск с участием двух туристов,  который          |                              |
|                         |                              | запланирован на конец 2021 года . Имена «космических         |                              |
|                         |                              | путешественников» будут озвучены в начале будущего года.     |                              |
|                         |                              | Также ведутся переговоры с еще рядом американских компаний   |                              |
|                         |                              | по отправке туристов на МКС". Не отходя далеко вспомним о    |                              |
|                         |                              | планируемых запусках на 2021 год: Союз МС-18 - 09.04, Союз   |                              |
|                         |                              | МС-19 - 5.04, Союз МС-20 - 8.12. Вчера ТАСС сообщил:  Срок   |                              |
|                         |                              | полета двух членов экипажа "Союза МС-18" увеличат Они        |                              |
|                         |                              | останутся на МКС дольше из-за съемок фильма "Вызов". Два     |                              |
|                         |                              | члена экипажа космического корабля "Союз МС-18" останутся на |                              |
|                         |                              | МКС дольше из-за съемок фильма "Вызов". Об этом сообщил      |                              |
|                         |                              | начальник Центра подготовки космонавтов имени Ю. А. Гагарина |                              |
|                         |                              | (ЦПК) Павел Власов. "Полет этого экипажа будет продленным",  |                              |
|                         |                              | - сказал Власов в эфире радио "Комсомольская правда". По     |                              |
|                         |                              | словам начальника ЦПК, командир экипажа Олег Новицкий в      |                              |
|                         |                              | октябре вернется на Землю на спускаемом аппарате корабля     |                              |
|                         |                              | "Союз МС-18" вместе с участниками полета "Союза МС-19"       |                              |
|                         |                              | (актриса и режиссер Клим Шипенко, которые будут              |                              |
|                         |                              | задействованы в съемках фильма на МКС). Два члена экипажа -  |                              |
|                         |                              | космонавт Петр Дубров и астронавт NASA Марк Ванде Хай -      |                              |
|                         |                              | останутся на орбите и вернутся на "Союзе МС-19". "Речь не    |                              |
|                         |                              | идет о годичном полете, пока еще программа полета не         |                              |
|                         |                              | утверждена. Какой-то продленный срок будет, безусловно", -   |                              |
|                         |                              | сказал Власов, уточнив, что в 2022 году первый пилотируемый  |                              |
|                         |                              | пуск будет "чуть-чуть раньше", чем в апреле. А теперь        |                              |
|                         |                              | понятным языком от  Игорь Лисов (Igor Lissov)  о сути        |                              |
|                         |                              | происходящего:  По случаю полета киносъемочной группы на МКС |                              |
|                         |                              | у меня было два вопроса. Вопрос номер раз: их ставят на      |                              |
|                         |                              | дополнительный, третий «Союз» или на штатный октябрьский,    |                              |
|                         |                              | вместо регулярной замены экипажа и корабля? В первом случае  |                              |
|                         |                              | вопрос номер два был бы: за чей счёт банкет? Во втором:      |                              |
|                         |                              | какого хера?! Ответ на первый вопрос сегодня получен:        |                              |
|                         |                              | актриса и режиссер/оператор летят на штатном корабле,        |                              |
|                         |                              | который вместе с ракетой оплачен из средств Федеральной      |                              |
|                         |                              | космической программы, и никак не компенсируют               |                              |
|                         |                              | соответствующие бюджетные расходы . Оплачена будет только их |                              |
|                         |                              | подготовка в ЦПК. Отсюда еще раз второй вопрос: какого       |                              |
|                         |                              | хера?! Почему в угоду частным интересам Первого канала из    |                              |
|                         |                              | экипажа  государственного  российского корабля выкидывают    |                              |
|                         |                              | двух профессиональных космонавтов, да еще  и за бесплатно ?  |                              |
|                         |                              | Не нужно ли Счетной палате посмотреть на это дело            |                              |
|                         |                              | повнимательнее? Может искусство стоит того? Что же нам       |                              |
|                         |                              | обещает российское кино: Режиссер фильмов «Текста» и         |                              |
|                         |                              | «Салют-7»; главную роль сыграет женщина, которую выберут по  |                              |
|                         |                              | итогам всероссийского открытого конкурса;  съемки драмы      |                              |
|                         |                              | пройдут на Международной космической станции. Почувствуйте   |                              |
|                         |                              | размах. И это всё. О сюжете ничего неизвестно, кроме         |                              |
|                         |                              | "женщина-космонавт отправится на орбитальную станцию". О     |                              |
|                         |                              | бюджете ничего неизвестно. Если вы еще не почувствовали      |                              |
|                         |                              | подвох, то продолжим фрагментом старой истории из            |                              |
|                         |                              | малоизвестного ЖЖ одного российского кинорежиссера: А теперь |                              |
|                         |                              | внимательно присмотритесь к тем проектам, что тут и там      |                              |
|                         |                              | возникают на разных сайтах новостей о кино. Дескать –        |                              |
|                         |                              | запускаемся с супер-пупером, актеры – все сплошь звезды,     |                              |
|                         |                              | музыка – вообще не наслушаешься, бюджет – Голливуд отдыхает. |                              |
|                         |                              | Вот вам наш трейлер, вот еще один, вот так мы снимали в      |                              |
|                         |                              | Праге, вот так – на Южном полюсе (почувствуйте размах и      |                              |
|                         |                              | качество!). Вот фотопробы актеров, а вот какой у нас чудный  |                              |
|                         |                              | пластический грим! Следите за новостями на нашем сайте! Ну,  |                              |
|                         |                              | неужели вы такое никогда не видели или ни о чем подобном не  |                              |
|                         |                              | слышали? Слышали-видели? Значит – сработало. Выдержав паузу, |                              |
|                         |                              | проплатив несколько статей в каких-то изданиях посерьезнее   |                              |
|                         |                              | Кинопоиска, Кино России или Фильмпро, продюсеры сих проектов |                              |
|                         |                              | идут к очень важным людям и просят денег на кино. Говорят,   |                              |
|                         |                              | что всё будет супер-пупер, актеры – все сплошь звезды,       |                              |
|                         |                              | музыка – вообще не наслушаешься, бюджет – Голливуд отдыхает. |                              |
|                         |                              | Показывают пробы, трейлеры, ролики. Особый шик – фильм о     |                              |
|                         |                              | фильме. Пускай еще и не снятом, зато уже видно –             |                              |
|                         |                              | блокбастере. Еще один козырь – 3D. Мало козырей? Добавим     |                              |
|                         |                              | мистики – неопубликованные записки известного писателя легли |                              |
|                         |                              | в основу нашего сценааааариииияяяяя… Важные люди чешут репу, |                              |
|                         |                              | спрашивают «сколько?». Продюсеры говорят 30% (цифра          |                              |
|                         |                              | условная). Важные люди чешут репу, считают, сколько          |                              |
|                         |                              | процентов из этих процентов они раздадут, а сколько          |                              |
|                         |                              | останется им, и говорят «по рукам». Издают приказы по своим  |                              |
|                         |                              | важным организациям или банкам, выдать кредит такому         |                              |
|                         |                              | чудесному и нужному проекту. Как понимаете, через годик      |                              |
|                         |                              | выясняется, что проекту не хватает денег, продюсеры вновь    |                              |
|                         |                              | идут к важным людям (чаще уже к другим, а старым твердят –   |                              |
|                         |                              | потерпите еще чуть-чуть), берут еще кредит. Через годик…   И |                              |
|                         |                              | снова вспомним фильм "Последнее путешествие" 2000 года: В    |                              |
|                         |                              | России решили снять свой вариант "Титаника" — дорогой и      |                              |
|                         |                              | зрелищный, только не на воде, а в космосе. На фильм          |                              |
|                         |                              | "Последнее путешествие" планируется потратить $200 млн,      |                              |
|                         |                              | столько же, сколько на "Титаник". Но режиссером будет не     |                              |
|                         |                              | Джеймс Камерон, а Юрий Кара, известный провальной            |                              |
|                         |                              | экранизацией романа "Мастер и Маргарита". Этот фильм до сих  |                              |
|                         |                              | пор лежит на полке, так как продюсеры единодушно признали    |                              |
|                         |                              | его никуда не годным. Но Кара проявил завидное упорство в    |                              |
|                         |                              | желании творить что-то грандиозное. Связываться с классиками |                              |
|                         |                              | он больше не захотел и взялся за научно-фантастический       |                              |
|                         |                              | сценарий никому не известного Александра Сорокина.           |                              |
|                         |                              | Сюжет будущего шедевра поражает даже в кратком пересказе     |                              |
|                         |                              | самого Юрия Кары: "Один русский врач-генетик выяснил (как    |                              |
|                         |                              | это случилось — пока секрет фильма), что инопланетяне        |                              |
|                         |                              | существуют. После этого главный герой сколотил               |                              |
|                         |                              | интернациональный космический экипаж и полетел в космос      |                              |
|                         |                              | навстречу инопланетным организмам. Им было сложно понять     |                              |
|                         |                              | друг друга, но потом у них все получилось". Эта история      |                              |
|                         |                              | должна быть разбавлена дорогостоящими кадрами из орбитальной |                              |
|                         |                              | жизни Стеклова. Костюмы, камеры и осветительную аппаратуру   |                              |
|                         |                              | уже отправили транспортным кораблем на "Мир". Да и "земные"  |                              |
|                         |                              | эпизоды планируется снимать как минимум в пяти-шести         |                              |
|                         |                              | странах. Совпадения случайны?  P.S.                          |                              |
|                         |                              | http://www.buran.ru/MH17/%D0%9C%D0%9A-12-03-2021.jpg Съемки  |                              |
|                         |                              | «рогозинского» кино на МКС поставили под угрозу российских   |                              |
|                         |                              | космонавтов Молодому члену экипажа придется «зависнуть» на   |                              |
|                         |                              | орбите на целый год Роскосмос готовится снять кино на МКС -  |                              |
|                         |                              | эта новость уже несколько месяцев будоражит общественность.  |                              |
|                         |                              | Но мало кто знает, какую цену может заплатить отрасль ради   |                              |
|                         |                              | этой затеи руководства. Перетасовке подверглись сразу два    |                              |
|                         |                              | российских экипажа, которые должны в этом году стартовать к  |                              |
|                         |                              | Международной космической станции. Кроме того, под большим   |                              |
|                         |                              | вопросом оказалась реализация стыковки Многофункционального  |                              |
|                         |                              | лабораторного модуля «Наука» (МЛМ), доставку которого на     |                              |
|                         |                              | орбиту глава Роскосмоса Дмитрий Рогозин пообещал президенту  |                              |
|                         |                              | Путину уже в мае этого года. Дело в том, что для успешной    |                              |
|                         |                              | интеграции МЛМ в состав нашего сегмента МКС нужны три        |                              |
|                         |                              | космонавта, а у нас, согласно спешно произведенным           |                              |
|                         |                              | изменениям в программе полета, к маю на борту МКС останется  |                              |
|                         |                              | всего два члена экипажа. Американцев можно понять. По словам |                              |
|                         |                              | эксперта в области космонавтики Вадима Лукашевича,           |                              |
|                         |                              | использовав за 15 лет космическую станцию по максимуму,      |                              |
|                         |                              | выжав из нее все что могли в научном и технологическом       |                              |
|                         |                              | плане, они могут теперь посвятить ценное время на орбите     |                              |
|                         |                              | искусству. Мы же пока далеки от завершения исследовательских |                              |
|                         |                              | программ на своем российском сегменте. Мы еще стыкуем к нему |                              |
|                         |                              | новые модули. На май, как рассказывал Рогозин Путину,        |                              |
|                         |                              | запланирован старт МЛМ, за ним в очереди стоят узловой       |                              |
|                         |                              | модуль «Причал» и научно-энергетический модуль. То есть      |                              |
|                         |                              | работы еще выше крыши, не до плясок, как говорится. Но...    |                              |
|                         |                              | Охота пуще неволи. Дмитрий Олегович назвал съемки в космосе  |                              |
|                         |                              | проектом по популяризации нашей космонавтики. Пообещал       |                              |
|                         |                              | отобранных кандидаток на полет зачислить в отряд             |                              |
|                         |                              | космонавтов, нарушив почти все отраслевые нормы и правила.   |                              |
|                         |                              | Вот как объяснили мне сложную перетасовку в отрасли. В       |                              |
|                         |                              | начале этого года руководители полета знали, кто когда летит |                              |
|                         |                              | и в каком составе. На смену работающим сейчас на станции     |                              |
|                         |                              | Сергею Рыжикову и Сергею Кудь-Сверчкову в апреле на корабле  |                              |
|                         |                              | «Союз МС-18» должны были стартовать на орбиту Олег Новицкий, |                              |
|                         |                              | Петр Дубров и Сергей Корсаков. Они же должны были встречать  |                              |
|                         |                              | и стыковать МЛМ, а дождавшись пересменки, в октябре          |                              |
|                         |                              | вернуться на Землю. Однако искусство нарушило этот стройный  |                              |
|                         |                              | график: в программу вклинился так называемый «экипаж         |                              |
|                         |                              | посещения» с кинокамерой. А это значит, что в октябре        |                              |
|                         |                              | никакой пересменки Дуброву и Корсакову ждать не стоит. Антон |                              |
|                         |                              | Шкаплеров (единственный из профессионалов) должен «привезти» |                              |
|                         |                              | актрису и режиссера, а через 10 дней «спустить» их на Землю  |                              |
|                         |                              | предстоит уже Олегу Новицкому. Поскольку ложементов в        |                              |
|                         |                              | корабле «Союз» всего три, Дуброву и Корсакову пришлось       |                              |
|                         |                              | морально перестраиваться не на 6-месячное, а на годовое      |                              |
|                         |                              | пребывание на орбите. Что у руководства Роскосмоса на уме,   |                              |
|                         |                              | непонятно, - говорят в отрасли. - Нам для стыковки МДМ       |                              |
|                         |                              | необходимы три космонавта на нашем сегменте - без третьего   |                              |
|                         |                              | осуществить шесть выходов в открытый космос будет, мягко     |                              |
|                         |                              | говоря, очень сложно. Некоторые в разговорах в связи с       |                              |
|                         |                              | нехваткой наших космонавтов уже не исключают версии отмены   |                              |
|                         |                              | запуска МЛМ. Стоило ли так усложнять работу российской       |                              |
|                         |                              | космической отрасли? За что мы больше ратуем - за успехи     |                              |
|                         |                              | нашей профессиональной космонавтики или развлекательной      |                              |
|                         |                              | сферы? И самое главное - кто заплатит за «банкет», то есть   |                              |
|                         |                              | полет непрофессиональной группы стоимостью около 5,5         |                              |
|                         |                              | миллиарда рублей, а также срыв ранее запланированных         |                              |
|                         |                              | мероприятий на МКС? По первоначальным данным, часть суммы    |                              |
|                         |                              | должна была покрыть компания «Главкосмос», остальное         |                              |
|                         |                              | финансирование должно было осуществиться в рамках ФКП на     |                              |
|                         |                              | 2016-2025 годы. В январе, когда об этом узнал зампред        |                              |
|                         |                              | правительства (он же куратор Роскосмоса) Юрий Борисов, он    |                              |
|                         |                              | сделал жесткое заявление, что не допустит съемок фильма за   |                              |
|                         |                              | счет средств, выделяемых на развитие отрасли. Однако после   |                              |
|                         |                              | этого Рогозин, видимо, заручился более высокой поддержкой.   |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |   Ретро-компьютер 2000. В    | Заимев себе два ретро-компьютера ( ноутбук на Pentium-120  и |       ретрокомпьютинг        |
|        t/547078/        |  поисках лучшего Pentium 3.  | 486DX2-66 с VLB-шиной ), решил собрать третий, чтобы закрыть |           ретро пк           |
|                         |         Часть первая         | все интересующие меня периоды.    Хотелось что-то времён     |        ретрокомпьютер        |
|                         |                              | Windows 98 и начала эпохи Windows XP. Для себя я решил       |                              |
|                         |                              | использовать термин «Ретро-компьютер 2000» — просто дата     |                              |
|                         |                              | красивая. Как и многие, я сперва решил собрать систему на    |                              |
|                         |                              | Tualatin-1400 — как последнем и самом быстром Pentium3.      |                              |
|                         |                              | Сперва думал собирать с упором на компактность, даже добыл   |                              |
|                         |                              | Dell'овский десктоп под это дело. Но в процессе захотелось   |                              |
|                         |                              | иметь ещё и ISA для того, чтобы была возможность поставить   |                              |
|                         |                              | какую-нибудь старенькую звуковушку. Или вообще любое         |                              |
|                         |                              | ISA'шное оборудование. Это несколько поменяло концепцию, 815 |                              |
|                         |                              | чипсет перестал устраивать. Выбирать надо было между 440BX и |                              |
|                         |                              | Via Apollo Pro. Первый мне не хотелось из-за потенциальной   |                              |
|                         |                              | нестабильности на 133 шине, второй же отличался повышенной   |                              |
|                         |                              | глючностью. Но зато на нём была шина ISA. В итоге стал       |                              |
|                         |                              | искать материнку на ApolloPro с поддержкой туалатинов.       |                              |
|                         |                              | При очередном просмотре барахолок я увидел материнскую плату |                              |
|                         |                              | Gigabyte 7IXE4 под Socket A. Это была материнка первого      |                              |
|                         |                              | компьютера, который я собрал полностью сам — на свои деньги  |                              |
|                         |                              | и из того, что мне хотелось, а не из того, что подвернулось  |                              |
|                         |                              | под руку. Соответственно, концепция изменилась ещё раз —     |                              |
|                         |                              | нафиг этот Pentium3, если можно собрать компьютер на         |                              |
|                         |                              | Athlon'e? Потому что ретро-компьютеры — они всё же в первую  |                              |
|                         |                              | очередь не про производительность, а про эмоциональный       |                              |
|                         |                              | отклик.     В итоге решил собрать компьютер на базе Gigabyte |                              |
|                         |                              | 7IXE4 с процессором Athlon Thunderbird. После сборки мне     |                              |
|                         |                              | стало интересно, лучше он или хуже, чем Pentium 3            |                              |
|                         |                              | Tualatin-1400S. Ну и для кучи решил проверить ещё парочку    |                              |
|                         |                              | актуальных конфигураций того же времени — Ahtlon XP 1700+    |                              |
|                         |                              | (который работал почти на той же частоте, что и P3 — 1466) и |                              |
|                         |                              | Pentium 4 Northwood, который вышел одновременно с Tualatin   |                              |
|                         |                              | 1400. Ну и разобраться, кто тут лучший Pentium 3.            |                              |
|                         |                              | Сперва опишу основного «претендента» — учитывая то, что это  |                              |
|                         |                              | относительный «компьютер мечты», про него можно сказать      |                              |
|                         |                              | много, пройдясь по всем комплектующим. Потом опишу           |                              |
|                         |                              | конкурентов, а потом уже погоняю разные тесты.               |                              |
|                         |                              | Материнская плата    Начну с платы, раз уж она сподвигла     |                              |
|                         |                              | меня отказаться от P3. Gigabyte 7IXE4 — это плата под        |                              |
|                         |                              | SocketA на чипсете AMD 750 Irongate — примерном аналоге      |                              |
|                         |                              | интеловского 440BX. Синхронный, частота шины 100MHz, AGP 2x  |                              |
|                         |                              | (только 3.3В), память PC100, UDMA66. Когда я покупал эту     |                              |
|                         |                              | материнку где-то в первой половине 2001 года, она уже была   |                              |
|                         |                              | на грани устаревания. В VIA KT133 были AGP 4x, поддержка до  |                              |
|                         |                              | 1.5 гигабайт оперативки, встроенный звук. Но, как уже        |                              |
|                         |                              | сказал, за чипсетами VIA тянулась слава глюкодрома, плюс я   |                              |
|                         |                              | был бедный студент, потому был стеснён финансово и           |                              |
|                         |                              | сэкономить десятку-другую баксов было всегда приятно, а      |                              |
|                         |                              | платы на AMD750 стоили подешевле. С тех пор экономия на      |                              |
|                         |                              | материнках мне не раз аукалась, но это уже другая история.   |                              |
|                         |                              | Достоинства 7IXE4 для ретро-компьютера:       Абсолютно      |                              |
|                         |                              | дубовая и стабильная. Я вообще не помню, чтобы у меня были с |                              |
|                         |                              | ней какие-то проблемы.   Целых 2 ISA.    Недостатки:         |                              |
|                         |                              | Трёхвольтовый AGP. Нельзя устанавливать последние            |                              |
|                         |                              | видеокарты, которым нужно 1.5В.   Максимальный объём памяти  |                              |
|                         |                              | — 768 мегабайт.    Частота шины в 100 мегагерц и поддержка   |                              |
|                         |                              | процессоров только до Athlon Thuderbird. AthlonXP и          |                              |
|                         |                              | соответствующие Duron'ы полноценно тут работать не будут.    |                              |
|                         |                              | Первый недостаток в интересующем меня временном промежутке и |                              |
|                         |                              | не недостаток вовсе. Чистые 1.5В платы появились сильно      |                              |
|                         |                              | ощутимо позже. Но если собирать максимально универсальную    |                              |
|                         |                              | систему, то и AGP надо брать «универсальный».    Второе в    |                              |
|                         |                              | актуальное время особой проблемой не было, но сегодня если   |                              |
|                         |                              | пытаться запускать Windows XP SP3, то памяти будет не        |                              |
|                         |                              | хватать. С другой стороны, в 815 чипсет можно вообще только  |                              |
|                         |                              | 512 мегабайт поставить, а BX, хоть и поддерживает до         |                              |
|                         |                              | гигабайта, очень капризен к памяти и набрать этот гигабайт   |                              |
|                         |                              | может быть довольно сложно. Потому, если всерьёз хочется     |                              |
|                         |                              | иметь на s370 или SocketA побольше памяти, то надо смотреть  |                              |
|                         |                              | на VIA'шные чипсеты.  Третье может быть проблемой при        |                              |
|                         |                              | запуске игр и программ, требующих SSE. Хотя, по слухам, были |                              |
|                         |                              | патчи биоса, которые добавляли поддержку процессоров с SSE,  |                              |
|                         |                              | на досуге я хочу в эту сторону посмотреть.      Процессор    |                              |
|                         |                              | В то время у меня на этой материнке стоял AMD Duron          |                              |
|                         |                              | (покупалась она с Duron 700, но в конце «жизни» стоял уже    |                              |
|                         |                              | 1200).    Топовый Athlon Thunderbird был 1400MHz, но топовые |                              |
|                         |                              | ретро-процессоры в наше время редки и дороги, потому обычно  |                              |
|                         |                              | гораздо проще и дешевле взять предтоповый, что я и сделал.   |                              |
|                         |                              | Athlon Thunderbird 1300B. Базовая частота 100MHz, множитель  |                              |
|                         |                              | 13, размер кэша 2 уровня — 256 килобайт, напряжение 1.75В,   |                              |
|                         |                              | TDP 70W.         Недостатки:       Нет поддержки SSE. Только |                              |
|                         |                              | MMX и 3D Now! В актуальное время было не особо важно, но     |                              |
|                         |                              | сейчас даже браузер без SSE не запустить.   Большое          |                              |
|                         |                              | энергопотребление, причём по линии 5В. Современные блоки     |                              |
|                         |                              | питания по 5В максимум 20А выдают, а то и меньше — вне       |                              |
|                         |                              | зависимости от мощности. То есть получается где-то 100 ватт  |                              |
|                         |                              | (в идеале, КПД никто не отменял), из которых около 70        |                              |
|                         |                              | отберёт процессор, а на всё остальное останутся копейки.     |                              |
|                         |                              | Вопрос решается древним БП, где бывало 30-35А по пяти        |                              |
|                         |                              | вольтам.    Как выше написал, я хочу поковырять биос на      |                              |
|                         |                              | предмет поддержки более новых процессоров, может быть        |                              |
|                         |                              | получится воткнуть что-то менее жрущее и имеющее SSE. Смотрю |                              |
|                         |                              | на Duron Applebred.     Оперативная память    В итоге,       |                              |
|                         |                              | конечно, я поставлю сюда 3*256MB PC133 SDRAM, но пока что на |                              |
|                         |                              | время тестов будет стоять 512 — чтобы везде было одинаково.  |                              |
|                         |                              | Видеокарта    «Базовой» видеокартой я решил всё же взять     |                              |
|                         |                              | Geforce4 4200. Хотя под настроение могу ставить Geforce3,    |                              |
|                         |                              | Voodoo4 или вообще Matrox G400. Хотя, конечно, надо бы для   |                              |
|                         |                              | коллекции добыть что-то типа Radeon 8500. Radeon 9200 у меня |                              |
|                         |                              | есть, но это несколько не то.         Звуковая карта         |                              |
|                         |                              | Звуковую карту тоже можно менять под настроение, но основной |                              |
|                         |                              | я назначил Audigy 2 Platinum — с панелькой в пятидюймовый    |                              |
|                         |                              | отсек.         А на подхвате оставлены Diamond Monster Sound |                              |
|                         |                              | MX300 для A3D, Yamaha 754 для ностальгии и XG-Midi и AWE64 в |                              |
|                         |                              | качестве ISA'шной платы.         Жесткий диск    В плане     |                              |
|                         |                              | носителей информации я, в первую очередь, исхожу из          |                              |
|                         |                              | удобства, а не из аутентичности. Шум древних жестких дисков  |                              |
|                         |                              | мне совершенно не нравится, потому поставил SSD через        |                              |
|                         |                              | переходник IDE-SATA. Объём лучше всего было бы в районе      |                              |
|                         |                              | 60-80, но мельче 120 у меня под рукой ничего не оказалось.   |                              |
|                         |                              | Оптический привод  Тут хотелось что-то внешне интересное.    |                              |
|                         |                              | Перебирал разные варианты и в итоге остановился на Philips   |                              |
|                         |                              | DVDR1640. У него довольно нестандартная лицевая панель, плюс |                              |
|                         |                              | интересная индикация активности. Он на пару лет моложе всего |                              |
|                         |                              | остального.       Корпус    Если уж ностальгировать по       |                              |
|                         |                              | полной, то и корпус тоже хотелось тот самый — Inwin A500.    |                              |
|                         |                              | Как ни странно, он ещё довольно популярен. Со стороны —      |                              |
|                         |                              | обычный ATX с вертикальным расположением БП. Но с одной      |                              |
|                         |                              | особенностью — выдвижной лоток для материнской платы, на     |                              |
|                         |                              | котором можно собрать всю систему, а затем воткнуть в корпус |                              |
|                         |                              | и подключить кабеля.             Конечно, более современные  |                              |
|                         |                              | корпуса с горизонтальным БП, не закрывающим материнку,       |                              |
|                         |                              | удобны и без такого лотка. Но в те времена такое решение     |                              |
|                         |                              | казалось лучше снимания блока питания для доступа к          |                              |
|                         |                              | процессору. Хотя тут конструкция корпуса и не позволит до    |                              |
|                         |                              | процессора добраться даже при снятом БП.    В целом, решение |                              |
|                         |                              | интересное, но практичность оказалась меньше, чем казалось   |                              |
|                         |                              | изначально. Потому в своё время я без неприятных эмоций      |                              |
|                         |                              | переехал в Linkworld'овский корпус с БП над материнкой.      |                              |
|                         |                              | Пусть он был более картонный, зато копаться было удобнее, не |                              |
|                         |                              | приходилось кабеля лишний раз выдёргивать. Но блок питания,  |                              |
|                         |                              | конечно, переставил из inwin'a. Потом уже купил Chieftec     |                              |
|                         |                              | Dragon — там была и нормальная сталь, и удобные              |                              |
|                         |                              | внутренности. А компьютер в A500 у меня ещё какое-то время   |                              |
|                         |                              | домашним сервером работал.     Остальное    Дисковод — не    |                              |
|                         |                              | то, чтобы нужен, но в то время ещё был обязателен.           |                              |
|                         |                              | Контроллер USB2 — это и дополнительные порты, и уже более-   |                              |
|                         |                              | менее пристойная скорость передачи данных относительно USB1. |                              |
|                         |                              | Сетевая плата — вечный realtek. Они просто работают. Ну или  |                              |
|                         |                              | не работают. Хотя может попробую 3com 905, если заведётся.   |                              |
|                         |                              | На этом пока всё. В следующей части кратко распишу другие    |                              |
|                         |                              | тестируемые платформы, благо там меняться будут только       |                              |
|                         |                              | процессоры да материнские платы. А в третьей части прогоню   |                              |
|                         |                              | несколько тестов и попытаюсь оценить все варианты как с      |                              |
|                         |                              | точки зрения ретро, так и с точки зрения «того времени».     |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------++-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
|         page_url        |         page_header          | page_text                                                    |          page_tags           |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+
| https://habr.com/ru/pos |  Самый полный список метрик  | За пятнадцать лет работы в тестировании я наблюдаю, как      |     метрики тестирования     |
|        t/546562/        |   тестирования на русском    | отрасль из простой и незрелой, ориентированной на начинающих |      аудит QA процессов      |
|                         |            языке             | айтишников, становится профессиональным направлением. Раньше |   оптимизация QA-процессов   |
|                         |                              | тест-менеджер должен был распределять задачи между           |  список метрик тестирования  |
|                         |                              | тестировщиками и следить, чтобы они тестировали разные       |        Наталья Руколь        |
|                         |                              | области, не повторяя одно и то же - такая вот                |     Лаборатория качества     |
|                         |                              | “высокоинтеллектуальная управленческая задача”. Со временем  |     управление проектом      |
|                         |                              | в тестировании появилась узкая специализация, и теперь       |         тестирования         |
|                         |                              | тестировщики решают разные задачи. Кто-то занимается тест-   |   курсы для тестировщиков    |
|                         |                              | анализами и тест-дизайном, кто-то автоматизирует тесты, кто- |    курсы тест-менеджеров     |
|                         |                              | то проводит ручное тестирование как по готовым скриптам, так |    обучение тестированию     |
|                         |                              | и в свободном поиске, используя множество инструментов       |                              |
|                         |                              | исследовательского тестирования. Соответственно, роль тест-  |                              |
|                         |                              | менеджера также поменялась. Теперь он не просто распределяет |                              |
|                         |                              | задачи, а организует процесс, выделяет необходимые задачи    |                              |
|                         |                              | для решения, объединяет людей с абсолютно разной             |                              |
|                         |                              | квалификацией и целями, чтобы на выходе получить прекрасный  |                              |
|                         |                              | результат. И тут, внимание, вопрос: а что же такое           |                              |
|                         |                              | прекрасный результат в тестировании?  Ключевой парадокс      |                              |
|                         |                              | тестирования за эти годы так и остался нерешенным: как       |                              |
|                         |                              | оценить результаты процесса, который не производит           |                              |
|                         |                              | конкретный, ожидаемый заказчиком продукт? Никому не нужны    |                              |
|                         |                              | баг-репорты и тест-кейсы, всем нужен только качественный     |                              |
|                         |                              | софт, да ещё и выпущенный вовремя. Как в таких условиях      |                              |
|                         |                              | показать ценность работы QA-команды? Здесь нам на помощь     |                              |
|                         |                              | приходят метрики, и на текущий момент наверное уже в каждом  |                              |
|                         |                              | проекте по разработке софта собираются какие-то измеримые    |                              |
|                         |                              | показатели тестирования. Тест-менеджеры понимают, что какие- |                              |
|                         |                              | то метрики им надо внедрить, это в тренде, и начинают        |                              |
|                         |                              | искать, что бы им такого померять на проекте? Статьи,        |                              |
|                         |                              | форумы, доклады на конференциях пестрят конкретными          |                              |
|                         |                              | примерами метрик, которые начинающие тест-менеджеры спешат   |                              |
|                         |                              | посчитать на своих проектах. Но так не работает!  Никакие    |                              |
|                         |                              | метрики не являются универсальными – напротив, это лишь      |                              |
|                         |                              | инструмент, который помогает вам в решении определенных      |                              |
|                         |                              | задач. Вы сначала определяете, что вам нужно, а уже потом    |                              |
|                         |                              | ищете способы это померить, но не наоборот! Никто не         |                              |
|                         |                              | покупает молоток, чтобы потом ходить и думать, какой бы      |                              |
|                         |                              | гвоздь им забить. проверить сталкиваясь с задачей “повесить  |                              |
|                         |                              | на стену картину” мы думаем, что нам для этого нужно, и      |                              |
|                         |                              | только после этого идём в магазин за нужным гвоздём и        |                              |
|                         |                              | подходящим молотком. Вот и с метриками в тестировании то же  |                              |
|                         |                              | самое: сначала мы определяем цели, и только потом думаем,    |                              |
|                         |                              | какие метрики могут нам помочь в их достижении (и могут ли). |                              |
|                         |                              | Для чего нужны метрики? 1. Оценка прогресса.  Если перед     |                              |
|                         |                              | нами стоит какая-то задача, которую невозможно выполнить     |                              |
|                         |                              | “здесь и сейчас”, нам нужен инструмент оценки, чтобы понять, |                              |
|                         |                              | ведут ли наши действия к ожидаемому результату? Допустим,    |                              |
|                         |                              | вам повезло, и выдумыванием целей заниматься не нужно.       |                              |
|                         |                              | Руководитель проекта ставит задачу: “надо проводить          |                              |
|                         |                              | тестирование сборки не более, чем за 3 дня, чтобы мы могли   |                              |
|                         |                              | своевременно выдавать новые версии заказчику”. Вы считаете   |                              |
|                         |                              | текущее положение дел - сборка тестируется 6 дней. Что       |                              |
|                         |                              | делать? Оптимизация тестовых наборов, автотесты, расширение  |                              |
|                         |                              | штата, аутсорс… Разобрав все возможные решения в команде, вы |                              |
|                         |                              | выбираете путь тотальной автоматизации, и усиленно работаете |                              |
|                         |                              | в этом направлении. Через полгода приходит раздосадованный   |                              |
|                         |                              | РМ, машет руками и кричит “Что за фигня?!”. Вы смотрите,     |                              |
|                         |                              | сколько в среднем уходило последние релизы на тестирование - |                              |
|                         |                              | 8 дней. Как так??  За усиленной работой над автотестами вы   |                              |
|                         |                              | даже не заметили, что разбор ложных срабатываний и поддержка |                              |
|                         |                              | нестабильных автотестов оказались более ресурсозатратными,   |                              |
|                         |                              | чем использовавшееся ранее ручное тестирование. В чём        |                              |
|                         |                              | проблема этого примера? Можно ругать автотесты,              |                              |
|                         |                              | неподдерживаемые локаторы или квалификацию тестировщиков.    |                              |
|                         |                              | Но, по-хорошему, единственная серьёзная проблема - то, что   |                              |
|                         |                              | вы, как тест-менеджер, не следили за столь важным            |                              |
|                         |                              | показателем. Если бы вы выписали цель “тестируем за 4 дня!”  |                              |
|                         |                              | над дверью в кабинет, настроили автоматический расчёт и      |                              |
|                         |                              | каждый релиз получали нотификации по отклонениям, вы бы уже  |                              |
|                         |                              | неоднократно задумались об отклонениях и провели бы          |                              |
|                         |                              | переоценку выбранного подхода.  2. Промежуточные замеры .    |                              |
|                         |                              | Есть метрики, показывающие финальный результат, а есть       |                              |
|                         |                              | процессные, благодаря которым еще до релиза продукта и до    |                              |
|                         |                              | выдачи отчета руководству мы можем определить, движемся ли   |                              |
|                         |                              | мы в нужном направлении и что еще нам нужно улучшать.        |                              |
|                         |                              | Начнём наш пример опять с готовой цели: высокие оценки       |                              |
|                         |                              | пользователей в аппсторе. Сейчас у нас в среднем 3.7, а      |                              |
|                         |                              | руководство требует 4.5. Простые измеримые показатели,       |                              |
|                         |                              | считать просто, над дверью повесить - не проблема… Но        |                              |
|                         |                              | зависит ли от нас напрямую этот показатель? И как мы будем   |                              |
|                         |                              | его улучшать сегодня и завтра, если ближайший большой релиз  |                              |
|                         |                              | только через полгода? В таком случае мы ищем косвенные       |                              |
|                         |                              | процессные метрики, которые будут вести нас к повышению      |                              |
|                         |                              | оценок. Читаем отзывы и выясняем, за что снижены оценки.     |                              |
|                         |                              | Находим три лидера по упоминаниям среди жалоб: падения на    |                              |
|                         |                              | нестандартных окружениях, медленная скорость работы,         |                              |
|                         |                              | нехватка запрошенных фич. Отлично, с этим уже значительно    |                              |
|                         |                              | понятнее, как работать, чем с абстрактной оценкой            |                              |
|                         |                              | нравится/не нравится! Мы можем выбрать метрики, которые      |                              |
|                         |                              | помогут нам оценить свою работу (покрытие тестами на разных  |                              |
|                         |                              | окружениях, проведение тестов производительности), так и     |                              |
|                         |                              | общепроектные метрики: скорость работы и готовность          |                              |
|                         |                              | запрошенных фич. Таким образом мы поможем и самим себе,      |                              |
|                         |                              | чётко отслеживая рост требуемого тестового покрытия, и       |                              |
|                         |                              | другим участникам команды, сразу показав, чего не хватает    |                              |
|                         |                              | для релиза. До выпуска полгода, а поднять число тестовых     |                              |
|                         |                              | окружений на 6% я уже могу сегодня! 3. Поиск проблем.        |                              |
|                         |                              | Третий случай, когда мы используем метрики, – это проведение |                              |
|                         |                              | аудита и поиск слабых мест. Тут бывают два стандартных       |                              |
|                         |                              | сценария: либо мы ищем проблему, которую пока не можем       |                              |
|                         |                              | осознать, либо ищем корни и первопричины у известных         |                              |
|                         |                              | проблем.  Первый случай - когда в вашей компании кто-то      |                              |
|                         |                              | недоволен тестированием, но не может высказать это вслух,    |                              |
|                         |                              | или не может сформулировать, чего же он хочет-то. Есть       |                              |
|                         |                              | какие-то недомолвки, неудовлетворенности, но понять, что     |                              |
|                         |                              | именно не устраивает других участников команды, не           |                              |
|                         |                              | представляется возможным. Возникает вопрос: что же именно у  |                              |
|                         |                              | нас не так? В этом случае мы начинаем искать подходящие      |                              |
|                         |                              | метрики, которые помогут нам сначала выявить проблему, а     |                              |
|                         |                              | потом уже поработать над ней. “Что-то не так” постепенно     |                              |
|                         |                              | вырисовывается в “пропуски критичных дефектов на прод более  |                              |
|                         |                              | 20%” или “невозможность принимать нужные решения по релизу   |                              |
|                         |                              | без оценки показателей качества”. Второй сценарий - мой      |                              |
|                         |                              | любимый и самый часто используемый. Например, на вашу        |                              |
|                         |                              | команду поступают жалобы о том, что дефекты заводятся        |                              |
|                         |                              | слишком поздно. В чем может быть причина? Вы можете          |                              |
|                         |                              | попытаться субъективно разобраться в первоисточнике          |                              |
|                         |                              | проблемы, а можете использовать метрики, выявляя причины     |                              |
|                         |                              | несвоевременного обнаружения дефектов. Посоветовавшись с     |                              |
|                         |                              | коллегами, выписываем все возможные причины поздних          |                              |
|                         |                              | обнаружений: нехватка ресурсов, непродуманный и неполный     |                              |
|                         |                              | тест-дизайн, ложные срабатывания автотестов или              |                              |
|                         |                              | неэффективное распределение ресурсов тестирования. Определив |                              |
|                         |                              | список возможных первопричин, по каждому запоздало           |                              |
|                         |                              | найденному багу вы проставляете причины задержек в этом      |                              |
|                         |                              | конкретном случае. И вот, через месяц такой диагностической  |                              |
|                         |                              | работы выясняется, что тесты на большинство пропущенных      |                              |
|                         |                              | дефектов у вас есть, но выполняются они слишком поздно. Я    |                              |
|                         |                              | несколько раз сталкивалась с такой ситуацией, выглядит она   |                              |
|                         |                              | настолько нелогично, что заметить её без метрик почти        |                              |
|                         |                              | невозможно, а исправить тщательной приоритизацией тестов     |                              |
|                         |                              | можно очень быстро! Пара дней усиленной совместной работы    |                              |
|                         |                              | тест-дизайнера и бизнес-аналитика и вуаля, критичные дефекты |                              |
|                         |                              | начинают обнаруживаться в самом начале тестирования!         |                              |
|                         |                              | 4.Числовые обоснования . Ну, и последняя цель, которую мы    |                              |
|                         |                              | можем преследовать при внедрении метрик, – это презентация и |                              |
|                         |                              | иллюстрация руководству. Через метрики мы можем              |                              |
|                         |                              | конструктивно и наглядно обосновать то, что почти невозможно |                              |
|                         |                              | донести на уровне простого общения: потребность в ресурсах,  |                              |
|                         |                              | проблемы в разработке, влияние недостающих требований на     |                              |
|                         |                              | общий процесс разработки и т.д.  Допустим, вы приходите к    |                              |
|                         |                              | руководству со стандартным списком жалоб: ресурсов не        |                              |
|                         |                              | хватает, времени слишком мало, требований нет, код отстой.   |                              |
|                         |                              | Скажите ему это, и он будет отмахиваться от вас всеми        |                              |
|                         |                              | доступными способами.  Хотите получить результат вместо      |                              |
|                         |                              | отмашек? Придите с метриками. Покажите, что экономия         |                              |
|                         |                              | ресурсов тестирования в 2000$ обходится проекту в 9000$ на   |                              |
|                         |                              | штрафах по договору. Проиллюстрируйте, как экономия недели в |                              |
|                         |                              | начале релиза на написание требований ведёт к задержке       |                              |
|                         |                              | релиза в три недели из-за разного понимания ожиданий. Такая  |                              |
|                         |                              | беседа всегда будет конструктивнее и результативнее пустой   |                              |
|                         |                              | болтовни, не подтверждённой измеримыми показателями!         |                              |
|                         |                              | Метрики: как выбрать и внедрить Если по написанному выше ещё |                              |
|                         |                              | не стало понятно, что циферки ради циферок не нужны,         |                              |
|                         |                              | придётся повториться: никогда не пытайтесь внедрить какую-то |                              |
|                         |                              | метрику просто потому, что она вам кажется логичной или      |                              |
|                         |                              | полезной. Всегда идите от задачи, например: Согласуйте       |                              |
|                         |                              | ожидания руководства, зафиксируйте, а потом уже думайте:     |                              |
|                         |                              | какими показателями можно оценить именно эту цель? Вы хотите |                              |
|                         |                              | что-то улучшить в своей работе. Что именно? Определившись,   |                              |
|                         |                              | какой результат вы хотите достигнуть, подумайте о его        |                              |
|                         |                              | измерении: 2.1. Как оценивать прогресс в достижении этого    |                              |
|                         |                              | показателя? 2.2. Как измерять достижения на уровне процесса, |                              |
|                         |                              | пока ключевой показатель, возможно, не меняется? Вы хотите   |                              |
|                         |                              | решить какую-то проблему, непосредственно в команде          |                              |
|                         |                              | тестирования или на проекте в целом.  3.1. Как оценивать эту |                              |
|                         |                              | проблему, в чём её можно измерить? 3.2. Какие могут быть     |                              |
|                         |                              | предпосылки для этой проблемы, очевидные или кажущиеся       |                              |
|                         |                              | совсем нелогичными? 3.3. Как можно обнаружить корень этой    |                              |
|                         |                              | проблемы, или “узкое горлышко”? Вам надо обосновать что-то   |                              |
|                         |                              | своему руководству, и вы исчерпали аргументы: 4.1. как       |                              |
|                         |                              | проиллюстрировать наличие проблемы? 4.2. как показать пользу |                              |
|                         |                              | от предлагаемого вами решения? Максимально осознанно         |                              |
|                         |                              | пройдитесь по этому списку вопросов. Подключите коллег через |                              |
|                         |                              | совместный брейншторм или опросы. Определите, что вы хотите  |                              |
|                         |                              | измерять, не доходя до уровня конкретных чисел и метрик.     |                              |
|                         |                              | Сначала вам нужны обобщённые названия метрик, например:      |                              |
|                         |                              | срывы сроков (для обработки жалобы от РМа) причины срыва     |                              |
|                         |                              | сроков (чтобы найти решения проблеме) низкое качество        |                              |
|                         |                              | тестирования (для решения жалоб от техподдержки) низкое      |                              |
|                         |                              | качество кода (чтобы конструктивно пожаловаться руководителю |                              |
|                         |                              | разработки) отчётность для РМа по качеству продукта (по      |                              |
|                         |                              | которой он сможет принимать взвешенные решения) и т.д.       |                              |
|                         |                              | Только когда у вас появится список неуточнённых метрик, вы   |                              |
|                         |                              | можете задуматься, как их измерять. Сначала - цели, потом -  |                              |
|                         |                              | инструменты! Примеры метрик в тестировании с описанием       |                              |
|                         |                              | вариантов их использования В рамках курса  «Аудит и          |                              |
|                         |                              | оптимизация QA-процессов»  мы с Олегом Грабко помогаем       |                              |
|                         |                              | ученикам выявлять те метрики, которые будут им максимально   |                              |
|                         |                              | полезны в конкретных ситуациях. Из тех более трехсот метрик, |                              |
|                         |                              | которые мы когда-либо использовали, мы выбрали 94, наиболее  |                              |
|                         |                              | наглядно иллюстрирующих возможности этих инструментов и      |                              |
|                         |                              | приложили их в качестве дополнительного материала к уроку    |                              |
|                         |                              | №3. Я очень надеюсь, что изложенной выше статьи достаточно   |                              |
|                         |                              | для того, чтобы вы смогли внедрить нужные вам показатели с   |                              |
|                         |                              | пользой и существенно улучшить с ними свой процесс           |                              |
|                         |                              | тестирования. Внимание! Пожалуйста, сначала проведите работу |                              |
|                         |                              | по анализу ваших потребностей в измерении, алгоритм которой  |                              |
|                         |                              | я привела выше,  и только после этого  ознакомьтесь с        |                              |
|                         |                              | примерами метрик.   Скорее всего в этих примерах вы найдёте  |                              |
|                         |                              | такие показатели, которые помогут в решении стоящих перед    |                              |
|                         |                              | вами задач. Но что делать, если необходимость в метрике вы   |                              |
|                         |                              | выявили, но подходящего варианта для её расчёта не нашли?    |                              |
|                         |                              | Пишите нам!  Обещаем по каждому запросу на вариант внедрения |                              |
|                         |                              | метрики подготовить такой способ расчёта и визуализации,     |                              |
|                         |                              | который получится внедрить в ваши условия. Таким образом,    |                              |
|                         |                              | постепенно мы сделаем этот документ ещё более полным и       |                              |
|                         |                              | полезным для всей отрасли. Всем качественных продуктов,      |                              |
|                         |                              | растущих показателей и зрелых процессов!                     |                              |
+-------------------------+------------------------------+--------------------------------------------------------------+------------------------------+